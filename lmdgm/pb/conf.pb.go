// Code generated by protoc-gen-go.
// source: conf.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ItemConfig struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Number           *int32 `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ItemConfig) Reset()                    { *m = ItemConfig{} }
func (m *ItemConfig) String() string            { return proto.CompactTextString(m) }
func (*ItemConfig) ProtoMessage()               {}
func (*ItemConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ItemConfig) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ItemConfig) GetNumber() int32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

type Effect struct {
	EffectId         *int32 `protobuf:"varint,1,opt,name=effect_id" json:"effect_id,omitempty"`
	Odds             *int32 `protobuf:"varint,2,opt,name=odds" json:"odds,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Effect) Reset()                    { *m = Effect{} }
func (m *Effect) String() string            { return proto.CompactTextString(m) }
func (*Effect) ProtoMessage()               {}
func (*Effect) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Effect) GetEffectId() int32 {
	if m != nil && m.EffectId != nil {
		return *m.EffectId
	}
	return 0
}

func (m *Effect) GetOdds() int32 {
	if m != nil && m.Odds != nil {
		return *m.Odds
	}
	return 0
}

type CritPara struct {
	Min              *int32 `protobuf:"varint,1,opt,name=min" json:"min,omitempty"`
	Max              *int32 `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
	Expected         *int32 `protobuf:"varint,3,opt,name=expected" json:"expected,omitempty"`
	Variance         *int32 `protobuf:"varint,4,opt,name=variance" json:"variance,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CritPara) Reset()                    { *m = CritPara{} }
func (m *CritPara) String() string            { return proto.CompactTextString(m) }
func (*CritPara) ProtoMessage()               {}
func (*CritPara) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CritPara) GetMin() int32 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *CritPara) GetMax() int32 {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return 0
}

func (m *CritPara) GetExpected() int32 {
	if m != nil && m.Expected != nil {
		return *m.Expected
	}
	return 0
}

func (m *CritPara) GetVariance() int32 {
	if m != nil && m.Variance != nil {
		return *m.Variance
	}
	return 0
}

type SdVector2 struct {
	X                *int32 `protobuf:"varint,1,req,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SdVector2) Reset()                    { *m = SdVector2{} }
func (m *SdVector2) String() string            { return proto.CompactTextString(m) }
func (*SdVector2) ProtoMessage()               {}
func (*SdVector2) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *SdVector2) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *SdVector2) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type PropertyValue struct {
	Propertytype     *int32 `protobuf:"varint,1,opt,name=propertytype" json:"propertytype,omitempty"`
	Propertyvalue    *int32 `protobuf:"varint,2,opt,name=propertyvalue" json:"propertyvalue,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PropertyValue) Reset()                    { *m = PropertyValue{} }
func (m *PropertyValue) String() string            { return proto.CompactTextString(m) }
func (*PropertyValue) ProtoMessage()               {}
func (*PropertyValue) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *PropertyValue) GetPropertytype() int32 {
	if m != nil && m.Propertytype != nil {
		return *m.Propertytype
	}
	return 0
}

func (m *PropertyValue) GetPropertyvalue() int32 {
	if m != nil && m.Propertyvalue != nil {
		return *m.Propertyvalue
	}
	return 0
}

type SpecialityInitPool struct {
	IsUnlockFree     *int32 `protobuf:"varint,1,opt,name=is_unlock_free" json:"is_unlock_free,omitempty"`
	InitPoolId       *int32 `protobuf:"varint,2,opt,name=init_pool_id" json:"init_pool_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SpecialityInitPool) Reset()                    { *m = SpecialityInitPool{} }
func (m *SpecialityInitPool) String() string            { return proto.CompactTextString(m) }
func (*SpecialityInitPool) ProtoMessage()               {}
func (*SpecialityInitPool) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *SpecialityInitPool) GetIsUnlockFree() int32 {
	if m != nil && m.IsUnlockFree != nil {
		return *m.IsUnlockFree
	}
	return 0
}

func (m *SpecialityInitPool) GetInitPoolId() int32 {
	if m != nil && m.InitPoolId != nil {
		return *m.InitPoolId
	}
	return 0
}

type PveNpcDate struct {
	NpcId                *int32 `protobuf:"varint,1,opt,name=npc_id" json:"npc_id,omitempty"`
	NpcGuardTargetIndex  *int32 `protobuf:"varint,2,opt,name=npc_guard_target_index" json:"npc_guard_target_index,omitempty"`
	NpcAttackTargetIndex *int32 `protobuf:"varint,3,opt,name=npc_attack_target_index" json:"npc_attack_target_index,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *PveNpcDate) Reset()                    { *m = PveNpcDate{} }
func (m *PveNpcDate) String() string            { return proto.CompactTextString(m) }
func (*PveNpcDate) ProtoMessage()               {}
func (*PveNpcDate) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *PveNpcDate) GetNpcId() int32 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

func (m *PveNpcDate) GetNpcGuardTargetIndex() int32 {
	if m != nil && m.NpcGuardTargetIndex != nil {
		return *m.NpcGuardTargetIndex
	}
	return 0
}

func (m *PveNpcDate) GetNpcAttackTargetIndex() int32 {
	if m != nil && m.NpcAttackTargetIndex != nil {
		return *m.NpcAttackTargetIndex
	}
	return 0
}

type AiAreaDescrip struct {
	Id               *int32     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AreaType         *int32     `protobuf:"varint,2,opt,name=areaType" json:"areaType,omitempty"`
	IsLeftSide       *int32     `protobuf:"varint,3,opt,name=isLeftSide" json:"isLeftSide,omitempty"`
	ShapeType        *int32     `protobuf:"varint,4,opt,name=shapeType" json:"shapeType,omitempty"`
	Pos              *SdVector2 `protobuf:"bytes,5,opt,name=pos" json:"pos,omitempty"`
	Param            []int32    `protobuf:"varint,6,rep,name=param" json:"param,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *AiAreaDescrip) Reset()                    { *m = AiAreaDescrip{} }
func (m *AiAreaDescrip) String() string            { return proto.CompactTextString(m) }
func (*AiAreaDescrip) ProtoMessage()               {}
func (*AiAreaDescrip) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *AiAreaDescrip) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AiAreaDescrip) GetAreaType() int32 {
	if m != nil && m.AreaType != nil {
		return *m.AreaType
	}
	return 0
}

func (m *AiAreaDescrip) GetIsLeftSide() int32 {
	if m != nil && m.IsLeftSide != nil {
		return *m.IsLeftSide
	}
	return 0
}

func (m *AiAreaDescrip) GetShapeType() int32 {
	if m != nil && m.ShapeType != nil {
		return *m.ShapeType
	}
	return 0
}

func (m *AiAreaDescrip) GetPos() *SdVector2 {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *AiAreaDescrip) GetParam() []int32 {
	if m != nil {
		return m.Param
	}
	return nil
}

type AiAreaDescripConfig struct {
	Data             []*AiAreaDescrip `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *AiAreaDescripConfig) Reset()                    { *m = AiAreaDescripConfig{} }
func (m *AiAreaDescripConfig) String() string            { return proto.CompactTextString(m) }
func (*AiAreaDescripConfig) ProtoMessage()               {}
func (*AiAreaDescripConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *AiAreaDescripConfig) GetData() []*AiAreaDescrip {
	if m != nil {
		return m.Data
	}
	return nil
}

type AnimationSmooth struct {
	Id               *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CurrState        *string  `protobuf:"bytes,2,opt,name=currState" json:"currState,omitempty"`
	DstState         *string  `protobuf:"bytes,3,opt,name=dstState" json:"dstState,omitempty"`
	Transition       *float32 `protobuf:"fixed32,4,opt,name=transition" json:"transition,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AnimationSmooth) Reset()                    { *m = AnimationSmooth{} }
func (m *AnimationSmooth) String() string            { return proto.CompactTextString(m) }
func (*AnimationSmooth) ProtoMessage()               {}
func (*AnimationSmooth) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *AnimationSmooth) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AnimationSmooth) GetCurrState() string {
	if m != nil && m.CurrState != nil {
		return *m.CurrState
	}
	return ""
}

func (m *AnimationSmooth) GetDstState() string {
	if m != nil && m.DstState != nil {
		return *m.DstState
	}
	return ""
}

func (m *AnimationSmooth) GetTransition() float32 {
	if m != nil && m.Transition != nil {
		return *m.Transition
	}
	return 0
}

type AnimationSmoothConfig struct {
	Data             []*AnimationSmooth `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *AnimationSmoothConfig) Reset()                    { *m = AnimationSmoothConfig{} }
func (m *AnimationSmoothConfig) String() string            { return proto.CompactTextString(m) }
func (*AnimationSmoothConfig) ProtoMessage()               {}
func (*AnimationSmoothConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *AnimationSmoothConfig) GetData() []*AnimationSmooth {
	if m != nil {
		return m.Data
	}
	return nil
}

type BallPosition struct {
	Id               *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Playercount      *int32   `protobuf:"varint,2,opt,name=playercount" json:"playercount,omitempty"`
	Flag             *int32   `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
	PoxX             *float32 `protobuf:"fixed32,4,opt,name=pox_x" json:"pox_x,omitempty"`
	PosY             *float32 `protobuf:"fixed32,5,opt,name=pos_y" json:"pos_y,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,6,opt,name=pos_z" json:"pos_z,omitempty"`
	RotateX          *float32 `protobuf:"fixed32,7,opt,name=rotate_x" json:"rotate_x,omitempty"`
	RotateY          *float32 `protobuf:"fixed32,8,opt,name=rotate_y" json:"rotate_y,omitempty"`
	RotateZ          *float32 `protobuf:"fixed32,9,opt,name=rotate_z" json:"rotate_z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BallPosition) Reset()                    { *m = BallPosition{} }
func (m *BallPosition) String() string            { return proto.CompactTextString(m) }
func (*BallPosition) ProtoMessage()               {}
func (*BallPosition) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *BallPosition) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BallPosition) GetPlayercount() int32 {
	if m != nil && m.Playercount != nil {
		return *m.Playercount
	}
	return 0
}

func (m *BallPosition) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *BallPosition) GetPoxX() float32 {
	if m != nil && m.PoxX != nil {
		return *m.PoxX
	}
	return 0
}

func (m *BallPosition) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *BallPosition) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *BallPosition) GetRotateX() float32 {
	if m != nil && m.RotateX != nil {
		return *m.RotateX
	}
	return 0
}

func (m *BallPosition) GetRotateY() float32 {
	if m != nil && m.RotateY != nil {
		return *m.RotateY
	}
	return 0
}

func (m *BallPosition) GetRotateZ() float32 {
	if m != nil && m.RotateZ != nil {
		return *m.RotateZ
	}
	return 0
}

type BallPositionConfig struct {
	Data             []*BallPosition `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *BallPositionConfig) Reset()                    { *m = BallPositionConfig{} }
func (m *BallPositionConfig) String() string            { return proto.CompactTextString(m) }
func (*BallPositionConfig) ProtoMessage()               {}
func (*BallPositionConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *BallPositionConfig) GetData() []*BallPosition {
	if m != nil {
		return m.Data
	}
	return nil
}

type BattleParameter struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MultiplePara_1   *int32 `protobuf:"varint,2,opt,name=multiple_para_1" json:"multiple_para_1,omitempty"`
	MultiplePara_2   *int32 `protobuf:"varint,3,opt,name=multiple_para_2" json:"multiple_para_2,omitempty"`
	MultiplePara_3   *int32 `protobuf:"varint,4,opt,name=multiple_para_3" json:"multiple_para_3,omitempty"`
	MultiplePara_4   *int32 `protobuf:"varint,5,opt,name=multiple_para_4" json:"multiple_para_4,omitempty"`
	MultiplePara_5   *int32 `protobuf:"varint,6,opt,name=multiple_para_5" json:"multiple_para_5,omitempty"`
	BasePara_1       *int32 `protobuf:"varint,7,opt,name=base_para_1" json:"base_para_1,omitempty"`
	BasePara_2       *int32 `protobuf:"varint,8,opt,name=base_para_2" json:"base_para_2,omitempty"`
	BasePara_3       *int32 `protobuf:"varint,9,opt,name=base_para_3" json:"base_para_3,omitempty"`
	BasePara_4       *int32 `protobuf:"varint,10,opt,name=base_para_4" json:"base_para_4,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BattleParameter) Reset()                    { *m = BattleParameter{} }
func (m *BattleParameter) String() string            { return proto.CompactTextString(m) }
func (*BattleParameter) ProtoMessage()               {}
func (*BattleParameter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *BattleParameter) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BattleParameter) GetMultiplePara_1() int32 {
	if m != nil && m.MultiplePara_1 != nil {
		return *m.MultiplePara_1
	}
	return 0
}

func (m *BattleParameter) GetMultiplePara_2() int32 {
	if m != nil && m.MultiplePara_2 != nil {
		return *m.MultiplePara_2
	}
	return 0
}

func (m *BattleParameter) GetMultiplePara_3() int32 {
	if m != nil && m.MultiplePara_3 != nil {
		return *m.MultiplePara_3
	}
	return 0
}

func (m *BattleParameter) GetMultiplePara_4() int32 {
	if m != nil && m.MultiplePara_4 != nil {
		return *m.MultiplePara_4
	}
	return 0
}

func (m *BattleParameter) GetMultiplePara_5() int32 {
	if m != nil && m.MultiplePara_5 != nil {
		return *m.MultiplePara_5
	}
	return 0
}

func (m *BattleParameter) GetBasePara_1() int32 {
	if m != nil && m.BasePara_1 != nil {
		return *m.BasePara_1
	}
	return 0
}

func (m *BattleParameter) GetBasePara_2() int32 {
	if m != nil && m.BasePara_2 != nil {
		return *m.BasePara_2
	}
	return 0
}

func (m *BattleParameter) GetBasePara_3() int32 {
	if m != nil && m.BasePara_3 != nil {
		return *m.BasePara_3
	}
	return 0
}

func (m *BattleParameter) GetBasePara_4() int32 {
	if m != nil && m.BasePara_4 != nil {
		return *m.BasePara_4
	}
	return 0
}

type BattleParameterConfig struct {
	Data             []*BattleParameter `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *BattleParameterConfig) Reset()                    { *m = BattleParameterConfig{} }
func (m *BattleParameterConfig) String() string            { return proto.CompactTextString(m) }
func (*BattleParameterConfig) ProtoMessage()               {}
func (*BattleParameterConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *BattleParameterConfig) GetData() []*BattleParameter {
	if m != nil {
		return m.Data
	}
	return nil
}

type CostAll struct {
	Times                *int32 `protobuf:"varint,1,opt,name=times" json:"times,omitempty"`
	SpecialityResetRatio *int32 `protobuf:"varint,2,opt,name=speciality_reset_ratio" json:"speciality_reset_ratio,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *CostAll) Reset()                    { *m = CostAll{} }
func (m *CostAll) String() string            { return proto.CompactTextString(m) }
func (*CostAll) ProtoMessage()               {}
func (*CostAll) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *CostAll) GetTimes() int32 {
	if m != nil && m.Times != nil {
		return *m.Times
	}
	return 0
}

func (m *CostAll) GetSpecialityResetRatio() int32 {
	if m != nil && m.SpecialityResetRatio != nil {
		return *m.SpecialityResetRatio
	}
	return 0
}

type CostAllConfig struct {
	Data             []*CostAll `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CostAllConfig) Reset()                    { *m = CostAllConfig{} }
func (m *CostAllConfig) String() string            { return proto.CompactTextString(m) }
func (*CostAllConfig) ProtoMessage()               {}
func (*CostAllConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *CostAllConfig) GetData() []*CostAll {
	if m != nil {
		return m.Data
	}
	return nil
}

type CourtTimeParameter struct {
	MatchTime              *int32   `protobuf:"varint,1,opt,name=match_time" json:"match_time,omitempty"`
	TimeShotClockViolation *int32   `protobuf:"varint,2,opt,name=time_shot_clock_violation" json:"time_shot_clock_violation,omitempty"`
	TimeExchangeCourt      *int32   `protobuf:"varint,3,opt,name=time_exchange_court" json:"time_exchange_court,omitempty"`
	HalfLength             *float32 `protobuf:"fixed32,4,opt,name=half_length" json:"half_length,omitempty"`
	HalfWidth              *float32 `protobuf:"fixed32,5,opt,name=half_width" json:"half_width,omitempty"`
	ThreeRectLength        *float32 `protobuf:"fixed32,6,opt,name=three_rect_length" json:"three_rect_length,omitempty"`
	ThreeRectWidth         *float32 `protobuf:"fixed32,7,opt,name=three_rect_width" json:"three_rect_width,omitempty"`
	HoolLeaveBoarder       *float32 `protobuf:"fixed32,8,opt,name=hool_leave_boarder" json:"hool_leave_boarder,omitempty"`
	ThreeLineLeaveHool     *float32 `protobuf:"fixed32,9,opt,name=three_line_leave_hool" json:"three_line_leave_hool,omitempty"`
	HoolHeight             *float32 `protobuf:"fixed32,10,opt,name=hool_height" json:"hool_height,omitempty"`
	MatchPreReadyTime      *float32 `protobuf:"fixed32,11,opt,name=match_pre_ready_time" json:"match_pre_ready_time,omitempty"`
	MatchMaxTime           *float32 `protobuf:"fixed32,12,opt,name=match_max_time" json:"match_max_time,omitempty"`
	MatchReadyTime         *float32 `protobuf:"fixed32,13,opt,name=match_ready_time" json:"match_ready_time,omitempty"`
	MatchPauseTime         *float32 `protobuf:"fixed32,14,opt,name=match_pause_time" json:"match_pause_time,omitempty"`
	MatchFadeinTime        *float32 `protobuf:"fixed32,15,opt,name=match_fadein_time" json:"match_fadein_time,omitempty"`
	MatchBlackTime         *float32 `protobuf:"fixed32,16,opt,name=match_black_time" json:"match_black_time,omitempty"`
	MatchFadeoutTime       *float32 `protobuf:"fixed32,17,opt,name=match_fadeout_time" json:"match_fadeout_time,omitempty"`
	MatchServeWaitTime     *float32 `protobuf:"fixed32,18,opt,name=match_serve_wait_time" json:"match_serve_wait_time,omitempty"`
	MatchSwitchPlayerTime  *float32 `protobuf:"fixed32,19,opt,name=match_switch_player_time" json:"match_switch_player_time,omitempty"`
	XXX_unrecognized       []byte   `json:"-"`
}

func (m *CourtTimeParameter) Reset()                    { *m = CourtTimeParameter{} }
func (m *CourtTimeParameter) String() string            { return proto.CompactTextString(m) }
func (*CourtTimeParameter) ProtoMessage()               {}
func (*CourtTimeParameter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *CourtTimeParameter) GetMatchTime() int32 {
	if m != nil && m.MatchTime != nil {
		return *m.MatchTime
	}
	return 0
}

func (m *CourtTimeParameter) GetTimeShotClockViolation() int32 {
	if m != nil && m.TimeShotClockViolation != nil {
		return *m.TimeShotClockViolation
	}
	return 0
}

func (m *CourtTimeParameter) GetTimeExchangeCourt() int32 {
	if m != nil && m.TimeExchangeCourt != nil {
		return *m.TimeExchangeCourt
	}
	return 0
}

func (m *CourtTimeParameter) GetHalfLength() float32 {
	if m != nil && m.HalfLength != nil {
		return *m.HalfLength
	}
	return 0
}

func (m *CourtTimeParameter) GetHalfWidth() float32 {
	if m != nil && m.HalfWidth != nil {
		return *m.HalfWidth
	}
	return 0
}

func (m *CourtTimeParameter) GetThreeRectLength() float32 {
	if m != nil && m.ThreeRectLength != nil {
		return *m.ThreeRectLength
	}
	return 0
}

func (m *CourtTimeParameter) GetThreeRectWidth() float32 {
	if m != nil && m.ThreeRectWidth != nil {
		return *m.ThreeRectWidth
	}
	return 0
}

func (m *CourtTimeParameter) GetHoolLeaveBoarder() float32 {
	if m != nil && m.HoolLeaveBoarder != nil {
		return *m.HoolLeaveBoarder
	}
	return 0
}

func (m *CourtTimeParameter) GetThreeLineLeaveHool() float32 {
	if m != nil && m.ThreeLineLeaveHool != nil {
		return *m.ThreeLineLeaveHool
	}
	return 0
}

func (m *CourtTimeParameter) GetHoolHeight() float32 {
	if m != nil && m.HoolHeight != nil {
		return *m.HoolHeight
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchPreReadyTime() float32 {
	if m != nil && m.MatchPreReadyTime != nil {
		return *m.MatchPreReadyTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchMaxTime() float32 {
	if m != nil && m.MatchMaxTime != nil {
		return *m.MatchMaxTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchReadyTime() float32 {
	if m != nil && m.MatchReadyTime != nil {
		return *m.MatchReadyTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchPauseTime() float32 {
	if m != nil && m.MatchPauseTime != nil {
		return *m.MatchPauseTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchFadeinTime() float32 {
	if m != nil && m.MatchFadeinTime != nil {
		return *m.MatchFadeinTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchBlackTime() float32 {
	if m != nil && m.MatchBlackTime != nil {
		return *m.MatchBlackTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchFadeoutTime() float32 {
	if m != nil && m.MatchFadeoutTime != nil {
		return *m.MatchFadeoutTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchServeWaitTime() float32 {
	if m != nil && m.MatchServeWaitTime != nil {
		return *m.MatchServeWaitTime
	}
	return 0
}

func (m *CourtTimeParameter) GetMatchSwitchPlayerTime() float32 {
	if m != nil && m.MatchSwitchPlayerTime != nil {
		return *m.MatchSwitchPlayerTime
	}
	return 0
}

type CourtTimeParameterConfig struct {
	Data             []*CourtTimeParameter `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CourtTimeParameterConfig) Reset()                    { *m = CourtTimeParameterConfig{} }
func (m *CourtTimeParameterConfig) String() string            { return proto.CompactTextString(m) }
func (*CourtTimeParameterConfig) ProtoMessage()               {}
func (*CourtTimeParameterConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *CourtTimeParameterConfig) GetData() []*CourtTimeParameter {
	if m != nil {
		return m.Data
	}
	return nil
}

type DropMatching struct {
	MatchingType     *int32      `protobuf:"varint,1,opt,name=matching_type" json:"matching_type,omitempty"`
	WinExp           *ItemConfig `protobuf:"bytes,2,opt,name=win_exp" json:"win_exp,omitempty"`
	WinGold          *ItemConfig `protobuf:"bytes,3,opt,name=win_gold" json:"win_gold,omitempty"`
	FailExp          *ItemConfig `protobuf:"bytes,4,opt,name=fail_exp" json:"fail_exp,omitempty"`
	FailGold         *ItemConfig `protobuf:"bytes,5,opt,name=fail_gold" json:"fail_gold,omitempty"`
	MvpExtraGold     *ItemConfig `protobuf:"bytes,6,opt,name=mvp_extra_gold" json:"mvp_extra_gold,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *DropMatching) Reset()                    { *m = DropMatching{} }
func (m *DropMatching) String() string            { return proto.CompactTextString(m) }
func (*DropMatching) ProtoMessage()               {}
func (*DropMatching) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *DropMatching) GetMatchingType() int32 {
	if m != nil && m.MatchingType != nil {
		return *m.MatchingType
	}
	return 0
}

func (m *DropMatching) GetWinExp() *ItemConfig {
	if m != nil {
		return m.WinExp
	}
	return nil
}

func (m *DropMatching) GetWinGold() *ItemConfig {
	if m != nil {
		return m.WinGold
	}
	return nil
}

func (m *DropMatching) GetFailExp() *ItemConfig {
	if m != nil {
		return m.FailExp
	}
	return nil
}

func (m *DropMatching) GetFailGold() *ItemConfig {
	if m != nil {
		return m.FailGold
	}
	return nil
}

func (m *DropMatching) GetMvpExtraGold() *ItemConfig {
	if m != nil {
		return m.MvpExtraGold
	}
	return nil
}

type DropMatchingConfig struct {
	Data             []*DropMatching `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *DropMatchingConfig) Reset()                    { *m = DropMatchingConfig{} }
func (m *DropMatchingConfig) String() string            { return proto.CompactTextString(m) }
func (*DropMatchingConfig) ProtoMessage()               {}
func (*DropMatchingConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *DropMatchingConfig) GetData() []*DropMatching {
	if m != nil {
		return m.Data
	}
	return nil
}

type FightConstParameter struct {
	GuardMinStayTime      *float32 `protobuf:"fixed32,1,opt,name=guard_min_stay_time" json:"guard_min_stay_time,omitempty"`
	SuperShoot            *float32 `protobuf:"fixed32,2,opt,name=super_shoot" json:"super_shoot,omitempty"`
	BoxOutRange           *float32 `protobuf:"fixed32,3,opt,name=box_out_range" json:"box_out_range,omitempty"`
	AirBallWeek           *int32   `protobuf:"varint,4,opt,name=air_ball_week" json:"air_ball_week,omitempty"`
	AirBallSuperShot      *int32   `protobuf:"varint,5,opt,name=air_ball_super_shot" json:"air_ball_super_shot,omitempty"`
	OpeningShowTime       *int32   `protobuf:"varint,6,opt,name=opening_show_time" json:"opening_show_time,omitempty"`
	PassSafeDistance_1    *int32   `protobuf:"varint,7,opt,name=pass_safe_distance_1" json:"pass_safe_distance_1,omitempty"`
	PassSafeDistance_2    *int32   `protobuf:"varint,8,opt,name=pass_safe_distance_2" json:"pass_safe_distance_2,omitempty"`
	DefenceBaseAngle      *int32   `protobuf:"varint,9,opt,name=defence_base_angle" json:"defence_base_angle,omitempty"`
	DefenceBaseRadius     *int32   `protobuf:"varint,10,opt,name=defence_base_radius" json:"defence_base_radius,omitempty"`
	EmojiDesplayTime      *int32   `protobuf:"varint,11,opt,name=emoji_desplay_time" json:"emoji_desplay_time,omitempty"`
	EmojiCd               *int32   `protobuf:"varint,12,opt,name=emoji_cd" json:"emoji_cd,omitempty"`
	EmojiChoseDesplayTime *int32   `protobuf:"varint,13,opt,name=emoji_chose_desplay_time" json:"emoji_chose_desplay_time,omitempty"`
	XXX_unrecognized      []byte   `json:"-"`
}

func (m *FightConstParameter) Reset()                    { *m = FightConstParameter{} }
func (m *FightConstParameter) String() string            { return proto.CompactTextString(m) }
func (*FightConstParameter) ProtoMessage()               {}
func (*FightConstParameter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *FightConstParameter) GetGuardMinStayTime() float32 {
	if m != nil && m.GuardMinStayTime != nil {
		return *m.GuardMinStayTime
	}
	return 0
}

func (m *FightConstParameter) GetSuperShoot() float32 {
	if m != nil && m.SuperShoot != nil {
		return *m.SuperShoot
	}
	return 0
}

func (m *FightConstParameter) GetBoxOutRange() float32 {
	if m != nil && m.BoxOutRange != nil {
		return *m.BoxOutRange
	}
	return 0
}

func (m *FightConstParameter) GetAirBallWeek() int32 {
	if m != nil && m.AirBallWeek != nil {
		return *m.AirBallWeek
	}
	return 0
}

func (m *FightConstParameter) GetAirBallSuperShot() int32 {
	if m != nil && m.AirBallSuperShot != nil {
		return *m.AirBallSuperShot
	}
	return 0
}

func (m *FightConstParameter) GetOpeningShowTime() int32 {
	if m != nil && m.OpeningShowTime != nil {
		return *m.OpeningShowTime
	}
	return 0
}

func (m *FightConstParameter) GetPassSafeDistance_1() int32 {
	if m != nil && m.PassSafeDistance_1 != nil {
		return *m.PassSafeDistance_1
	}
	return 0
}

func (m *FightConstParameter) GetPassSafeDistance_2() int32 {
	if m != nil && m.PassSafeDistance_2 != nil {
		return *m.PassSafeDistance_2
	}
	return 0
}

func (m *FightConstParameter) GetDefenceBaseAngle() int32 {
	if m != nil && m.DefenceBaseAngle != nil {
		return *m.DefenceBaseAngle
	}
	return 0
}

func (m *FightConstParameter) GetDefenceBaseRadius() int32 {
	if m != nil && m.DefenceBaseRadius != nil {
		return *m.DefenceBaseRadius
	}
	return 0
}

func (m *FightConstParameter) GetEmojiDesplayTime() int32 {
	if m != nil && m.EmojiDesplayTime != nil {
		return *m.EmojiDesplayTime
	}
	return 0
}

func (m *FightConstParameter) GetEmojiCd() int32 {
	if m != nil && m.EmojiCd != nil {
		return *m.EmojiCd
	}
	return 0
}

func (m *FightConstParameter) GetEmojiChoseDesplayTime() int32 {
	if m != nil && m.EmojiChoseDesplayTime != nil {
		return *m.EmojiChoseDesplayTime
	}
	return 0
}

type FightConstParameterConfig struct {
	Data             []*FightConstParameter `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *FightConstParameterConfig) Reset()                    { *m = FightConstParameterConfig{} }
func (m *FightConstParameterConfig) String() string            { return proto.CompactTextString(m) }
func (*FightConstParameterConfig) ProtoMessage()               {}
func (*FightConstParameterConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *FightConstParameterConfig) GetData() []*FightConstParameter {
	if m != nil {
		return m.Data
	}
	return nil
}

type FragmentCompound struct {
	FragmentId       *int32      `protobuf:"varint,1,opt,name=fragment_id" json:"fragment_id,omitempty"`
	CompoundType     *int32      `protobuf:"varint,2,opt,name=compound_type" json:"compound_type,omitempty"`
	CompoundTarget   *int32      `protobuf:"varint,3,opt,name=compound_target" json:"compound_target,omitempty"`
	RequireNum       *int32      `protobuf:"varint,4,opt,name=require_num" json:"require_num,omitempty"`
	RequireOther     *ItemConfig `protobuf:"bytes,5,opt,name=require_other" json:"require_other,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *FragmentCompound) Reset()                    { *m = FragmentCompound{} }
func (m *FragmentCompound) String() string            { return proto.CompactTextString(m) }
func (*FragmentCompound) ProtoMessage()               {}
func (*FragmentCompound) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *FragmentCompound) GetFragmentId() int32 {
	if m != nil && m.FragmentId != nil {
		return *m.FragmentId
	}
	return 0
}

func (m *FragmentCompound) GetCompoundType() int32 {
	if m != nil && m.CompoundType != nil {
		return *m.CompoundType
	}
	return 0
}

func (m *FragmentCompound) GetCompoundTarget() int32 {
	if m != nil && m.CompoundTarget != nil {
		return *m.CompoundTarget
	}
	return 0
}

func (m *FragmentCompound) GetRequireNum() int32 {
	if m != nil && m.RequireNum != nil {
		return *m.RequireNum
	}
	return 0
}

func (m *FragmentCompound) GetRequireOther() *ItemConfig {
	if m != nil {
		return m.RequireOther
	}
	return nil
}

type FragmentCompoundConfig struct {
	Data             []*FragmentCompound `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *FragmentCompoundConfig) Reset()                    { *m = FragmentCompoundConfig{} }
func (m *FragmentCompoundConfig) String() string            { return proto.CompactTextString(m) }
func (*FragmentCompoundConfig) ProtoMessage()               {}
func (*FragmentCompoundConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *FragmentCompoundConfig) GetData() []*FragmentCompound {
	if m != nil {
		return m.Data
	}
	return nil
}

type ItemBase struct {
	ItemId           *int32      `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	ItemName         *string     `protobuf:"bytes,2,opt,name=item_name" json:"item_name,omitempty"`
	ItemType         *int32      `protobuf:"varint,3,opt,name=item_type" json:"item_type,omitempty"`
	ItemQuality      *int32      `protobuf:"varint,4,opt,name=item_quality" json:"item_quality,omitempty"`
	OverlayNum       *int32      `protobuf:"varint,5,opt,name=overlay_num" json:"overlay_num,omitempty"`
	IsSell           *int32      `protobuf:"varint,6,opt,name=is_sell" json:"is_sell,omitempty"`
	ItemSell         *ItemConfig `protobuf:"bytes,7,opt,name=item_sell" json:"item_sell,omitempty"`
	IsUse            *int32      `protobuf:"varint,8,opt,name=is_use" json:"is_use,omitempty"`
	UseResultType    *int32      `protobuf:"varint,9,opt,name=use_result_type" json:"use_result_type,omitempty"`
	UseResultValue   *int32      `protobuf:"varint,10,opt,name=use_result_value" json:"use_result_value,omitempty"`
	OddsId           *int32      `protobuf:"varint,11,opt,name=odds_id" json:"odds_id,omitempty"`
	IconId           *int32      `protobuf:"varint,12,opt,name=icon_id" json:"icon_id,omitempty"`
	ItemDescribe     *string     `protobuf:"bytes,13,opt,name=item_describe" json:"item_describe,omitempty"`
	EndTime          *string     `protobuf:"bytes,14,opt,name=end_time" json:"end_time,omitempty"`
	UseRequireLv     *int32      `protobuf:"varint,15,opt,name=use_require_lv" json:"use_require_lv,omitempty"`
	UseRequireVipLv  *int32      `protobuf:"varint,16,opt,name=use_require_vip_lv" json:"use_require_vip_lv,omitempty"`
	BagListItemType  *int32      `protobuf:"varint,17,opt,name=bag_list_item_type" json:"bag_list_item_type,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ItemBase) Reset()                    { *m = ItemBase{} }
func (m *ItemBase) String() string            { return proto.CompactTextString(m) }
func (*ItemBase) ProtoMessage()               {}
func (*ItemBase) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *ItemBase) GetItemId() int32 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *ItemBase) GetItemName() string {
	if m != nil && m.ItemName != nil {
		return *m.ItemName
	}
	return ""
}

func (m *ItemBase) GetItemType() int32 {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return 0
}

func (m *ItemBase) GetItemQuality() int32 {
	if m != nil && m.ItemQuality != nil {
		return *m.ItemQuality
	}
	return 0
}

func (m *ItemBase) GetOverlayNum() int32 {
	if m != nil && m.OverlayNum != nil {
		return *m.OverlayNum
	}
	return 0
}

func (m *ItemBase) GetIsSell() int32 {
	if m != nil && m.IsSell != nil {
		return *m.IsSell
	}
	return 0
}

func (m *ItemBase) GetItemSell() *ItemConfig {
	if m != nil {
		return m.ItemSell
	}
	return nil
}

func (m *ItemBase) GetIsUse() int32 {
	if m != nil && m.IsUse != nil {
		return *m.IsUse
	}
	return 0
}

func (m *ItemBase) GetUseResultType() int32 {
	if m != nil && m.UseResultType != nil {
		return *m.UseResultType
	}
	return 0
}

func (m *ItemBase) GetUseResultValue() int32 {
	if m != nil && m.UseResultValue != nil {
		return *m.UseResultValue
	}
	return 0
}

func (m *ItemBase) GetOddsId() int32 {
	if m != nil && m.OddsId != nil {
		return *m.OddsId
	}
	return 0
}

func (m *ItemBase) GetIconId() int32 {
	if m != nil && m.IconId != nil {
		return *m.IconId
	}
	return 0
}

func (m *ItemBase) GetItemDescribe() string {
	if m != nil && m.ItemDescribe != nil {
		return *m.ItemDescribe
	}
	return ""
}

func (m *ItemBase) GetEndTime() string {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return ""
}

func (m *ItemBase) GetUseRequireLv() int32 {
	if m != nil && m.UseRequireLv != nil {
		return *m.UseRequireLv
	}
	return 0
}

func (m *ItemBase) GetUseRequireVipLv() int32 {
	if m != nil && m.UseRequireVipLv != nil {
		return *m.UseRequireVipLv
	}
	return 0
}

func (m *ItemBase) GetBagListItemType() int32 {
	if m != nil && m.BagListItemType != nil {
		return *m.BagListItemType
	}
	return 0
}

type ItemBaseConfig struct {
	Data             []*ItemBase `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ItemBaseConfig) Reset()                    { *m = ItemBaseConfig{} }
func (m *ItemBaseConfig) String() string            { return proto.CompactTextString(m) }
func (*ItemBaseConfig) ProtoMessage()               {}
func (*ItemBaseConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *ItemBaseConfig) GetData() []*ItemBase {
	if m != nil {
		return m.Data
	}
	return nil
}

type Locale struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Locale) Reset()                    { *m = Locale{} }
func (m *Locale) String() string            { return proto.CompactTextString(m) }
func (*Locale) ProtoMessage()               {}
func (*Locale) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

func (m *Locale) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Locale) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type LocaleConfig struct {
	Data             []*Locale `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *LocaleConfig) Reset()                    { *m = LocaleConfig{} }
func (m *LocaleConfig) String() string            { return proto.CompactTextString(m) }
func (*LocaleConfig) ProtoMessage()               {}
func (*LocaleConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *LocaleConfig) GetData() []*Locale {
	if m != nil {
		return m.Data
	}
	return nil
}

type NpcMain struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PlayerId         *int32 `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty"`
	PlayerLevel      *int32 `protobuf:"varint,3,opt,name=player_level" json:"player_level,omitempty"`
	AiId             *int32 `protobuf:"varint,4,opt,name=ai_id" json:"ai_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NpcMain) Reset()                    { *m = NpcMain{} }
func (m *NpcMain) String() string            { return proto.CompactTextString(m) }
func (*NpcMain) ProtoMessage()               {}
func (*NpcMain) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *NpcMain) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *NpcMain) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *NpcMain) GetPlayerLevel() int32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

func (m *NpcMain) GetAiId() int32 {
	if m != nil && m.AiId != nil {
		return *m.AiId
	}
	return 0
}

type NpcMainConfig struct {
	Data             []*NpcMain `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *NpcMainConfig) Reset()                    { *m = NpcMainConfig{} }
func (m *NpcMainConfig) String() string            { return proto.CompactTextString(m) }
func (*NpcMainConfig) ProtoMessage()               {}
func (*NpcMainConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{30} }

func (m *NpcMainConfig) GetData() []*NpcMain {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerModel struct {
	Id               *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Modetype         *string  `protobuf:"bytes,2,opt,name=modetype" json:"modetype,omitempty"`
	ModeName         *string  `protobuf:"bytes,3,opt,name=modeName" json:"modeName,omitempty"`
	Scale            *int32   `protobuf:"varint,4,opt,name=scale" json:"scale,omitempty"`
	HeadUiHeight     *float32 `protobuf:"fixed32,5,opt,name=head_ui_height" json:"head_ui_height,omitempty"`
	Identification   *string  `protobuf:"bytes,6,opt,name=identification" json:"identification,omitempty"`
	SpecialAnimation []string `protobuf:"bytes,7,rep,name=specialAnimation" json:"specialAnimation,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PlayerModel) Reset()                    { *m = PlayerModel{} }
func (m *PlayerModel) String() string            { return proto.CompactTextString(m) }
func (*PlayerModel) ProtoMessage()               {}
func (*PlayerModel) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{31} }

func (m *PlayerModel) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PlayerModel) GetModetype() string {
	if m != nil && m.Modetype != nil {
		return *m.Modetype
	}
	return ""
}

func (m *PlayerModel) GetModeName() string {
	if m != nil && m.ModeName != nil {
		return *m.ModeName
	}
	return ""
}

func (m *PlayerModel) GetScale() int32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *PlayerModel) GetHeadUiHeight() float32 {
	if m != nil && m.HeadUiHeight != nil {
		return *m.HeadUiHeight
	}
	return 0
}

func (m *PlayerModel) GetIdentification() string {
	if m != nil && m.Identification != nil {
		return *m.Identification
	}
	return ""
}

func (m *PlayerModel) GetSpecialAnimation() []string {
	if m != nil {
		return m.SpecialAnimation
	}
	return nil
}

type PlayerModelConfig struct {
	Data             []*PlayerModel `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *PlayerModelConfig) Reset()                    { *m = PlayerModelConfig{} }
func (m *PlayerModelConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerModelConfig) ProtoMessage()               {}
func (*PlayerModelConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{32} }

func (m *PlayerModelConfig) GetData() []*PlayerModel {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerProperty struct {
	PropertyId       *int32  `protobuf:"varint,1,opt,name=property_id" json:"property_id,omitempty"`
	PropertyName     *string `protobuf:"bytes,2,opt,name=property_name" json:"property_name,omitempty"`
	PropertyType     *int32  `protobuf:"varint,3,opt,name=property_type" json:"property_type,omitempty"`
	PropertyEnum     *string `protobuf:"bytes,4,opt,name=property_enum" json:"property_enum,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerProperty) Reset()                    { *m = PlayerProperty{} }
func (m *PlayerProperty) String() string            { return proto.CompactTextString(m) }
func (*PlayerProperty) ProtoMessage()               {}
func (*PlayerProperty) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{33} }

func (m *PlayerProperty) GetPropertyId() int32 {
	if m != nil && m.PropertyId != nil {
		return *m.PropertyId
	}
	return 0
}

func (m *PlayerProperty) GetPropertyName() string {
	if m != nil && m.PropertyName != nil {
		return *m.PropertyName
	}
	return ""
}

func (m *PlayerProperty) GetPropertyType() int32 {
	if m != nil && m.PropertyType != nil {
		return *m.PropertyType
	}
	return 0
}

func (m *PlayerProperty) GetPropertyEnum() string {
	if m != nil && m.PropertyEnum != nil {
		return *m.PropertyEnum
	}
	return ""
}

type PlayerPropertyConfig struct {
	Data             []*PlayerProperty `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PlayerPropertyConfig) Reset()                    { *m = PlayerPropertyConfig{} }
func (m *PlayerPropertyConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerPropertyConfig) ProtoMessage()               {}
func (*PlayerPropertyConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{34} }

func (m *PlayerPropertyConfig) GetData() []*PlayerProperty {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerPropertyQuality struct {
	PropertyId       *int32  `protobuf:"varint,1,opt,name=property_id" json:"property_id,omitempty"`
	PropertyName     *string `protobuf:"bytes,2,opt,name=property_name" json:"property_name,omitempty"`
	PropertyMax      *int32  `protobuf:"varint,3,opt,name=property_max" json:"property_max,omitempty"`
	PropertySs       *int32  `protobuf:"varint,4,opt,name=property_ss" json:"property_ss,omitempty"`
	PropertyS        *int32  `protobuf:"varint,5,opt,name=property_s" json:"property_s,omitempty"`
	PropertyA        *int32  `protobuf:"varint,6,opt,name=property_a" json:"property_a,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerPropertyQuality) Reset()                    { *m = PlayerPropertyQuality{} }
func (m *PlayerPropertyQuality) String() string            { return proto.CompactTextString(m) }
func (*PlayerPropertyQuality) ProtoMessage()               {}
func (*PlayerPropertyQuality) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{35} }

func (m *PlayerPropertyQuality) GetPropertyId() int32 {
	if m != nil && m.PropertyId != nil {
		return *m.PropertyId
	}
	return 0
}

func (m *PlayerPropertyQuality) GetPropertyName() string {
	if m != nil && m.PropertyName != nil {
		return *m.PropertyName
	}
	return ""
}

func (m *PlayerPropertyQuality) GetPropertyMax() int32 {
	if m != nil && m.PropertyMax != nil {
		return *m.PropertyMax
	}
	return 0
}

func (m *PlayerPropertyQuality) GetPropertySs() int32 {
	if m != nil && m.PropertySs != nil {
		return *m.PropertySs
	}
	return 0
}

func (m *PlayerPropertyQuality) GetPropertyS() int32 {
	if m != nil && m.PropertyS != nil {
		return *m.PropertyS
	}
	return 0
}

func (m *PlayerPropertyQuality) GetPropertyA() int32 {
	if m != nil && m.PropertyA != nil {
		return *m.PropertyA
	}
	return 0
}

type PlayerPropertyQualityConfig struct {
	Data             []*PlayerPropertyQuality `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *PlayerPropertyQualityConfig) Reset()                    { *m = PlayerPropertyQualityConfig{} }
func (m *PlayerPropertyQualityConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerPropertyQualityConfig) ProtoMessage()               {}
func (*PlayerPropertyQualityConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{36} }

func (m *PlayerPropertyQualityConfig) GetData() []*PlayerPropertyQuality {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerSelect struct {
	SelectId             *int32      `protobuf:"varint,1,opt,name=select_id" json:"select_id,omitempty"`
	SelectType           *int32      `protobuf:"varint,2,opt,name=select_type" json:"select_type,omitempty"`
	SelectName           *string     `protobuf:"bytes,3,opt,name=select_name" json:"select_name,omitempty"`
	SelectDescribe       *string     `protobuf:"bytes,4,opt,name=select_describe" json:"select_describe,omitempty"`
	OpenRequirement      *int32      `protobuf:"varint,5,opt,name=open_requirement" json:"open_requirement,omitempty"`
	RequirementValue     *int32      `protobuf:"varint,6,opt,name=requirement_value" json:"requirement_value,omitempty"`
	FreeTimesEveryday    *int32      `protobuf:"varint,7,opt,name=free_times_everyday" json:"free_times_everyday,omitempty"`
	FreeCd               *int32      `protobuf:"varint,8,opt,name=free_cd" json:"free_cd,omitempty"`
	SelectNum            *int32      `protobuf:"varint,9,opt,name=select_num" json:"select_num,omitempty"`
	SelectBunus          *ItemConfig `protobuf:"bytes,10,opt,name=select_bunus" json:"select_bunus,omitempty"`
	FreeSelectPackage    *int32      `protobuf:"varint,11,opt,name=free_select_package" json:"free_select_package,omitempty"`
	FirstSelectPackId    *int32      `protobuf:"varint,12,opt,name=first_select_pack_id" json:"first_select_pack_id,omitempty"`
	MormalPackId         *int32      `protobuf:"varint,13,opt,name=mormal_pack_id" json:"mormal_pack_id,omitempty"`
	LuckyNum             *int32      `protobuf:"varint,14,opt,name=lucky_num" json:"lucky_num,omitempty"`
	LuckySelectPackId    *int32      `protobuf:"varint,15,opt,name=lucky_select_pack_id" json:"lucky_select_pack_id,omitempty"`
	SelectPack           *int32      `protobuf:"varint,16,opt,name=select_pack" json:"select_pack,omitempty"`
	HotspotPack          *int32      `protobuf:"varint,17,opt,name=hotspot_pack" json:"hotspot_pack,omitempty"`
	HotspotOdds          *int32      `protobuf:"varint,18,opt,name=hotspot_odds" json:"hotspot_odds,omitempty"`
	HotspotIncreasedOdds *int32      `protobuf:"varint,19,opt,name=hotspot_increased_odds" json:"hotspot_increased_odds,omitempty"`
	HotspotLuckyNum      *int32      `protobuf:"varint,20,opt,name=hotspot_lucky_num" json:"hotspot_lucky_num,omitempty"`
	SelectImgId          *int32      `protobuf:"varint,21,opt,name=select_img_id" json:"select_img_id,omitempty"`
	SelectPlayerImgId    *int32      `protobuf:"varint,22,opt,name=select_player_img_id" json:"select_player_img_id,omitempty"`
	OpenTime             *int32      `protobuf:"varint,23,opt,name=open_time" json:"open_time,omitempty"`
	DurationTime         *int32      `protobuf:"varint,24,opt,name=duration_time" json:"duration_time,omitempty"`
	ServerOnOff          *int32      `protobuf:"varint,25,opt,name=server_on_off" json:"server_on_off,omitempty"`
	NeedSelectItem       *ItemConfig `protobuf:"bytes,26,opt,name=need_select_item" json:"need_select_item,omitempty"`
	IsShow               *int32      `protobuf:"varint,27,opt,name=is_show" json:"is_show,omitempty"`
	LimitedTimes         *int32      `protobuf:"varint,28,opt,name=limited_times" json:"limited_times,omitempty"`
	XXX_unrecognized     []byte      `json:"-"`
}

func (m *PlayerSelect) Reset()                    { *m = PlayerSelect{} }
func (m *PlayerSelect) String() string            { return proto.CompactTextString(m) }
func (*PlayerSelect) ProtoMessage()               {}
func (*PlayerSelect) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{37} }

func (m *PlayerSelect) GetSelectId() int32 {
	if m != nil && m.SelectId != nil {
		return *m.SelectId
	}
	return 0
}

func (m *PlayerSelect) GetSelectType() int32 {
	if m != nil && m.SelectType != nil {
		return *m.SelectType
	}
	return 0
}

func (m *PlayerSelect) GetSelectName() string {
	if m != nil && m.SelectName != nil {
		return *m.SelectName
	}
	return ""
}

func (m *PlayerSelect) GetSelectDescribe() string {
	if m != nil && m.SelectDescribe != nil {
		return *m.SelectDescribe
	}
	return ""
}

func (m *PlayerSelect) GetOpenRequirement() int32 {
	if m != nil && m.OpenRequirement != nil {
		return *m.OpenRequirement
	}
	return 0
}

func (m *PlayerSelect) GetRequirementValue() int32 {
	if m != nil && m.RequirementValue != nil {
		return *m.RequirementValue
	}
	return 0
}

func (m *PlayerSelect) GetFreeTimesEveryday() int32 {
	if m != nil && m.FreeTimesEveryday != nil {
		return *m.FreeTimesEveryday
	}
	return 0
}

func (m *PlayerSelect) GetFreeCd() int32 {
	if m != nil && m.FreeCd != nil {
		return *m.FreeCd
	}
	return 0
}

func (m *PlayerSelect) GetSelectNum() int32 {
	if m != nil && m.SelectNum != nil {
		return *m.SelectNum
	}
	return 0
}

func (m *PlayerSelect) GetSelectBunus() *ItemConfig {
	if m != nil {
		return m.SelectBunus
	}
	return nil
}

func (m *PlayerSelect) GetFreeSelectPackage() int32 {
	if m != nil && m.FreeSelectPackage != nil {
		return *m.FreeSelectPackage
	}
	return 0
}

func (m *PlayerSelect) GetFirstSelectPackId() int32 {
	if m != nil && m.FirstSelectPackId != nil {
		return *m.FirstSelectPackId
	}
	return 0
}

func (m *PlayerSelect) GetMormalPackId() int32 {
	if m != nil && m.MormalPackId != nil {
		return *m.MormalPackId
	}
	return 0
}

func (m *PlayerSelect) GetLuckyNum() int32 {
	if m != nil && m.LuckyNum != nil {
		return *m.LuckyNum
	}
	return 0
}

func (m *PlayerSelect) GetLuckySelectPackId() int32 {
	if m != nil && m.LuckySelectPackId != nil {
		return *m.LuckySelectPackId
	}
	return 0
}

func (m *PlayerSelect) GetSelectPack() int32 {
	if m != nil && m.SelectPack != nil {
		return *m.SelectPack
	}
	return 0
}

func (m *PlayerSelect) GetHotspotPack() int32 {
	if m != nil && m.HotspotPack != nil {
		return *m.HotspotPack
	}
	return 0
}

func (m *PlayerSelect) GetHotspotOdds() int32 {
	if m != nil && m.HotspotOdds != nil {
		return *m.HotspotOdds
	}
	return 0
}

func (m *PlayerSelect) GetHotspotIncreasedOdds() int32 {
	if m != nil && m.HotspotIncreasedOdds != nil {
		return *m.HotspotIncreasedOdds
	}
	return 0
}

func (m *PlayerSelect) GetHotspotLuckyNum() int32 {
	if m != nil && m.HotspotLuckyNum != nil {
		return *m.HotspotLuckyNum
	}
	return 0
}

func (m *PlayerSelect) GetSelectImgId() int32 {
	if m != nil && m.SelectImgId != nil {
		return *m.SelectImgId
	}
	return 0
}

func (m *PlayerSelect) GetSelectPlayerImgId() int32 {
	if m != nil && m.SelectPlayerImgId != nil {
		return *m.SelectPlayerImgId
	}
	return 0
}

func (m *PlayerSelect) GetOpenTime() int32 {
	if m != nil && m.OpenTime != nil {
		return *m.OpenTime
	}
	return 0
}

func (m *PlayerSelect) GetDurationTime() int32 {
	if m != nil && m.DurationTime != nil {
		return *m.DurationTime
	}
	return 0
}

func (m *PlayerSelect) GetServerOnOff() int32 {
	if m != nil && m.ServerOnOff != nil {
		return *m.ServerOnOff
	}
	return 0
}

func (m *PlayerSelect) GetNeedSelectItem() *ItemConfig {
	if m != nil {
		return m.NeedSelectItem
	}
	return nil
}

func (m *PlayerSelect) GetIsShow() int32 {
	if m != nil && m.IsShow != nil {
		return *m.IsShow
	}
	return 0
}

func (m *PlayerSelect) GetLimitedTimes() int32 {
	if m != nil && m.LimitedTimes != nil {
		return *m.LimitedTimes
	}
	return 0
}

type PlayerSelectConfig struct {
	Data             []*PlayerSelect `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PlayerSelectConfig) Reset()                    { *m = PlayerSelectConfig{} }
func (m *PlayerSelectConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerSelectConfig) ProtoMessage()               {}
func (*PlayerSelectConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{38} }

func (m *PlayerSelectConfig) GetData() []*PlayerSelect {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerSelectPackage struct {
	Index            *int32      `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	PackageId        *int32      `protobuf:"varint,2,opt,name=package_id" json:"package_id,omitempty"`
	ItemConfig       *ItemConfig `protobuf:"bytes,3,opt,name=item_config" json:"item_config,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *PlayerSelectPackage) Reset()                    { *m = PlayerSelectPackage{} }
func (m *PlayerSelectPackage) String() string            { return proto.CompactTextString(m) }
func (*PlayerSelectPackage) ProtoMessage()               {}
func (*PlayerSelectPackage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{39} }

func (m *PlayerSelectPackage) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *PlayerSelectPackage) GetPackageId() int32 {
	if m != nil && m.PackageId != nil {
		return *m.PackageId
	}
	return 0
}

func (m *PlayerSelectPackage) GetItemConfig() *ItemConfig {
	if m != nil {
		return m.ItemConfig
	}
	return nil
}

type PlayerSelectPackageConfig struct {
	Data             []*PlayerSelectPackage `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *PlayerSelectPackageConfig) Reset()                    { *m = PlayerSelectPackageConfig{} }
func (m *PlayerSelectPackageConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerSelectPackageConfig) ProtoMessage()               {}
func (*PlayerSelectPackageConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{40} }

func (m *PlayerSelectPackageConfig) GetData() []*PlayerSelectPackage {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerSelectPackWeight struct {
	PackageId        *int32 `protobuf:"varint,1,opt,name=package_id" json:"package_id,omitempty"`
	Pack_1           *int32 `protobuf:"varint,2,opt,name=pack_1" json:"pack_1,omitempty"`
	Weight_1         *int32 `protobuf:"varint,3,opt,name=weight_1" json:"weight_1,omitempty"`
	Pack_2           *int32 `protobuf:"varint,4,opt,name=pack_2" json:"pack_2,omitempty"`
	Weight_2         *int32 `protobuf:"varint,5,opt,name=weight_2" json:"weight_2,omitempty"`
	Pack_3           *int32 `protobuf:"varint,6,opt,name=pack_3" json:"pack_3,omitempty"`
	Weight_3         *int32 `protobuf:"varint,7,opt,name=weight_3" json:"weight_3,omitempty"`
	Pack_4           *int32 `protobuf:"varint,8,opt,name=pack_4" json:"pack_4,omitempty"`
	Weight_4         *int32 `protobuf:"varint,9,opt,name=weight_4" json:"weight_4,omitempty"`
	Pack_5           *int32 `protobuf:"varint,10,opt,name=pack_5" json:"pack_5,omitempty"`
	Weight_5         *int32 `protobuf:"varint,11,opt,name=weight_5" json:"weight_5,omitempty"`
	Pack_6           *int32 `protobuf:"varint,12,opt,name=pack_6" json:"pack_6,omitempty"`
	Weight_6         *int32 `protobuf:"varint,13,opt,name=weight_6" json:"weight_6,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlayerSelectPackWeight) Reset()                    { *m = PlayerSelectPackWeight{} }
func (m *PlayerSelectPackWeight) String() string            { return proto.CompactTextString(m) }
func (*PlayerSelectPackWeight) ProtoMessage()               {}
func (*PlayerSelectPackWeight) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{41} }

func (m *PlayerSelectPackWeight) GetPackageId() int32 {
	if m != nil && m.PackageId != nil {
		return *m.PackageId
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetPack_1() int32 {
	if m != nil && m.Pack_1 != nil {
		return *m.Pack_1
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetWeight_1() int32 {
	if m != nil && m.Weight_1 != nil {
		return *m.Weight_1
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetPack_2() int32 {
	if m != nil && m.Pack_2 != nil {
		return *m.Pack_2
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetWeight_2() int32 {
	if m != nil && m.Weight_2 != nil {
		return *m.Weight_2
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetPack_3() int32 {
	if m != nil && m.Pack_3 != nil {
		return *m.Pack_3
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetWeight_3() int32 {
	if m != nil && m.Weight_3 != nil {
		return *m.Weight_3
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetPack_4() int32 {
	if m != nil && m.Pack_4 != nil {
		return *m.Pack_4
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetWeight_4() int32 {
	if m != nil && m.Weight_4 != nil {
		return *m.Weight_4
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetPack_5() int32 {
	if m != nil && m.Pack_5 != nil {
		return *m.Pack_5
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetWeight_5() int32 {
	if m != nil && m.Weight_5 != nil {
		return *m.Weight_5
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetPack_6() int32 {
	if m != nil && m.Pack_6 != nil {
		return *m.Pack_6
	}
	return 0
}

func (m *PlayerSelectPackWeight) GetWeight_6() int32 {
	if m != nil && m.Weight_6 != nil {
		return *m.Weight_6
	}
	return 0
}

type PlayerSelectPackWeightConfig struct {
	Data             []*PlayerSelectPackWeight `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *PlayerSelectPackWeightConfig) Reset()                    { *m = PlayerSelectPackWeightConfig{} }
func (m *PlayerSelectPackWeightConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerSelectPackWeightConfig) ProtoMessage()               {}
func (*PlayerSelectPackWeightConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{42} }

func (m *PlayerSelectPackWeightConfig) GetData() []*PlayerSelectPackWeight {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerSkillBase struct {
	SkillId           *int32    `protobuf:"varint,1,opt,name=skill_id" json:"skill_id,omitempty"`
	SkillName         *string   `protobuf:"bytes,2,opt,name=skill_name" json:"skill_name,omitempty"`
	SkillType         *int32    `protobuf:"varint,3,opt,name=skill_type" json:"skill_type,omitempty"`
	SkillLv           *int32    `protobuf:"varint,4,opt,name=skill_lv" json:"skill_lv,omitempty"`
	SkillCd           *int32    `protobuf:"varint,5,opt,name=skill_cd" json:"skill_cd,omitempty"`
	ActionId          *int32    `protobuf:"varint,6,opt,name=action_id" json:"action_id,omitempty"`
	NeedTeamLv        *int32    `protobuf:"varint,7,opt,name=need_team_lv" json:"need_team_lv,omitempty"`
	SkillTrigger      *int32    `protobuf:"varint,8,opt,name=skill_trigger" json:"skill_trigger,omitempty"`
	ConstantId        *int32    `protobuf:"varint,9,opt,name=constant_id" json:"constant_id,omitempty"`
	Effect            []*Effect `protobuf:"bytes,10,rep,name=effect" json:"effect,omitempty"`
	SkillComboType    *int32    `protobuf:"varint,11,opt,name=skill_combo_type" json:"skill_combo_type,omitempty"`
	SkillDescribe     *string   `protobuf:"bytes,12,opt,name=skill_describe" json:"skill_describe,omitempty"`
	SkillIconId       *int32    `protobuf:"varint,13,opt,name=skill_icon_id" json:"skill_icon_id,omitempty"`
	RewriteKeyMapping []int32   `protobuf:"varint,14,rep,name=rewrite_key_mapping" json:"rewrite_key_mapping,omitempty"`
	FightIcon         *string   `protobuf:"bytes,15,opt,name=fight_icon" json:"fight_icon,omitempty"`
	SkillCdType       *int32    `protobuf:"varint,16,opt,name=skill_cd_type" json:"skill_cd_type,omitempty"`
	RelevantBuffId    *int32    `protobuf:"varint,17,opt,name=relevant_buff_id" json:"relevant_buff_id,omitempty"`
	XXX_unrecognized  []byte    `json:"-"`
}

func (m *PlayerSkillBase) Reset()                    { *m = PlayerSkillBase{} }
func (m *PlayerSkillBase) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillBase) ProtoMessage()               {}
func (*PlayerSkillBase) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{43} }

func (m *PlayerSkillBase) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *PlayerSkillBase) GetSkillName() string {
	if m != nil && m.SkillName != nil {
		return *m.SkillName
	}
	return ""
}

func (m *PlayerSkillBase) GetSkillType() int32 {
	if m != nil && m.SkillType != nil {
		return *m.SkillType
	}
	return 0
}

func (m *PlayerSkillBase) GetSkillLv() int32 {
	if m != nil && m.SkillLv != nil {
		return *m.SkillLv
	}
	return 0
}

func (m *PlayerSkillBase) GetSkillCd() int32 {
	if m != nil && m.SkillCd != nil {
		return *m.SkillCd
	}
	return 0
}

func (m *PlayerSkillBase) GetActionId() int32 {
	if m != nil && m.ActionId != nil {
		return *m.ActionId
	}
	return 0
}

func (m *PlayerSkillBase) GetNeedTeamLv() int32 {
	if m != nil && m.NeedTeamLv != nil {
		return *m.NeedTeamLv
	}
	return 0
}

func (m *PlayerSkillBase) GetSkillTrigger() int32 {
	if m != nil && m.SkillTrigger != nil {
		return *m.SkillTrigger
	}
	return 0
}

func (m *PlayerSkillBase) GetConstantId() int32 {
	if m != nil && m.ConstantId != nil {
		return *m.ConstantId
	}
	return 0
}

func (m *PlayerSkillBase) GetEffect() []*Effect {
	if m != nil {
		return m.Effect
	}
	return nil
}

func (m *PlayerSkillBase) GetSkillComboType() int32 {
	if m != nil && m.SkillComboType != nil {
		return *m.SkillComboType
	}
	return 0
}

func (m *PlayerSkillBase) GetSkillDescribe() string {
	if m != nil && m.SkillDescribe != nil {
		return *m.SkillDescribe
	}
	return ""
}

func (m *PlayerSkillBase) GetSkillIconId() int32 {
	if m != nil && m.SkillIconId != nil {
		return *m.SkillIconId
	}
	return 0
}

func (m *PlayerSkillBase) GetRewriteKeyMapping() []int32 {
	if m != nil {
		return m.RewriteKeyMapping
	}
	return nil
}

func (m *PlayerSkillBase) GetFightIcon() string {
	if m != nil && m.FightIcon != nil {
		return *m.FightIcon
	}
	return ""
}

func (m *PlayerSkillBase) GetSkillCdType() int32 {
	if m != nil && m.SkillCdType != nil {
		return *m.SkillCdType
	}
	return 0
}

func (m *PlayerSkillBase) GetRelevantBuffId() int32 {
	if m != nil && m.RelevantBuffId != nil {
		return *m.RelevantBuffId
	}
	return 0
}

type PlayerSkillBaseConfig struct {
	Data             []*PlayerSkillBase `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *PlayerSkillBaseConfig) Reset()                    { *m = PlayerSkillBaseConfig{} }
func (m *PlayerSkillBaseConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillBaseConfig) ProtoMessage()               {}
func (*PlayerSkillBaseConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{44} }

func (m *PlayerSkillBaseConfig) GetData() []*PlayerSkillBase {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerSkillConstantPara struct {
	SkillId          *int32  `protobuf:"varint,1,opt,name=skill_id" json:"skill_id,omitempty"`
	Para             []int32 `protobuf:"varint,2,rep,name=para" json:"para,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerSkillConstantPara) Reset()                    { *m = PlayerSkillConstantPara{} }
func (m *PlayerSkillConstantPara) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillConstantPara) ProtoMessage()               {}
func (*PlayerSkillConstantPara) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{45} }

func (m *PlayerSkillConstantPara) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *PlayerSkillConstantPara) GetPara() []int32 {
	if m != nil {
		return m.Para
	}
	return nil
}

type PlayerSkillConstantParaConfig struct {
	Data             []*PlayerSkillConstantPara `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *PlayerSkillConstantParaConfig) Reset()                    { *m = PlayerSkillConstantParaConfig{} }
func (m *PlayerSkillConstantParaConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillConstantParaConfig) ProtoMessage()               {}
func (*PlayerSkillConstantParaConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{46} }

func (m *PlayerSkillConstantParaConfig) GetData() []*PlayerSkillConstantPara {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerSkillEffect struct {
	EffectId         *int32  `protobuf:"varint,1,opt,name=effect_id" json:"effect_id,omitempty"`
	EffectName       *string `protobuf:"bytes,2,opt,name=effect_name" json:"effect_name,omitempty"`
	TargetType       *int32  `protobuf:"varint,3,opt,name=target_type" json:"target_type,omitempty"`
	EffectType       *int32  `protobuf:"varint,4,opt,name=effect_type" json:"effect_type,omitempty"`
	EffectCode       *int32  `protobuf:"varint,5,opt,name=effect_code" json:"effect_code,omitempty"`
	EffectValue      *int32  `protobuf:"varint,6,opt,name=effect_value" json:"effect_value,omitempty"`
	Effect_1Dtype    *int32  `protobuf:"varint,7,opt,name=effect_1_dtype" json:"effect_1_dtype,omitempty"`
	Effect_1Duration *int32  `protobuf:"varint,8,opt,name=effect_1_duration" json:"effect_1_duration,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerSkillEffect) Reset()                    { *m = PlayerSkillEffect{} }
func (m *PlayerSkillEffect) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillEffect) ProtoMessage()               {}
func (*PlayerSkillEffect) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{47} }

func (m *PlayerSkillEffect) GetEffectId() int32 {
	if m != nil && m.EffectId != nil {
		return *m.EffectId
	}
	return 0
}

func (m *PlayerSkillEffect) GetEffectName() string {
	if m != nil && m.EffectName != nil {
		return *m.EffectName
	}
	return ""
}

func (m *PlayerSkillEffect) GetTargetType() int32 {
	if m != nil && m.TargetType != nil {
		return *m.TargetType
	}
	return 0
}

func (m *PlayerSkillEffect) GetEffectType() int32 {
	if m != nil && m.EffectType != nil {
		return *m.EffectType
	}
	return 0
}

func (m *PlayerSkillEffect) GetEffectCode() int32 {
	if m != nil && m.EffectCode != nil {
		return *m.EffectCode
	}
	return 0
}

func (m *PlayerSkillEffect) GetEffectValue() int32 {
	if m != nil && m.EffectValue != nil {
		return *m.EffectValue
	}
	return 0
}

func (m *PlayerSkillEffect) GetEffect_1Dtype() int32 {
	if m != nil && m.Effect_1Dtype != nil {
		return *m.Effect_1Dtype
	}
	return 0
}

func (m *PlayerSkillEffect) GetEffect_1Duration() int32 {
	if m != nil && m.Effect_1Duration != nil {
		return *m.Effect_1Duration
	}
	return 0
}

type PlayerSkillEffectConfig struct {
	Data             []*PlayerSkillEffect `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PlayerSkillEffectConfig) Reset()                    { *m = PlayerSkillEffectConfig{} }
func (m *PlayerSkillEffectConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillEffectConfig) ProtoMessage()               {}
func (*PlayerSkillEffectConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{48} }

func (m *PlayerSkillEffectConfig) GetData() []*PlayerSkillEffect {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlayerSkillLvUp struct {
	SkillId          *int32        `protobuf:"varint,1,opt,name=skill_id" json:"skill_id,omitempty"`
	SkillLv          *int32        `protobuf:"varint,2,opt,name=skill_lv" json:"skill_lv,omitempty"`
	SkillStrength    *int32        `protobuf:"varint,3,opt,name=skill_strength" json:"skill_strength,omitempty"`
	PlayerLvRequired *int32        `protobuf:"varint,4,opt,name=player_lv_required" json:"player_lv_required,omitempty"`
	GoldRequired     *ItemConfig   `protobuf:"bytes,5,opt,name=gold_required" json:"gold_required,omitempty"`
	MaterialRequired []*ItemConfig `protobuf:"bytes,6,rep,name=material_required" json:"material_required,omitempty"`
	SkillIdNextLv    *int32        `protobuf:"varint,7,opt,name=skill_id_next_lv" json:"skill_id_next_lv,omitempty"`
	SkillTemplate    *int32        `protobuf:"varint,8,opt,name=skill_template" json:"skill_template,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PlayerSkillLvUp) Reset()                    { *m = PlayerSkillLvUp{} }
func (m *PlayerSkillLvUp) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillLvUp) ProtoMessage()               {}
func (*PlayerSkillLvUp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{49} }

func (m *PlayerSkillLvUp) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *PlayerSkillLvUp) GetSkillLv() int32 {
	if m != nil && m.SkillLv != nil {
		return *m.SkillLv
	}
	return 0
}

func (m *PlayerSkillLvUp) GetSkillStrength() int32 {
	if m != nil && m.SkillStrength != nil {
		return *m.SkillStrength
	}
	return 0
}

func (m *PlayerSkillLvUp) GetPlayerLvRequired() int32 {
	if m != nil && m.PlayerLvRequired != nil {
		return *m.PlayerLvRequired
	}
	return 0
}

func (m *PlayerSkillLvUp) GetGoldRequired() *ItemConfig {
	if m != nil {
		return m.GoldRequired
	}
	return nil
}

func (m *PlayerSkillLvUp) GetMaterialRequired() []*ItemConfig {
	if m != nil {
		return m.MaterialRequired
	}
	return nil
}

func (m *PlayerSkillLvUp) GetSkillIdNextLv() int32 {
	if m != nil && m.SkillIdNextLv != nil {
		return *m.SkillIdNextLv
	}
	return 0
}

func (m *PlayerSkillLvUp) GetSkillTemplate() int32 {
	if m != nil && m.SkillTemplate != nil {
		return *m.SkillTemplate
	}
	return 0
}

type PlayerSkillLvUpConfig struct {
	Data             []*PlayerSkillLvUp `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *PlayerSkillLvUpConfig) Reset()                    { *m = PlayerSkillLvUpConfig{} }
func (m *PlayerSkillLvUpConfig) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkillLvUpConfig) ProtoMessage()               {}
func (*PlayerSkillLvUpConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{50} }

func (m *PlayerSkillLvUpConfig) GetData() []*PlayerSkillLvUp {
	if m != nil {
		return m.Data
	}
	return nil
}

type PveChapter struct {
	Id               *int32        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SceneId          *int32        `protobuf:"varint,2,opt,name=scene_id" json:"scene_id,omitempty"`
	MainPlayerIndex  *int32        `protobuf:"varint,3,opt,name=main_player_index" json:"main_player_index,omitempty"`
	MyTeamIsRight    *int32        `protobuf:"varint,4,opt,name=my_team_is_right" json:"my_team_is_right,omitempty"`
	Teammate         []*PveNpcDate `protobuf:"bytes,5,rep,name=teammate" json:"teammate,omitempty"`
	Enemy            []*PveNpcDate `protobuf:"bytes,6,rep,name=enemy" json:"enemy,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PveChapter) Reset()                    { *m = PveChapter{} }
func (m *PveChapter) String() string            { return proto.CompactTextString(m) }
func (*PveChapter) ProtoMessage()               {}
func (*PveChapter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{51} }

func (m *PveChapter) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PveChapter) GetSceneId() int32 {
	if m != nil && m.SceneId != nil {
		return *m.SceneId
	}
	return 0
}

func (m *PveChapter) GetMainPlayerIndex() int32 {
	if m != nil && m.MainPlayerIndex != nil {
		return *m.MainPlayerIndex
	}
	return 0
}

func (m *PveChapter) GetMyTeamIsRight() int32 {
	if m != nil && m.MyTeamIsRight != nil {
		return *m.MyTeamIsRight
	}
	return 0
}

func (m *PveChapter) GetTeammate() []*PveNpcDate {
	if m != nil {
		return m.Teammate
	}
	return nil
}

func (m *PveChapter) GetEnemy() []*PveNpcDate {
	if m != nil {
		return m.Enemy
	}
	return nil
}

type PveChapterConfig struct {
	Data             []*PveChapter `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PveChapterConfig) Reset()                    { *m = PveChapterConfig{} }
func (m *PveChapterConfig) String() string            { return proto.CompactTextString(m) }
func (*PveChapterConfig) ProtoMessage()               {}
func (*PveChapterConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{52} }

func (m *PveChapterConfig) GetData() []*PveChapter {
	if m != nil {
		return m.Data
	}
	return nil
}

type PvpPos struct {
	Id               *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PosX             *float32 `protobuf:"fixed32,2,opt,name=posX" json:"posX,omitempty"`
	PosY             *float32 `protobuf:"fixed32,3,opt,name=posY" json:"posY,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,4,opt,name=posZ" json:"posZ,omitempty"`
	RotX             *float32 `protobuf:"fixed32,5,opt,name=rotX" json:"rotX,omitempty"`
	RotY             *float32 `protobuf:"fixed32,6,opt,name=rotY" json:"rotY,omitempty"`
	RotZ             *float32 `protobuf:"fixed32,7,opt,name=rotZ" json:"rotZ,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PvpPos) Reset()                    { *m = PvpPos{} }
func (m *PvpPos) String() string            { return proto.CompactTextString(m) }
func (*PvpPos) ProtoMessage()               {}
func (*PvpPos) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{53} }

func (m *PvpPos) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PvpPos) GetPosX() float32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *PvpPos) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *PvpPos) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *PvpPos) GetRotX() float32 {
	if m != nil && m.RotX != nil {
		return *m.RotX
	}
	return 0
}

func (m *PvpPos) GetRotY() float32 {
	if m != nil && m.RotY != nil {
		return *m.RotY
	}
	return 0
}

func (m *PvpPos) GetRotZ() float32 {
	if m != nil && m.RotZ != nil {
		return *m.RotZ
	}
	return 0
}

type PvpPosConfig struct {
	Data             []*PvpPos `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *PvpPosConfig) Reset()                    { *m = PvpPosConfig{} }
func (m *PvpPosConfig) String() string            { return proto.CompactTextString(m) }
func (*PvpPosConfig) ProtoMessage()               {}
func (*PvpPosConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{54} }

func (m *PvpPosConfig) GetData() []*PvpPos {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResourcesImg struct {
	ImageId          *int32  `protobuf:"varint,1,opt,name=image_id" json:"image_id,omitempty"`
	ImgName          *string `protobuf:"bytes,2,opt,name=img_name" json:"img_name,omitempty"`
	AtlasName        *string `protobuf:"bytes,3,opt,name=atlas_name" json:"atlas_name,omitempty"`
	ImgType          *int32  `protobuf:"varint,4,opt,name=img_type" json:"img_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ResourcesImg) Reset()                    { *m = ResourcesImg{} }
func (m *ResourcesImg) String() string            { return proto.CompactTextString(m) }
func (*ResourcesImg) ProtoMessage()               {}
func (*ResourcesImg) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{55} }

func (m *ResourcesImg) GetImageId() int32 {
	if m != nil && m.ImageId != nil {
		return *m.ImageId
	}
	return 0
}

func (m *ResourcesImg) GetImgName() string {
	if m != nil && m.ImgName != nil {
		return *m.ImgName
	}
	return ""
}

func (m *ResourcesImg) GetAtlasName() string {
	if m != nil && m.AtlasName != nil {
		return *m.AtlasName
	}
	return ""
}

func (m *ResourcesImg) GetImgType() int32 {
	if m != nil && m.ImgType != nil {
		return *m.ImgType
	}
	return 0
}

type ResourcesImgConfig struct {
	Data             []*ResourcesImg `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ResourcesImgConfig) Reset()                    { *m = ResourcesImgConfig{} }
func (m *ResourcesImgConfig) String() string            { return proto.CompactTextString(m) }
func (*ResourcesImgConfig) ProtoMessage()               {}
func (*ResourcesImgConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{56} }

func (m *ResourcesImgConfig) GetData() []*ResourcesImg {
	if m != nil {
		return m.Data
	}
	return nil
}

type SceneModel struct {
	Id                  *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SceneName           *string  `protobuf:"bytes,2,opt,name=sceneName" json:"sceneName,omitempty"`
	BgmList             []string `protobuf:"bytes,3,rep,name=bgm_list" json:"bgm_list,omitempty"`
	Weight              []int32  `protobuf:"varint,4,rep,name=weight" json:"weight,omitempty"`
	BloomThreshold      *float32 `protobuf:"fixed32,5,opt,name=bloom_threshold" json:"bloom_threshold,omitempty"`
	BloomIntensity      *float32 `protobuf:"fixed32,6,opt,name=bloom_intensity" json:"bloom_intensity,omitempty"`
	BloomBlurSize       *float32 `protobuf:"fixed32,7,opt,name=bloom_blur_size" json:"bloom_blur_size,omitempty"`
	BloomBlurIterations *int32   `protobuf:"varint,8,opt,name=bloom_blur_iterations" json:"bloom_blur_iterations,omitempty"`
	XXX_unrecognized    []byte   `json:"-"`
}

func (m *SceneModel) Reset()                    { *m = SceneModel{} }
func (m *SceneModel) String() string            { return proto.CompactTextString(m) }
func (*SceneModel) ProtoMessage()               {}
func (*SceneModel) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{57} }

func (m *SceneModel) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SceneModel) GetSceneName() string {
	if m != nil && m.SceneName != nil {
		return *m.SceneName
	}
	return ""
}

func (m *SceneModel) GetBgmList() []string {
	if m != nil {
		return m.BgmList
	}
	return nil
}

func (m *SceneModel) GetWeight() []int32 {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *SceneModel) GetBloomThreshold() float32 {
	if m != nil && m.BloomThreshold != nil {
		return *m.BloomThreshold
	}
	return 0
}

func (m *SceneModel) GetBloomIntensity() float32 {
	if m != nil && m.BloomIntensity != nil {
		return *m.BloomIntensity
	}
	return 0
}

func (m *SceneModel) GetBloomBlurSize() float32 {
	if m != nil && m.BloomBlurSize != nil {
		return *m.BloomBlurSize
	}
	return 0
}

func (m *SceneModel) GetBloomBlurIterations() int32 {
	if m != nil && m.BloomBlurIterations != nil {
		return *m.BloomBlurIterations
	}
	return 0
}

type SceneModelConfig struct {
	Data             []*SceneModel `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SceneModelConfig) Reset()                    { *m = SceneModelConfig{} }
func (m *SceneModelConfig) String() string            { return proto.CompactTextString(m) }
func (*SceneModelConfig) ProtoMessage()               {}
func (*SceneModelConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{58} }

func (m *SceneModelConfig) GetData() []*SceneModel {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdKeyMapping struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StateId          *int32  `protobuf:"varint,2,opt,name=state_id" json:"state_id,omitempty"`
	KeyId            *int32  `protobuf:"varint,3,opt,name=key_id" json:"key_id,omitempty"`
	SkillId          *int32  `protobuf:"varint,4,opt,name=skill_id" json:"skill_id,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Icon             *string `protobuf:"bytes,6,opt,name=icon" json:"icon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SdKeyMapping) Reset()                    { *m = SdKeyMapping{} }
func (m *SdKeyMapping) String() string            { return proto.CompactTextString(m) }
func (*SdKeyMapping) ProtoMessage()               {}
func (*SdKeyMapping) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{59} }

func (m *SdKeyMapping) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SdKeyMapping) GetStateId() int32 {
	if m != nil && m.StateId != nil {
		return *m.StateId
	}
	return 0
}

func (m *SdKeyMapping) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return 0
}

func (m *SdKeyMapping) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *SdKeyMapping) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SdKeyMapping) GetIcon() string {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return ""
}

type SdKeyMappingConfig struct {
	Data             []*SdKeyMapping `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SdKeyMappingConfig) Reset()                    { *m = SdKeyMappingConfig{} }
func (m *SdKeyMappingConfig) String() string            { return proto.CompactTextString(m) }
func (*SdKeyMappingConfig) ProtoMessage()               {}
func (*SdKeyMappingConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{60} }

func (m *SdKeyMappingConfig) GetData() []*SdKeyMapping {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdNameLibrary struct {
	Xing             *string `protobuf:"bytes,1,opt,name=xing" json:"xing,omitempty"`
	Adorn            *string `protobuf:"bytes,2,opt,name=adorn" json:"adorn,omitempty"`
	Ming             *string `protobuf:"bytes,3,opt,name=ming" json:"ming,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SdNameLibrary) Reset()                    { *m = SdNameLibrary{} }
func (m *SdNameLibrary) String() string            { return proto.CompactTextString(m) }
func (*SdNameLibrary) ProtoMessage()               {}
func (*SdNameLibrary) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{61} }

func (m *SdNameLibrary) GetXing() string {
	if m != nil && m.Xing != nil {
		return *m.Xing
	}
	return ""
}

func (m *SdNameLibrary) GetAdorn() string {
	if m != nil && m.Adorn != nil {
		return *m.Adorn
	}
	return ""
}

func (m *SdNameLibrary) GetMing() string {
	if m != nil && m.Ming != nil {
		return *m.Ming
	}
	return ""
}

type SdNameLibraryConfig struct {
	Data             []*SdNameLibrary `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SdNameLibraryConfig) Reset()                    { *m = SdNameLibraryConfig{} }
func (m *SdNameLibraryConfig) String() string            { return proto.CompactTextString(m) }
func (*SdNameLibraryConfig) ProtoMessage()               {}
func (*SdNameLibraryConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{62} }

func (m *SdNameLibraryConfig) GetData() []*SdNameLibrary {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerAction struct {
	ActionId                 *int32  `protobuf:"varint,1,opt,name=action_id" json:"action_id,omitempty"`
	Action                   *string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	EnergyType               *int32  `protobuf:"varint,3,opt,name=energy_type" json:"energy_type,omitempty"`
	EnergyNum                *int32  `protobuf:"varint,4,opt,name=energy_num" json:"energy_num,omitempty"`
	EnergyCutDowm            *int32  `protobuf:"varint,5,opt,name=energy_cut_dowm" json:"energy_cut_dowm,omitempty"`
	IsAilableDeadarea        *int32  `protobuf:"varint,6,opt,name=is_ailable_deadarea" json:"is_ailable_deadarea,omitempty"`
	IsAilableSlowMotion      *int32  `protobuf:"varint,7,opt,name=is_ailable_slow_motion" json:"is_ailable_slow_motion,omitempty"`
	SlowMotionRatio          *int32  `protobuf:"varint,8,opt,name=slow_motion_ratio" json:"slow_motion_ratio,omitempty"`
	IsAilableCloseUp         *int32  `protobuf:"varint,9,opt,name=is_ailable_close_up" json:"is_ailable_close_up,omitempty"`
	ShakeCameraAnimationName *string `protobuf:"bytes,10,opt,name=shake_camera_animation_name" json:"shake_camera_animation_name,omitempty"`
	ComboActions             []int32 `protobuf:"varint,11,rep,name=combo_actions" json:"combo_actions,omitempty"`
	IsAvailableNoEnergy      *int32  `protobuf:"varint,12,opt,name=is_available_no_energy" json:"is_available_no_energy,omitempty"`
	CollisionRatio           *int32  `protobuf:"varint,13,opt,name=collision_ratio" json:"collision_ratio,omitempty"`
	XXX_unrecognized         []byte  `json:"-"`
}

func (m *SdPlayerAction) Reset()                    { *m = SdPlayerAction{} }
func (m *SdPlayerAction) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerAction) ProtoMessage()               {}
func (*SdPlayerAction) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{63} }

func (m *SdPlayerAction) GetActionId() int32 {
	if m != nil && m.ActionId != nil {
		return *m.ActionId
	}
	return 0
}

func (m *SdPlayerAction) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *SdPlayerAction) GetEnergyType() int32 {
	if m != nil && m.EnergyType != nil {
		return *m.EnergyType
	}
	return 0
}

func (m *SdPlayerAction) GetEnergyNum() int32 {
	if m != nil && m.EnergyNum != nil {
		return *m.EnergyNum
	}
	return 0
}

func (m *SdPlayerAction) GetEnergyCutDowm() int32 {
	if m != nil && m.EnergyCutDowm != nil {
		return *m.EnergyCutDowm
	}
	return 0
}

func (m *SdPlayerAction) GetIsAilableDeadarea() int32 {
	if m != nil && m.IsAilableDeadarea != nil {
		return *m.IsAilableDeadarea
	}
	return 0
}

func (m *SdPlayerAction) GetIsAilableSlowMotion() int32 {
	if m != nil && m.IsAilableSlowMotion != nil {
		return *m.IsAilableSlowMotion
	}
	return 0
}

func (m *SdPlayerAction) GetSlowMotionRatio() int32 {
	if m != nil && m.SlowMotionRatio != nil {
		return *m.SlowMotionRatio
	}
	return 0
}

func (m *SdPlayerAction) GetIsAilableCloseUp() int32 {
	if m != nil && m.IsAilableCloseUp != nil {
		return *m.IsAilableCloseUp
	}
	return 0
}

func (m *SdPlayerAction) GetShakeCameraAnimationName() string {
	if m != nil && m.ShakeCameraAnimationName != nil {
		return *m.ShakeCameraAnimationName
	}
	return ""
}

func (m *SdPlayerAction) GetComboActions() []int32 {
	if m != nil {
		return m.ComboActions
	}
	return nil
}

func (m *SdPlayerAction) GetIsAvailableNoEnergy() int32 {
	if m != nil && m.IsAvailableNoEnergy != nil {
		return *m.IsAvailableNoEnergy
	}
	return 0
}

func (m *SdPlayerAction) GetCollisionRatio() int32 {
	if m != nil && m.CollisionRatio != nil {
		return *m.CollisionRatio
	}
	return 0
}

type SdPlayerActionConfig struct {
	Data             []*SdPlayerAction `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SdPlayerActionConfig) Reset()                    { *m = SdPlayerActionConfig{} }
func (m *SdPlayerActionConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerActionConfig) ProtoMessage()               {}
func (*SdPlayerActionConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{64} }

func (m *SdPlayerActionConfig) GetData() []*SdPlayerAction {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerEmoji struct {
	EmojiId          *int32  `protobuf:"varint,1,opt,name=emoji_id" json:"emoji_id,omitempty"`
	EmojiPackId      *int32  `protobuf:"varint,2,opt,name=emoji_pack_id" json:"emoji_pack_id,omitempty"`
	EmojiType        *int32  `protobuf:"varint,3,opt,name=emoji_type" json:"emoji_type,omitempty"`
	EmojiIcon        *int32  `protobuf:"varint,4,opt,name=emoji_icon" json:"emoji_icon,omitempty"`
	EmojiDescribe1   *string `protobuf:"bytes,5,opt,name=emoji_describe1" json:"emoji_describe1,omitempty"`
	EmojiDescribe2   *string `protobuf:"bytes,6,opt,name=emoji_describe2" json:"emoji_describe2,omitempty"`
	EmojiIndex       *int32  `protobuf:"varint,7,opt,name=emoji_index" json:"emoji_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SdPlayerEmoji) Reset()                    { *m = SdPlayerEmoji{} }
func (m *SdPlayerEmoji) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerEmoji) ProtoMessage()               {}
func (*SdPlayerEmoji) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{65} }

func (m *SdPlayerEmoji) GetEmojiId() int32 {
	if m != nil && m.EmojiId != nil {
		return *m.EmojiId
	}
	return 0
}

func (m *SdPlayerEmoji) GetEmojiPackId() int32 {
	if m != nil && m.EmojiPackId != nil {
		return *m.EmojiPackId
	}
	return 0
}

func (m *SdPlayerEmoji) GetEmojiType() int32 {
	if m != nil && m.EmojiType != nil {
		return *m.EmojiType
	}
	return 0
}

func (m *SdPlayerEmoji) GetEmojiIcon() int32 {
	if m != nil && m.EmojiIcon != nil {
		return *m.EmojiIcon
	}
	return 0
}

func (m *SdPlayerEmoji) GetEmojiDescribe1() string {
	if m != nil && m.EmojiDescribe1 != nil {
		return *m.EmojiDescribe1
	}
	return ""
}

func (m *SdPlayerEmoji) GetEmojiDescribe2() string {
	if m != nil && m.EmojiDescribe2 != nil {
		return *m.EmojiDescribe2
	}
	return ""
}

func (m *SdPlayerEmoji) GetEmojiIndex() int32 {
	if m != nil && m.EmojiIndex != nil {
		return *m.EmojiIndex
	}
	return 0
}

type SdPlayerEmojiConfig struct {
	Data             []*SdPlayerEmoji `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SdPlayerEmojiConfig) Reset()                    { *m = SdPlayerEmojiConfig{} }
func (m *SdPlayerEmojiConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerEmojiConfig) ProtoMessage()               {}
func (*SdPlayerEmojiConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{66} }

func (m *SdPlayerEmojiConfig) GetData() []*SdPlayerEmoji {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerEnergy struct {
	PropertyId       *int32 `protobuf:"varint,1,opt,name=property_id" json:"property_id,omitempty"`
	PlayerId         *int32 `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty"`
	PropertyDowm_3   *int32 `protobuf:"varint,3,opt,name=property_dowm_3" json:"property_dowm_3,omitempty"`
	PropertyDowm_2   *int32 `protobuf:"varint,4,opt,name=property_dowm_2" json:"property_dowm_2,omitempty"`
	PropertyDowm_1   *int32 `protobuf:"varint,5,opt,name=property_dowm_1" json:"property_dowm_1,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SdPlayerEnergy) Reset()                    { *m = SdPlayerEnergy{} }
func (m *SdPlayerEnergy) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerEnergy) ProtoMessage()               {}
func (*SdPlayerEnergy) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{67} }

func (m *SdPlayerEnergy) GetPropertyId() int32 {
	if m != nil && m.PropertyId != nil {
		return *m.PropertyId
	}
	return 0
}

func (m *SdPlayerEnergy) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SdPlayerEnergy) GetPropertyDowm_3() int32 {
	if m != nil && m.PropertyDowm_3 != nil {
		return *m.PropertyDowm_3
	}
	return 0
}

func (m *SdPlayerEnergy) GetPropertyDowm_2() int32 {
	if m != nil && m.PropertyDowm_2 != nil {
		return *m.PropertyDowm_2
	}
	return 0
}

func (m *SdPlayerEnergy) GetPropertyDowm_1() int32 {
	if m != nil && m.PropertyDowm_1 != nil {
		return *m.PropertyDowm_1
	}
	return 0
}

type SdPlayerEnergyConfig struct {
	Data             []*SdPlayerEnergy `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SdPlayerEnergyConfig) Reset()                    { *m = SdPlayerEnergyConfig{} }
func (m *SdPlayerEnergyConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerEnergyConfig) ProtoMessage()               {}
func (*SdPlayerEnergyConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{68} }

func (m *SdPlayerEnergyConfig) GetData() []*SdPlayerEnergy {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerLvUp struct {
	Id                   *int32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PlayerLvUpId         *int32      `protobuf:"varint,2,opt,name=player_lv_up_id" json:"player_lv_up_id,omitempty"`
	PlayerLv             *int32      `protobuf:"varint,3,opt,name=player_lv" json:"player_lv,omitempty"`
	PlayerLvUpPropertyId *int32      `protobuf:"varint,4,opt,name=player_lv_up_property_id" json:"player_lv_up_property_id,omitempty"`
	CritParameter        *CritPara   `protobuf:"bytes,5,opt,name=crit_parameter" json:"crit_parameter,omitempty"`
	LvCrit               *int32      `protobuf:"varint,6,opt,name=lv_crit" json:"lv_crit,omitempty"`
	LvCritExp            *ItemConfig `protobuf:"bytes,7,opt,name=lv_crit_exp" json:"lv_crit_exp,omitempty"`
	RequreGold           *ItemConfig `protobuf:"bytes,8,opt,name=requre_gold" json:"requre_gold,omitempty"`
	LvUpRequreExp        *ItemConfig `protobuf:"bytes,9,opt,name=lv_up_requre_exp" json:"lv_up_requre_exp,omitempty"`
	IsNeedGold           *int32      `protobuf:"varint,10,opt,name=is_need_gold" json:"is_need_gold,omitempty"`
	IsNeedMaterial       *int32      `protobuf:"varint,11,opt,name=is_need_material" json:"is_need_material,omitempty"`
	LvMaterial           *ItemConfig `protobuf:"bytes,12,opt,name=lv_material" json:"lv_material,omitempty"`
	TypeLvUp             *int32      `protobuf:"varint,13,opt,name=type_lv_up" json:"type_lv_up,omitempty"`
	XXX_unrecognized     []byte      `json:"-"`
}

func (m *SdPlayerLvUp) Reset()                    { *m = SdPlayerLvUp{} }
func (m *SdPlayerLvUp) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerLvUp) ProtoMessage()               {}
func (*SdPlayerLvUp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{69} }

func (m *SdPlayerLvUp) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SdPlayerLvUp) GetPlayerLvUpId() int32 {
	if m != nil && m.PlayerLvUpId != nil {
		return *m.PlayerLvUpId
	}
	return 0
}

func (m *SdPlayerLvUp) GetPlayerLv() int32 {
	if m != nil && m.PlayerLv != nil {
		return *m.PlayerLv
	}
	return 0
}

func (m *SdPlayerLvUp) GetPlayerLvUpPropertyId() int32 {
	if m != nil && m.PlayerLvUpPropertyId != nil {
		return *m.PlayerLvUpPropertyId
	}
	return 0
}

func (m *SdPlayerLvUp) GetCritParameter() *CritPara {
	if m != nil {
		return m.CritParameter
	}
	return nil
}

func (m *SdPlayerLvUp) GetLvCrit() int32 {
	if m != nil && m.LvCrit != nil {
		return *m.LvCrit
	}
	return 0
}

func (m *SdPlayerLvUp) GetLvCritExp() *ItemConfig {
	if m != nil {
		return m.LvCritExp
	}
	return nil
}

func (m *SdPlayerLvUp) GetRequreGold() *ItemConfig {
	if m != nil {
		return m.RequreGold
	}
	return nil
}

func (m *SdPlayerLvUp) GetLvUpRequreExp() *ItemConfig {
	if m != nil {
		return m.LvUpRequreExp
	}
	return nil
}

func (m *SdPlayerLvUp) GetIsNeedGold() int32 {
	if m != nil && m.IsNeedGold != nil {
		return *m.IsNeedGold
	}
	return 0
}

func (m *SdPlayerLvUp) GetIsNeedMaterial() int32 {
	if m != nil && m.IsNeedMaterial != nil {
		return *m.IsNeedMaterial
	}
	return 0
}

func (m *SdPlayerLvUp) GetLvMaterial() *ItemConfig {
	if m != nil {
		return m.LvMaterial
	}
	return nil
}

func (m *SdPlayerLvUp) GetTypeLvUp() int32 {
	if m != nil && m.TypeLvUp != nil {
		return *m.TypeLvUp
	}
	return 0
}

type SdPlayerLvUpConfig struct {
	Data             []*SdPlayerLvUp `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SdPlayerLvUpConfig) Reset()                    { *m = SdPlayerLvUpConfig{} }
func (m *SdPlayerLvUpConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerLvUpConfig) ProtoMessage()               {}
func (*SdPlayerLvUpConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{70} }

func (m *SdPlayerLvUpConfig) GetData() []*SdPlayerLvUp {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerLvUpProperty struct {
	PlayerLvUpPropertyId *int32           `protobuf:"varint,1,opt,name=player_lv_up_property_id" json:"player_lv_up_property_id,omitempty"`
	PlayerLvUpId         *int32           `protobuf:"varint,2,opt,name=player_lv_up_id" json:"player_lv_up_id,omitempty"`
	PlayerLv             *int32           `protobuf:"varint,3,opt,name=player_lv" json:"player_lv,omitempty"`
	Value                []*PropertyValue `protobuf:"bytes,4,rep,name=value" json:"value,omitempty"`
	XXX_unrecognized     []byte           `json:"-"`
}

func (m *SdPlayerLvUpProperty) Reset()                    { *m = SdPlayerLvUpProperty{} }
func (m *SdPlayerLvUpProperty) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerLvUpProperty) ProtoMessage()               {}
func (*SdPlayerLvUpProperty) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{71} }

func (m *SdPlayerLvUpProperty) GetPlayerLvUpPropertyId() int32 {
	if m != nil && m.PlayerLvUpPropertyId != nil {
		return *m.PlayerLvUpPropertyId
	}
	return 0
}

func (m *SdPlayerLvUpProperty) GetPlayerLvUpId() int32 {
	if m != nil && m.PlayerLvUpId != nil {
		return *m.PlayerLvUpId
	}
	return 0
}

func (m *SdPlayerLvUpProperty) GetPlayerLv() int32 {
	if m != nil && m.PlayerLv != nil {
		return *m.PlayerLv
	}
	return 0
}

func (m *SdPlayerLvUpProperty) GetValue() []*PropertyValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type SdPlayerLvUpPropertyConfig struct {
	Data             []*SdPlayerLvUpProperty `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SdPlayerLvUpPropertyConfig) Reset()                    { *m = SdPlayerLvUpPropertyConfig{} }
func (m *SdPlayerLvUpPropertyConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerLvUpPropertyConfig) ProtoMessage()               {}
func (*SdPlayerLvUpPropertyConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{72} }

func (m *SdPlayerLvUpPropertyConfig) GetData() []*SdPlayerLvUpProperty {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerMain struct {
	Id                       *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PositionId               *int32   `protobuf:"varint,2,opt,name=position_id" json:"position_id,omitempty"`
	Name                     *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	SchoolId                 *int32   `protobuf:"varint,4,opt,name=school_id" json:"school_id,omitempty"`
	Difficulty               *float32 `protobuf:"fixed32,5,opt,name=difficulty" json:"difficulty,omitempty"`
	PlayerLvUpId             *int32   `protobuf:"varint,6,opt,name=player_lv_up_id" json:"player_lv_up_id,omitempty"`
	BaseLvPlayer             *int32   `protobuf:"varint,7,opt,name=base_lv_player" json:"base_lv_player,omitempty"`
	BaseExpPlayer            *int32   `protobuf:"varint,8,opt,name=base_exp_player" json:"base_exp_player,omitempty"`
	PlayerIcon               *string  `protobuf:"bytes,9,opt,name=player_icon" json:"player_icon,omitempty"`
	PlayerIconSmall          *string  `protobuf:"bytes,10,opt,name=player_icon_small" json:"player_icon_small,omitempty"`
	PlayerOriginalPainting   *string  `protobuf:"bytes,11,opt,name=player_original_painting" json:"player_original_painting,omitempty"`
	ModeId                   *int32   `protobuf:"varint,12,opt,name=modeId" json:"modeId,omitempty"`
	Skill                    []int32  `protobuf:"varint,13,rep,name=skill" json:"skill,omitempty"`
	EmojiId                  *int32   `protobuf:"varint,14,opt,name=emoji_id" json:"emoji_id,omitempty"`
	PlayerPropertyId         *int32   `protobuf:"varint,15,opt,name=player_property_id" json:"player_property_id,omitempty"`
	PlayerSpecialityConfigId *int32   `protobuf:"varint,16,opt,name=player_speciality_config_id" json:"player_speciality_config_id,omitempty"`
	PlayerDescribe           *string  `protobuf:"bytes,17,opt,name=player_describe" json:"player_describe,omitempty"`
	XXX_unrecognized         []byte   `json:"-"`
}

func (m *SdPlayerMain) Reset()                    { *m = SdPlayerMain{} }
func (m *SdPlayerMain) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerMain) ProtoMessage()               {}
func (*SdPlayerMain) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{73} }

func (m *SdPlayerMain) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SdPlayerMain) GetPositionId() int32 {
	if m != nil && m.PositionId != nil {
		return *m.PositionId
	}
	return 0
}

func (m *SdPlayerMain) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SdPlayerMain) GetSchoolId() int32 {
	if m != nil && m.SchoolId != nil {
		return *m.SchoolId
	}
	return 0
}

func (m *SdPlayerMain) GetDifficulty() float32 {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return 0
}

func (m *SdPlayerMain) GetPlayerLvUpId() int32 {
	if m != nil && m.PlayerLvUpId != nil {
		return *m.PlayerLvUpId
	}
	return 0
}

func (m *SdPlayerMain) GetBaseLvPlayer() int32 {
	if m != nil && m.BaseLvPlayer != nil {
		return *m.BaseLvPlayer
	}
	return 0
}

func (m *SdPlayerMain) GetBaseExpPlayer() int32 {
	if m != nil && m.BaseExpPlayer != nil {
		return *m.BaseExpPlayer
	}
	return 0
}

func (m *SdPlayerMain) GetPlayerIcon() string {
	if m != nil && m.PlayerIcon != nil {
		return *m.PlayerIcon
	}
	return ""
}

func (m *SdPlayerMain) GetPlayerIconSmall() string {
	if m != nil && m.PlayerIconSmall != nil {
		return *m.PlayerIconSmall
	}
	return ""
}

func (m *SdPlayerMain) GetPlayerOriginalPainting() string {
	if m != nil && m.PlayerOriginalPainting != nil {
		return *m.PlayerOriginalPainting
	}
	return ""
}

func (m *SdPlayerMain) GetModeId() int32 {
	if m != nil && m.ModeId != nil {
		return *m.ModeId
	}
	return 0
}

func (m *SdPlayerMain) GetSkill() []int32 {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *SdPlayerMain) GetEmojiId() int32 {
	if m != nil && m.EmojiId != nil {
		return *m.EmojiId
	}
	return 0
}

func (m *SdPlayerMain) GetPlayerPropertyId() int32 {
	if m != nil && m.PlayerPropertyId != nil {
		return *m.PlayerPropertyId
	}
	return 0
}

func (m *SdPlayerMain) GetPlayerSpecialityConfigId() int32 {
	if m != nil && m.PlayerSpecialityConfigId != nil {
		return *m.PlayerSpecialityConfigId
	}
	return 0
}

func (m *SdPlayerMain) GetPlayerDescribe() string {
	if m != nil && m.PlayerDescribe != nil {
		return *m.PlayerDescribe
	}
	return ""
}

type SdPlayerMainConfig struct {
	Data             []*SdPlayerMain `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SdPlayerMainConfig) Reset()                    { *m = SdPlayerMainConfig{} }
func (m *SdPlayerMainConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerMainConfig) ProtoMessage()               {}
func (*SdPlayerMainConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{74} }

func (m *SdPlayerMainConfig) GetData() []*SdPlayerMain {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerPosition struct {
	PositionId       *int32  `protobuf:"varint,1,opt,name=position_id" json:"position_id,omitempty"`
	PositionName     *string `protobuf:"bytes,2,opt,name=position_name" json:"position_name,omitempty"`
	PositionIcon     *string `protobuf:"bytes,3,opt,name=position_icon" json:"position_icon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SdPlayerPosition) Reset()                    { *m = SdPlayerPosition{} }
func (m *SdPlayerPosition) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerPosition) ProtoMessage()               {}
func (*SdPlayerPosition) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{75} }

func (m *SdPlayerPosition) GetPositionId() int32 {
	if m != nil && m.PositionId != nil {
		return *m.PositionId
	}
	return 0
}

func (m *SdPlayerPosition) GetPositionName() string {
	if m != nil && m.PositionName != nil {
		return *m.PositionName
	}
	return ""
}

func (m *SdPlayerPosition) GetPositionIcon() string {
	if m != nil && m.PositionIcon != nil {
		return *m.PositionIcon
	}
	return ""
}

type SdPlayerPositionConfig struct {
	Data             []*SdPlayerPosition `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SdPlayerPositionConfig) Reset()                    { *m = SdPlayerPositionConfig{} }
func (m *SdPlayerPositionConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerPositionConfig) ProtoMessage()               {}
func (*SdPlayerPositionConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{76} }

func (m *SdPlayerPositionConfig) GetData() []*SdPlayerPosition {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerProperty struct {
	Id                *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Position          *string `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Name              *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	High              *int32  `protobuf:"varint,4,opt,name=high" json:"high,omitempty"`
	EnergyBase        *int32  `protobuf:"varint,5,opt,name=energy_base" json:"energy_base,omitempty"`
	EnergyRecovery    *int32  `protobuf:"varint,6,opt,name=energy_recovery" json:"energy_recovery,omitempty"`
	BaseJT            *int32  `protobuf:"varint,7,opt,name=baseJT" json:"baseJT,omitempty"`
	BaseZT            *int32  `protobuf:"varint,8,opt,name=baseZT" json:"baseZT,omitempty"`
	BaseSF            *int32  `protobuf:"varint,9,opt,name=baseSF" json:"baseSF,omitempty"`
	BaseKL            *int32  `protobuf:"varint,10,opt,name=baseKL" json:"baseKL,omitempty"`
	BaseSL            *int32  `protobuf:"varint,11,opt,name=baseSL" json:"baseSL,omitempty"`
	BaseDW            *int32  `protobuf:"varint,12,opt,name=baseDW" json:"baseDW,omitempty"`
	BaseCQ            *int32  `protobuf:"varint,13,opt,name=baseCQ" json:"baseCQ,omitempty"`
	BaseKQ            *int32  `protobuf:"varint,14,opt,name=baseKQ" json:"baseKQ,omitempty"`
	BaseLB            *int32  `protobuf:"varint,15,opt,name=baseLB" json:"baseLB,omitempty"`
	BaseGM            *int32  `protobuf:"varint,16,opt,name=baseGM" json:"baseGM,omitempty"`
	BaseLL            *int32  `protobuf:"varint,17,opt,name=baseLL" json:"baseLL,omitempty"`
	BaseMJ            *int32  `protobuf:"varint,18,opt,name=baseMJ" json:"baseMJ,omitempty"`
	BaseGR            *int32  `protobuf:"varint,19,opt,name=baseGR" json:"baseGR,omitempty"`
	BaseKGR           *int32  `protobuf:"varint,20,opt,name=baseKGR" json:"baseKGR,omitempty"`
	BaseTT            *int32  `protobuf:"varint,21,opt,name=baseTT" json:"baseTT,omitempty"`
	BaseQD            *int32  `protobuf:"varint,22,opt,name=baseQD" json:"baseQD,omitempty"`
	BaseWQ            *int32  `protobuf:"varint,23,opt,name=baseWQ" json:"baseWQ,omitempty"`
	BaseYQ            *int32  `protobuf:"varint,24,opt,name=baseYQ" json:"baseYQ,omitempty"`
	BaseJTMZ          *int32  `protobuf:"varint,25,opt,name=baseJTMZ" json:"baseJTMZ,omitempty"`
	BaseZTMZ          *int32  `protobuf:"varint,26,opt,name=baseZTMZ" json:"baseZTMZ,omitempty"`
	BaseSFMZ          *int32  `protobuf:"varint,27,opt,name=baseSFMZ" json:"baseSFMZ,omitempty"`
	BaseSLMZ          *int32  `protobuf:"varint,28,opt,name=baseSLMZ" json:"baseSLMZ,omitempty"`
	BaseKLMZ          *int32  `protobuf:"varint,29,opt,name=baseKLMZ" json:"baseKLMZ,omitempty"`
	AmendJT           *int32  `protobuf:"varint,30,opt,name=amendJT" json:"amendJT,omitempty"`
	AmendZT           *int32  `protobuf:"varint,31,opt,name=amendZT" json:"amendZT,omitempty"`
	AmendSF           *int32  `protobuf:"varint,32,opt,name=amendSF" json:"amendSF,omitempty"`
	AmendSL           *int32  `protobuf:"varint,33,opt,name=amendSL" json:"amendSL,omitempty"`
	AmendKL           *int32  `protobuf:"varint,34,opt,name=amendKL" json:"amendKL,omitempty"`
	AmendHD           *int32  `protobuf:"varint,35,opt,name=amendHD" json:"amendHD,omitempty"`
	AmendStealOut     *int32  `protobuf:"varint,36,opt,name=amendStealOut" json:"amendStealOut,omitempty"`
	ShootJT           *int32  `protobuf:"varint,37,opt,name=shootJT" json:"shootJT,omitempty"`
	ShootZT           *int32  `protobuf:"varint,38,opt,name=shootZT" json:"shootZT,omitempty"`
	ShootSF           *int32  `protobuf:"varint,39,opt,name=shootSF" json:"shootSF,omitempty"`
	ShootSL           *int32  `protobuf:"varint,40,opt,name=shootSL" json:"shootSL,omitempty"`
	ShootKL           *int32  `protobuf:"varint,41,opt,name=shootKL" json:"shootKL,omitempty"`
	DefenceBaseAngle  *int32  `protobuf:"varint,42,opt,name=defence_base_angle" json:"defence_base_angle,omitempty"`
	DefenceBaseRadius *int32  `protobuf:"varint,43,opt,name=defence_base_radius" json:"defence_base_radius,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *SdPlayerProperty) Reset()                    { *m = SdPlayerProperty{} }
func (m *SdPlayerProperty) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerProperty) ProtoMessage()               {}
func (*SdPlayerProperty) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{77} }

func (m *SdPlayerProperty) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SdPlayerProperty) GetPosition() string {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return ""
}

func (m *SdPlayerProperty) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SdPlayerProperty) GetHigh() int32 {
	if m != nil && m.High != nil {
		return *m.High
	}
	return 0
}

func (m *SdPlayerProperty) GetEnergyBase() int32 {
	if m != nil && m.EnergyBase != nil {
		return *m.EnergyBase
	}
	return 0
}

func (m *SdPlayerProperty) GetEnergyRecovery() int32 {
	if m != nil && m.EnergyRecovery != nil {
		return *m.EnergyRecovery
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseJT() int32 {
	if m != nil && m.BaseJT != nil {
		return *m.BaseJT
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseZT() int32 {
	if m != nil && m.BaseZT != nil {
		return *m.BaseZT
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseSF() int32 {
	if m != nil && m.BaseSF != nil {
		return *m.BaseSF
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseKL() int32 {
	if m != nil && m.BaseKL != nil {
		return *m.BaseKL
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseSL() int32 {
	if m != nil && m.BaseSL != nil {
		return *m.BaseSL
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseDW() int32 {
	if m != nil && m.BaseDW != nil {
		return *m.BaseDW
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseCQ() int32 {
	if m != nil && m.BaseCQ != nil {
		return *m.BaseCQ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseKQ() int32 {
	if m != nil && m.BaseKQ != nil {
		return *m.BaseKQ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseLB() int32 {
	if m != nil && m.BaseLB != nil {
		return *m.BaseLB
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseGM() int32 {
	if m != nil && m.BaseGM != nil {
		return *m.BaseGM
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseLL() int32 {
	if m != nil && m.BaseLL != nil {
		return *m.BaseLL
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseMJ() int32 {
	if m != nil && m.BaseMJ != nil {
		return *m.BaseMJ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseGR() int32 {
	if m != nil && m.BaseGR != nil {
		return *m.BaseGR
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseKGR() int32 {
	if m != nil && m.BaseKGR != nil {
		return *m.BaseKGR
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseTT() int32 {
	if m != nil && m.BaseTT != nil {
		return *m.BaseTT
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseQD() int32 {
	if m != nil && m.BaseQD != nil {
		return *m.BaseQD
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseWQ() int32 {
	if m != nil && m.BaseWQ != nil {
		return *m.BaseWQ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseYQ() int32 {
	if m != nil && m.BaseYQ != nil {
		return *m.BaseYQ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseJTMZ() int32 {
	if m != nil && m.BaseJTMZ != nil {
		return *m.BaseJTMZ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseZTMZ() int32 {
	if m != nil && m.BaseZTMZ != nil {
		return *m.BaseZTMZ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseSFMZ() int32 {
	if m != nil && m.BaseSFMZ != nil {
		return *m.BaseSFMZ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseSLMZ() int32 {
	if m != nil && m.BaseSLMZ != nil {
		return *m.BaseSLMZ
	}
	return 0
}

func (m *SdPlayerProperty) GetBaseKLMZ() int32 {
	if m != nil && m.BaseKLMZ != nil {
		return *m.BaseKLMZ
	}
	return 0
}

func (m *SdPlayerProperty) GetAmendJT() int32 {
	if m != nil && m.AmendJT != nil {
		return *m.AmendJT
	}
	return 0
}

func (m *SdPlayerProperty) GetAmendZT() int32 {
	if m != nil && m.AmendZT != nil {
		return *m.AmendZT
	}
	return 0
}

func (m *SdPlayerProperty) GetAmendSF() int32 {
	if m != nil && m.AmendSF != nil {
		return *m.AmendSF
	}
	return 0
}

func (m *SdPlayerProperty) GetAmendSL() int32 {
	if m != nil && m.AmendSL != nil {
		return *m.AmendSL
	}
	return 0
}

func (m *SdPlayerProperty) GetAmendKL() int32 {
	if m != nil && m.AmendKL != nil {
		return *m.AmendKL
	}
	return 0
}

func (m *SdPlayerProperty) GetAmendHD() int32 {
	if m != nil && m.AmendHD != nil {
		return *m.AmendHD
	}
	return 0
}

func (m *SdPlayerProperty) GetAmendStealOut() int32 {
	if m != nil && m.AmendStealOut != nil {
		return *m.AmendStealOut
	}
	return 0
}

func (m *SdPlayerProperty) GetShootJT() int32 {
	if m != nil && m.ShootJT != nil {
		return *m.ShootJT
	}
	return 0
}

func (m *SdPlayerProperty) GetShootZT() int32 {
	if m != nil && m.ShootZT != nil {
		return *m.ShootZT
	}
	return 0
}

func (m *SdPlayerProperty) GetShootSF() int32 {
	if m != nil && m.ShootSF != nil {
		return *m.ShootSF
	}
	return 0
}

func (m *SdPlayerProperty) GetShootSL() int32 {
	if m != nil && m.ShootSL != nil {
		return *m.ShootSL
	}
	return 0
}

func (m *SdPlayerProperty) GetShootKL() int32 {
	if m != nil && m.ShootKL != nil {
		return *m.ShootKL
	}
	return 0
}

func (m *SdPlayerProperty) GetDefenceBaseAngle() int32 {
	if m != nil && m.DefenceBaseAngle != nil {
		return *m.DefenceBaseAngle
	}
	return 0
}

func (m *SdPlayerProperty) GetDefenceBaseRadius() int32 {
	if m != nil && m.DefenceBaseRadius != nil {
		return *m.DefenceBaseRadius
	}
	return 0
}

type SdPlayerPropertyConfig struct {
	Data             []*SdPlayerProperty `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SdPlayerPropertyConfig) Reset()                    { *m = SdPlayerPropertyConfig{} }
func (m *SdPlayerPropertyConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerPropertyConfig) ProtoMessage()               {}
func (*SdPlayerPropertyConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{78} }

func (m *SdPlayerPropertyConfig) GetData() []*SdPlayerProperty {
	if m != nil {
		return m.Data
	}
	return nil
}

type SdPlayerSchool struct {
	SchoolId         *int32  `protobuf:"varint,1,opt,name=school_id" json:"school_id,omitempty"`
	SchoolName       *string `protobuf:"bytes,2,opt,name=school_name" json:"school_name,omitempty"`
	SchoolIcon       *string `protobuf:"bytes,3,opt,name=school_icon" json:"school_icon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SdPlayerSchool) Reset()                    { *m = SdPlayerSchool{} }
func (m *SdPlayerSchool) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerSchool) ProtoMessage()               {}
func (*SdPlayerSchool) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{79} }

func (m *SdPlayerSchool) GetSchoolId() int32 {
	if m != nil && m.SchoolId != nil {
		return *m.SchoolId
	}
	return 0
}

func (m *SdPlayerSchool) GetSchoolName() string {
	if m != nil && m.SchoolName != nil {
		return *m.SchoolName
	}
	return ""
}

func (m *SdPlayerSchool) GetSchoolIcon() string {
	if m != nil && m.SchoolIcon != nil {
		return *m.SchoolIcon
	}
	return ""
}

type SdPlayerSchoolConfig struct {
	Data             []*SdPlayerSchool `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SdPlayerSchoolConfig) Reset()                    { *m = SdPlayerSchoolConfig{} }
func (m *SdPlayerSchoolConfig) String() string            { return proto.CompactTextString(m) }
func (*SdPlayerSchoolConfig) ProtoMessage()               {}
func (*SdPlayerSchoolConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{80} }

func (m *SdPlayerSchoolConfig) GetData() []*SdPlayerSchool {
	if m != nil {
		return m.Data
	}
	return nil
}

type SpecialityConfig struct {
	Index                    *int32              `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	PlayerSpecialityConfigId *int32              `protobuf:"varint,2,opt,name=player_speciality_config_id" json:"player_speciality_config_id,omitempty"`
	SpecialityNum            *int32              `protobuf:"varint,3,opt,name=speciality_num" json:"speciality_num,omitempty"`
	SpecialityUnclockLv      *int32              `protobuf:"varint,4,opt,name=speciality_unclock_lv" json:"speciality_unclock_lv,omitempty"`
	SpecialityInitPool       *SpecialityInitPool `protobuf:"bytes,5,opt,name=speciality_init_pool" json:"speciality_init_pool,omitempty"`
	SpecialityResetPool      *int32              `protobuf:"varint,6,opt,name=speciality_reset_pool" json:"speciality_reset_pool,omitempty"`
	SpecialityResetItem      *ItemConfig         `protobuf:"bytes,7,opt,name=speciality_reset_item" json:"speciality_reset_item,omitempty"`
	XXX_unrecognized         []byte              `json:"-"`
}

func (m *SpecialityConfig) Reset()                    { *m = SpecialityConfig{} }
func (m *SpecialityConfig) String() string            { return proto.CompactTextString(m) }
func (*SpecialityConfig) ProtoMessage()               {}
func (*SpecialityConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{81} }

func (m *SpecialityConfig) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *SpecialityConfig) GetPlayerSpecialityConfigId() int32 {
	if m != nil && m.PlayerSpecialityConfigId != nil {
		return *m.PlayerSpecialityConfigId
	}
	return 0
}

func (m *SpecialityConfig) GetSpecialityNum() int32 {
	if m != nil && m.SpecialityNum != nil {
		return *m.SpecialityNum
	}
	return 0
}

func (m *SpecialityConfig) GetSpecialityUnclockLv() int32 {
	if m != nil && m.SpecialityUnclockLv != nil {
		return *m.SpecialityUnclockLv
	}
	return 0
}

func (m *SpecialityConfig) GetSpecialityInitPool() *SpecialityInitPool {
	if m != nil {
		return m.SpecialityInitPool
	}
	return nil
}

func (m *SpecialityConfig) GetSpecialityResetPool() int32 {
	if m != nil && m.SpecialityResetPool != nil {
		return *m.SpecialityResetPool
	}
	return 0
}

func (m *SpecialityConfig) GetSpecialityResetItem() *ItemConfig {
	if m != nil {
		return m.SpecialityResetItem
	}
	return nil
}

type SpecialityConfigConfig struct {
	Data             []*SpecialityConfig `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *SpecialityConfigConfig) Reset()                    { *m = SpecialityConfigConfig{} }
func (m *SpecialityConfigConfig) String() string            { return proto.CompactTextString(m) }
func (*SpecialityConfigConfig) ProtoMessage()               {}
func (*SpecialityConfigConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{82} }

func (m *SpecialityConfigConfig) GetData() []*SpecialityConfig {
	if m != nil {
		return m.Data
	}
	return nil
}

type SpecialityPackage struct {
	SpecialityId       *int32  `protobuf:"varint,1,opt,name=speciality_id" json:"speciality_id,omitempty"`
	SpecialityPackId   *int32  `protobuf:"varint,2,opt,name=speciality_pack_id" json:"speciality_pack_id,omitempty"`
	SpecialityQuality  *int32  `protobuf:"varint,3,opt,name=speciality_quality" json:"speciality_quality,omitempty"`
	SpecialityIcon     *string `protobuf:"bytes,4,opt,name=speciality_icon" json:"speciality_icon,omitempty"`
	PropertyId         *int32  `protobuf:"varint,5,opt,name=property_id" json:"property_id,omitempty"`
	PropertyValue      *int32  `protobuf:"varint,6,opt,name=property_value" json:"property_value,omitempty"`
	SpecialityDescribe *string `protobuf:"bytes,7,opt,name=speciality_describe" json:"speciality_describe,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *SpecialityPackage) Reset()                    { *m = SpecialityPackage{} }
func (m *SpecialityPackage) String() string            { return proto.CompactTextString(m) }
func (*SpecialityPackage) ProtoMessage()               {}
func (*SpecialityPackage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{83} }

func (m *SpecialityPackage) GetSpecialityId() int32 {
	if m != nil && m.SpecialityId != nil {
		return *m.SpecialityId
	}
	return 0
}

func (m *SpecialityPackage) GetSpecialityPackId() int32 {
	if m != nil && m.SpecialityPackId != nil {
		return *m.SpecialityPackId
	}
	return 0
}

func (m *SpecialityPackage) GetSpecialityQuality() int32 {
	if m != nil && m.SpecialityQuality != nil {
		return *m.SpecialityQuality
	}
	return 0
}

func (m *SpecialityPackage) GetSpecialityIcon() string {
	if m != nil && m.SpecialityIcon != nil {
		return *m.SpecialityIcon
	}
	return ""
}

func (m *SpecialityPackage) GetPropertyId() int32 {
	if m != nil && m.PropertyId != nil {
		return *m.PropertyId
	}
	return 0
}

func (m *SpecialityPackage) GetPropertyValue() int32 {
	if m != nil && m.PropertyValue != nil {
		return *m.PropertyValue
	}
	return 0
}

func (m *SpecialityPackage) GetSpecialityDescribe() string {
	if m != nil && m.SpecialityDescribe != nil {
		return *m.SpecialityDescribe
	}
	return ""
}

type SpecialityPackageConfig struct {
	Data             []*SpecialityPackage `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SpecialityPackageConfig) Reset()                    { *m = SpecialityPackageConfig{} }
func (m *SpecialityPackageConfig) String() string            { return proto.CompactTextString(m) }
func (*SpecialityPackageConfig) ProtoMessage()               {}
func (*SpecialityPackageConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{84} }

func (m *SpecialityPackageConfig) GetData() []*SpecialityPackage {
	if m != nil {
		return m.Data
	}
	return nil
}

type SpecialityPoolWeight struct {
	SpecialityPoolId *int32 `protobuf:"varint,1,opt,name=speciality_pool_id" json:"speciality_pool_id,omitempty"`
	SpecialityPack_1 *int32 `protobuf:"varint,2,opt,name=speciality_pack_1" json:"speciality_pack_1,omitempty"`
	Weight_1         *int32 `protobuf:"varint,3,opt,name=weight_1" json:"weight_1,omitempty"`
	SpecialityPack_2 *int32 `protobuf:"varint,4,opt,name=speciality_pack_2" json:"speciality_pack_2,omitempty"`
	Weight_2         *int32 `protobuf:"varint,5,opt,name=weight_2" json:"weight_2,omitempty"`
	SpecialityPack_3 *int32 `protobuf:"varint,6,opt,name=speciality_pack_3" json:"speciality_pack_3,omitempty"`
	Weight_3         *int32 `protobuf:"varint,7,opt,name=weight_3" json:"weight_3,omitempty"`
	SpecialityPack_4 *int32 `protobuf:"varint,8,opt,name=speciality_pack_4" json:"speciality_pack_4,omitempty"`
	Weight_4         *int32 `protobuf:"varint,9,opt,name=weight_4" json:"weight_4,omitempty"`
	SpecialityPack_5 *int32 `protobuf:"varint,10,opt,name=speciality_pack_5" json:"speciality_pack_5,omitempty"`
	Weight_5         *int32 `protobuf:"varint,11,opt,name=weight_5" json:"weight_5,omitempty"`
	SpecialityPack_6 *int32 `protobuf:"varint,12,opt,name=speciality_pack_6" json:"speciality_pack_6,omitempty"`
	Weight_6         *int32 `protobuf:"varint,13,opt,name=weight_6" json:"weight_6,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SpecialityPoolWeight) Reset()                    { *m = SpecialityPoolWeight{} }
func (m *SpecialityPoolWeight) String() string            { return proto.CompactTextString(m) }
func (*SpecialityPoolWeight) ProtoMessage()               {}
func (*SpecialityPoolWeight) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{85} }

func (m *SpecialityPoolWeight) GetSpecialityPoolId() int32 {
	if m != nil && m.SpecialityPoolId != nil {
		return *m.SpecialityPoolId
	}
	return 0
}

func (m *SpecialityPoolWeight) GetSpecialityPack_1() int32 {
	if m != nil && m.SpecialityPack_1 != nil {
		return *m.SpecialityPack_1
	}
	return 0
}

func (m *SpecialityPoolWeight) GetWeight_1() int32 {
	if m != nil && m.Weight_1 != nil {
		return *m.Weight_1
	}
	return 0
}

func (m *SpecialityPoolWeight) GetSpecialityPack_2() int32 {
	if m != nil && m.SpecialityPack_2 != nil {
		return *m.SpecialityPack_2
	}
	return 0
}

func (m *SpecialityPoolWeight) GetWeight_2() int32 {
	if m != nil && m.Weight_2 != nil {
		return *m.Weight_2
	}
	return 0
}

func (m *SpecialityPoolWeight) GetSpecialityPack_3() int32 {
	if m != nil && m.SpecialityPack_3 != nil {
		return *m.SpecialityPack_3
	}
	return 0
}

func (m *SpecialityPoolWeight) GetWeight_3() int32 {
	if m != nil && m.Weight_3 != nil {
		return *m.Weight_3
	}
	return 0
}

func (m *SpecialityPoolWeight) GetSpecialityPack_4() int32 {
	if m != nil && m.SpecialityPack_4 != nil {
		return *m.SpecialityPack_4
	}
	return 0
}

func (m *SpecialityPoolWeight) GetWeight_4() int32 {
	if m != nil && m.Weight_4 != nil {
		return *m.Weight_4
	}
	return 0
}

func (m *SpecialityPoolWeight) GetSpecialityPack_5() int32 {
	if m != nil && m.SpecialityPack_5 != nil {
		return *m.SpecialityPack_5
	}
	return 0
}

func (m *SpecialityPoolWeight) GetWeight_5() int32 {
	if m != nil && m.Weight_5 != nil {
		return *m.Weight_5
	}
	return 0
}

func (m *SpecialityPoolWeight) GetSpecialityPack_6() int32 {
	if m != nil && m.SpecialityPack_6 != nil {
		return *m.SpecialityPack_6
	}
	return 0
}

func (m *SpecialityPoolWeight) GetWeight_6() int32 {
	if m != nil && m.Weight_6 != nil {
		return *m.Weight_6
	}
	return 0
}

type SpecialityPoolWeightConfig struct {
	Data             []*SpecialityPoolWeight `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SpecialityPoolWeightConfig) Reset()                    { *m = SpecialityPoolWeightConfig{} }
func (m *SpecialityPoolWeightConfig) String() string            { return proto.CompactTextString(m) }
func (*SpecialityPoolWeightConfig) ProtoMessage()               {}
func (*SpecialityPoolWeightConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{86} }

func (m *SpecialityPoolWeightConfig) GetData() []*SpecialityPoolWeight {
	if m != nil {
		return m.Data
	}
	return nil
}

type TeamInit struct {
	Id               *int32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BaseLvTeam       *int32      `protobuf:"varint,2,opt,name=base_lv_team" json:"base_lv_team,omitempty"`
	BaseExpTeam      *ItemConfig `protobuf:"bytes,3,opt,name=base_exp_team" json:"base_exp_team,omitempty"`
	BaseGold         *ItemConfig `protobuf:"bytes,4,opt,name=base_gold" json:"base_gold,omitempty"`
	BaseDiamond      *ItemConfig `protobuf:"bytes,5,opt,name=base_diamond" json:"base_diamond,omitempty"`
	BasePlayerOne    *ItemConfig `protobuf:"bytes,6,opt,name=base_player_one" json:"base_player_one,omitempty"`
	BasePlayerTwo    *ItemConfig `protobuf:"bytes,7,opt,name=base_player_two" json:"base_player_two,omitempty"`
	BasePlayerThree  *ItemConfig `protobuf:"bytes,8,opt,name=base_player_three" json:"base_player_three,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *TeamInit) Reset()                    { *m = TeamInit{} }
func (m *TeamInit) String() string            { return proto.CompactTextString(m) }
func (*TeamInit) ProtoMessage()               {}
func (*TeamInit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{87} }

func (m *TeamInit) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TeamInit) GetBaseLvTeam() int32 {
	if m != nil && m.BaseLvTeam != nil {
		return *m.BaseLvTeam
	}
	return 0
}

func (m *TeamInit) GetBaseExpTeam() *ItemConfig {
	if m != nil {
		return m.BaseExpTeam
	}
	return nil
}

func (m *TeamInit) GetBaseGold() *ItemConfig {
	if m != nil {
		return m.BaseGold
	}
	return nil
}

func (m *TeamInit) GetBaseDiamond() *ItemConfig {
	if m != nil {
		return m.BaseDiamond
	}
	return nil
}

func (m *TeamInit) GetBasePlayerOne() *ItemConfig {
	if m != nil {
		return m.BasePlayerOne
	}
	return nil
}

func (m *TeamInit) GetBasePlayerTwo() *ItemConfig {
	if m != nil {
		return m.BasePlayerTwo
	}
	return nil
}

func (m *TeamInit) GetBasePlayerThree() *ItemConfig {
	if m != nil {
		return m.BasePlayerThree
	}
	return nil
}

type TeamInitConfig struct {
	Data             []*TeamInit `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *TeamInitConfig) Reset()                    { *m = TeamInitConfig{} }
func (m *TeamInitConfig) String() string            { return proto.CompactTextString(m) }
func (*TeamInitConfig) ProtoMessage()               {}
func (*TeamInitConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{88} }

func (m *TeamInitConfig) GetData() []*TeamInit {
	if m != nil {
		return m.Data
	}
	return nil
}

type ThrowerInPosition struct {
	Id               *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Playercount      *int32   `protobuf:"varint,2,opt,name=playercount" json:"playercount,omitempty"`
	Flag             *int32   `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
	PoxX             *float32 `protobuf:"fixed32,4,opt,name=pox_x" json:"pox_x,omitempty"`
	PosY             *float32 `protobuf:"fixed32,5,opt,name=pos_y" json:"pos_y,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,6,opt,name=pos_z" json:"pos_z,omitempty"`
	RotateX          *float32 `protobuf:"fixed32,7,opt,name=rotate_x" json:"rotate_x,omitempty"`
	RotateY          *float32 `protobuf:"fixed32,8,opt,name=rotate_y" json:"rotate_y,omitempty"`
	RotateZ          *float32 `protobuf:"fixed32,9,opt,name=rotate_z" json:"rotate_z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ThrowerInPosition) Reset()                    { *m = ThrowerInPosition{} }
func (m *ThrowerInPosition) String() string            { return proto.CompactTextString(m) }
func (*ThrowerInPosition) ProtoMessage()               {}
func (*ThrowerInPosition) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{89} }

func (m *ThrowerInPosition) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ThrowerInPosition) GetPlayercount() int32 {
	if m != nil && m.Playercount != nil {
		return *m.Playercount
	}
	return 0
}

func (m *ThrowerInPosition) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *ThrowerInPosition) GetPoxX() float32 {
	if m != nil && m.PoxX != nil {
		return *m.PoxX
	}
	return 0
}

func (m *ThrowerInPosition) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *ThrowerInPosition) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *ThrowerInPosition) GetRotateX() float32 {
	if m != nil && m.RotateX != nil {
		return *m.RotateX
	}
	return 0
}

func (m *ThrowerInPosition) GetRotateY() float32 {
	if m != nil && m.RotateY != nil {
		return *m.RotateY
	}
	return 0
}

func (m *ThrowerInPosition) GetRotateZ() float32 {
	if m != nil && m.RotateZ != nil {
		return *m.RotateZ
	}
	return 0
}

type ThrowerInPositionConfig struct {
	Data             []*ThrowerInPosition `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ThrowerInPositionConfig) Reset()                    { *m = ThrowerInPositionConfig{} }
func (m *ThrowerInPositionConfig) String() string            { return proto.CompactTextString(m) }
func (*ThrowerInPositionConfig) ProtoMessage()               {}
func (*ThrowerInPositionConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{90} }

func (m *ThrowerInPositionConfig) GetData() []*ThrowerInPosition {
	if m != nil {
		return m.Data
	}
	return nil
}

type TrainingAi struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BehaviorTree     *string `protobuf:"bytes,2,opt,name=behavior_tree" json:"behavior_tree,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TrainingAi) Reset()                    { *m = TrainingAi{} }
func (m *TrainingAi) String() string            { return proto.CompactTextString(m) }
func (*TrainingAi) ProtoMessage()               {}
func (*TrainingAi) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{91} }

func (m *TrainingAi) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TrainingAi) GetBehaviorTree() string {
	if m != nil && m.BehaviorTree != nil {
		return *m.BehaviorTree
	}
	return ""
}

type TrainingAiConfig struct {
	Data             []*TrainingAi `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *TrainingAiConfig) Reset()                    { *m = TrainingAiConfig{} }
func (m *TrainingAiConfig) String() string            { return proto.CompactTextString(m) }
func (*TrainingAiConfig) ProtoMessage()               {}
func (*TrainingAiConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{92} }

func (m *TrainingAiConfig) GetData() []*TrainingAi {
	if m != nil {
		return m.Data
	}
	return nil
}

type TrainingNpc struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PlayerId         *int32  `protobuf:"varint,3,opt,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TrainingNpc) Reset()                    { *m = TrainingNpc{} }
func (m *TrainingNpc) String() string            { return proto.CompactTextString(m) }
func (*TrainingNpc) ProtoMessage()               {}
func (*TrainingNpc) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{93} }

func (m *TrainingNpc) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TrainingNpc) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TrainingNpc) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type TrainingNpcConfig struct {
	Data             []*TrainingNpc `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *TrainingNpcConfig) Reset()                    { *m = TrainingNpcConfig{} }
func (m *TrainingNpcConfig) String() string            { return proto.CompactTextString(m) }
func (*TrainingNpcConfig) ProtoMessage()               {}
func (*TrainingNpcConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{94} }

func (m *TrainingNpcConfig) GetData() []*TrainingNpc {
	if m != nil {
		return m.Data
	}
	return nil
}

type TrainingSection struct {
	Id               *int32     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NpcId            *int32     `protobuf:"varint,2,opt,name=npc_id" json:"npc_id,omitempty"`
	NpcAiId          *int32     `protobuf:"varint,3,opt,name=npc_ai_id" json:"npc_ai_id,omitempty"`
	NpcPvpPos        *int32     `protobuf:"varint,4,opt,name=npc_pvp_pos" json:"npc_pvp_pos,omitempty"`
	NpcPos           *SdVector2 `protobuf:"bytes,5,opt,name=npc_pos" json:"npc_pos,omitempty"`
	NpcRotateY       *float32   `protobuf:"fixed32,6,opt,name=npc_rotate_y" json:"npc_rotate_y,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *TrainingSection) Reset()                    { *m = TrainingSection{} }
func (m *TrainingSection) String() string            { return proto.CompactTextString(m) }
func (*TrainingSection) ProtoMessage()               {}
func (*TrainingSection) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{95} }

func (m *TrainingSection) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TrainingSection) GetNpcId() int32 {
	if m != nil && m.NpcId != nil {
		return *m.NpcId
	}
	return 0
}

func (m *TrainingSection) GetNpcAiId() int32 {
	if m != nil && m.NpcAiId != nil {
		return *m.NpcAiId
	}
	return 0
}

func (m *TrainingSection) GetNpcPvpPos() int32 {
	if m != nil && m.NpcPvpPos != nil {
		return *m.NpcPvpPos
	}
	return 0
}

func (m *TrainingSection) GetNpcPos() *SdVector2 {
	if m != nil {
		return m.NpcPos
	}
	return nil
}

func (m *TrainingSection) GetNpcRotateY() float32 {
	if m != nil && m.NpcRotateY != nil {
		return *m.NpcRotateY
	}
	return 0
}

type TrainingSectionConfig struct {
	Data             []*TrainingSection `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *TrainingSectionConfig) Reset()                    { *m = TrainingSectionConfig{} }
func (m *TrainingSectionConfig) String() string            { return proto.CompactTextString(m) }
func (*TrainingSectionConfig) ProtoMessage()               {}
func (*TrainingSectionConfig) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{96} }

func (m *TrainingSectionConfig) GetData() []*TrainingSection {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ItemConfig)(nil), "ItemConfig")
	proto.RegisterType((*Effect)(nil), "effect")
	proto.RegisterType((*CritPara)(nil), "CritPara")
	proto.RegisterType((*SdVector2)(nil), "SdVector2")
	proto.RegisterType((*PropertyValue)(nil), "PropertyValue")
	proto.RegisterType((*SpecialityInitPool)(nil), "SpecialityInitPool")
	proto.RegisterType((*PveNpcDate)(nil), "PveNpcDate")
	proto.RegisterType((*AiAreaDescrip)(nil), "AiAreaDescrip")
	proto.RegisterType((*AiAreaDescripConfig)(nil), "AiAreaDescripConfig")
	proto.RegisterType((*AnimationSmooth)(nil), "AnimationSmooth")
	proto.RegisterType((*AnimationSmoothConfig)(nil), "AnimationSmoothConfig")
	proto.RegisterType((*BallPosition)(nil), "BallPosition")
	proto.RegisterType((*BallPositionConfig)(nil), "BallPositionConfig")
	proto.RegisterType((*BattleParameter)(nil), "BattleParameter")
	proto.RegisterType((*BattleParameterConfig)(nil), "BattleParameterConfig")
	proto.RegisterType((*CostAll)(nil), "CostAll")
	proto.RegisterType((*CostAllConfig)(nil), "CostAllConfig")
	proto.RegisterType((*CourtTimeParameter)(nil), "CourtTimeParameter")
	proto.RegisterType((*CourtTimeParameterConfig)(nil), "CourtTimeParameterConfig")
	proto.RegisterType((*DropMatching)(nil), "DropMatching")
	proto.RegisterType((*DropMatchingConfig)(nil), "DropMatchingConfig")
	proto.RegisterType((*FightConstParameter)(nil), "FightConstParameter")
	proto.RegisterType((*FightConstParameterConfig)(nil), "FightConstParameterConfig")
	proto.RegisterType((*FragmentCompound)(nil), "FragmentCompound")
	proto.RegisterType((*FragmentCompoundConfig)(nil), "FragmentCompoundConfig")
	proto.RegisterType((*ItemBase)(nil), "ItemBase")
	proto.RegisterType((*ItemBaseConfig)(nil), "ItemBaseConfig")
	proto.RegisterType((*Locale)(nil), "Locale")
	proto.RegisterType((*LocaleConfig)(nil), "LocaleConfig")
	proto.RegisterType((*NpcMain)(nil), "NpcMain")
	proto.RegisterType((*NpcMainConfig)(nil), "NpcMainConfig")
	proto.RegisterType((*PlayerModel)(nil), "PlayerModel")
	proto.RegisterType((*PlayerModelConfig)(nil), "PlayerModelConfig")
	proto.RegisterType((*PlayerProperty)(nil), "PlayerProperty")
	proto.RegisterType((*PlayerPropertyConfig)(nil), "PlayerPropertyConfig")
	proto.RegisterType((*PlayerPropertyQuality)(nil), "PlayerPropertyQuality")
	proto.RegisterType((*PlayerPropertyQualityConfig)(nil), "PlayerPropertyQualityConfig")
	proto.RegisterType((*PlayerSelect)(nil), "PlayerSelect")
	proto.RegisterType((*PlayerSelectConfig)(nil), "PlayerSelectConfig")
	proto.RegisterType((*PlayerSelectPackage)(nil), "PlayerSelectPackage")
	proto.RegisterType((*PlayerSelectPackageConfig)(nil), "PlayerSelectPackageConfig")
	proto.RegisterType((*PlayerSelectPackWeight)(nil), "PlayerSelectPackWeight")
	proto.RegisterType((*PlayerSelectPackWeightConfig)(nil), "PlayerSelectPackWeightConfig")
	proto.RegisterType((*PlayerSkillBase)(nil), "PlayerSkillBase")
	proto.RegisterType((*PlayerSkillBaseConfig)(nil), "PlayerSkillBaseConfig")
	proto.RegisterType((*PlayerSkillConstantPara)(nil), "PlayerSkillConstantPara")
	proto.RegisterType((*PlayerSkillConstantParaConfig)(nil), "PlayerSkillConstantParaConfig")
	proto.RegisterType((*PlayerSkillEffect)(nil), "PlayerSkillEffect")
	proto.RegisterType((*PlayerSkillEffectConfig)(nil), "PlayerSkillEffectConfig")
	proto.RegisterType((*PlayerSkillLvUp)(nil), "PlayerSkillLvUp")
	proto.RegisterType((*PlayerSkillLvUpConfig)(nil), "PlayerSkillLvUpConfig")
	proto.RegisterType((*PveChapter)(nil), "PveChapter")
	proto.RegisterType((*PveChapterConfig)(nil), "PveChapterConfig")
	proto.RegisterType((*PvpPos)(nil), "PvpPos")
	proto.RegisterType((*PvpPosConfig)(nil), "PvpPosConfig")
	proto.RegisterType((*ResourcesImg)(nil), "ResourcesImg")
	proto.RegisterType((*ResourcesImgConfig)(nil), "ResourcesImgConfig")
	proto.RegisterType((*SceneModel)(nil), "SceneModel")
	proto.RegisterType((*SceneModelConfig)(nil), "SceneModelConfig")
	proto.RegisterType((*SdKeyMapping)(nil), "SdKeyMapping")
	proto.RegisterType((*SdKeyMappingConfig)(nil), "SdKeyMappingConfig")
	proto.RegisterType((*SdNameLibrary)(nil), "SdNameLibrary")
	proto.RegisterType((*SdNameLibraryConfig)(nil), "SdNameLibraryConfig")
	proto.RegisterType((*SdPlayerAction)(nil), "SdPlayerAction")
	proto.RegisterType((*SdPlayerActionConfig)(nil), "SdPlayerActionConfig")
	proto.RegisterType((*SdPlayerEmoji)(nil), "SdPlayerEmoji")
	proto.RegisterType((*SdPlayerEmojiConfig)(nil), "SdPlayerEmojiConfig")
	proto.RegisterType((*SdPlayerEnergy)(nil), "SdPlayerEnergy")
	proto.RegisterType((*SdPlayerEnergyConfig)(nil), "SdPlayerEnergyConfig")
	proto.RegisterType((*SdPlayerLvUp)(nil), "SdPlayerLvUp")
	proto.RegisterType((*SdPlayerLvUpConfig)(nil), "SdPlayerLvUpConfig")
	proto.RegisterType((*SdPlayerLvUpProperty)(nil), "SdPlayerLvUpProperty")
	proto.RegisterType((*SdPlayerLvUpPropertyConfig)(nil), "SdPlayerLvUpPropertyConfig")
	proto.RegisterType((*SdPlayerMain)(nil), "SdPlayerMain")
	proto.RegisterType((*SdPlayerMainConfig)(nil), "SdPlayerMainConfig")
	proto.RegisterType((*SdPlayerPosition)(nil), "SdPlayerPosition")
	proto.RegisterType((*SdPlayerPositionConfig)(nil), "SdPlayerPositionConfig")
	proto.RegisterType((*SdPlayerProperty)(nil), "SdPlayerProperty")
	proto.RegisterType((*SdPlayerPropertyConfig)(nil), "SdPlayerPropertyConfig")
	proto.RegisterType((*SdPlayerSchool)(nil), "SdPlayerSchool")
	proto.RegisterType((*SdPlayerSchoolConfig)(nil), "SdPlayerSchoolConfig")
	proto.RegisterType((*SpecialityConfig)(nil), "SpecialityConfig")
	proto.RegisterType((*SpecialityConfigConfig)(nil), "SpecialityConfigConfig")
	proto.RegisterType((*SpecialityPackage)(nil), "SpecialityPackage")
	proto.RegisterType((*SpecialityPackageConfig)(nil), "SpecialityPackageConfig")
	proto.RegisterType((*SpecialityPoolWeight)(nil), "SpecialityPoolWeight")
	proto.RegisterType((*SpecialityPoolWeightConfig)(nil), "SpecialityPoolWeightConfig")
	proto.RegisterType((*TeamInit)(nil), "TeamInit")
	proto.RegisterType((*TeamInitConfig)(nil), "TeamInitConfig")
	proto.RegisterType((*ThrowerInPosition)(nil), "ThrowerInPosition")
	proto.RegisterType((*ThrowerInPositionConfig)(nil), "ThrowerInPositionConfig")
	proto.RegisterType((*TrainingAi)(nil), "TrainingAi")
	proto.RegisterType((*TrainingAiConfig)(nil), "TrainingAiConfig")
	proto.RegisterType((*TrainingNpc)(nil), "TrainingNpc")
	proto.RegisterType((*TrainingNpcConfig)(nil), "TrainingNpcConfig")
	proto.RegisterType((*TrainingSection)(nil), "TrainingSection")
	proto.RegisterType((*TrainingSectionConfig)(nil), "TrainingSectionConfig")
}

func init() { proto.RegisterFile("conf.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 4219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcd, 0x8f, 0xdc, 0x46,
	0x76, 0x47, 0xcf, 0x77, 0xbf, 0xee, 0xe9, 0xe9, 0xe9, 0x9e, 0x0f, 0xea, 0xcb, 0x1e, 0xd1, 0x96,
	0x57, 0xde, 0xc0, 0x6d, 0x68, 0x64, 0xed, 0xc6, 0xeb, 0x04, 0x81, 0x34, 0xb2, 0xbc, 0xb2, 0x66,
	0x14, 0xc9, 0x33, 0xeb, 0x8f, 0x01, 0x02, 0xa2, 0x86, 0xac, 0xee, 0x2e, 0x8b, 0x64, 0x71, 0x8b,
	0xd5, 0x3d, 0x33, 0x46, 0x0e, 0x01, 0x72, 0xc8, 0x02, 0xb9, 0x04, 0x39, 0xe4, 0x90, 0x53, 0x2e,
	0x41, 0xfe, 0x84, 0x5c, 0x03, 0x2c, 0x92, 0x7f, 0x23, 0xc7, 0x9c, 0x92, 0x43, 0x4e, 0x01, 0xf6,
	0x12, 0x54, 0xd5, 0x2b, 0x16, 0xc9, 0xee, 0xb6, 0xb0, 0xb7, 0xbd, 0xb1, 0x7e, 0xef, 0xb1, 0x58,
	0xef, 0xa3, 0xde, 0x7b, 0xf5, 0x58, 0x00, 0x21, 0x4f, 0x87, 0x83, 0x4c, 0x70, 0xc9, 0xfd, 0xfb,
	0x00, 0xcf, 0x25, 0x4d, 0x8e, 0x78, 0x3a, 0x64, 0xa3, 0x1e, 0xc0, 0x12, 0x8b, 0xbc, 0xc6, 0x41,
	0xe3, 0xfe, 0x6a, 0xaf, 0x03, 0x6b, 0xe9, 0x24, 0xb9, 0xa0, 0xc2, 0x5b, 0x52, 0x63, 0xff, 0x43,
	0x58, 0xa3, 0xc3, 0x21, 0x0d, 0x65, 0x6f, 0x1b, 0x9a, 0xe6, 0x29, 0x28, 0x98, 0xdb, 0xb0, 0xc2,
	0xa3, 0x28, 0x47, 0xd6, 0x5f, 0xc2, 0xc6, 0x91, 0x60, 0xf2, 0x15, 0x11, 0xa4, 0xd7, 0x82, 0xe5,
	0x84, 0xa5, 0xc8, 0xa6, 0x06, 0xe4, 0xca, 0x70, 0xf5, 0xba, 0xb0, 0x41, 0xaf, 0x32, 0x1a, 0x4a,
	0x1a, 0x79, 0xcb, 0x16, 0x99, 0x12, 0xc1, 0x48, 0x1a, 0x52, 0x6f, 0x45, 0xcf, 0x74, 0x17, 0x9a,
	0xa7, 0xd1, 0xd7, 0x34, 0x94, 0x5c, 0x1c, 0xf6, 0x9a, 0xd0, 0xb8, 0xf2, 0x1a, 0x07, 0x4b, 0xf7,
	0x57, 0xd5, 0xe3, 0xb5, 0xb7, 0xa4, 0x1e, 0xfd, 0x3f, 0x81, 0xcd, 0x57, 0x82, 0x67, 0x54, 0xc8,
	0xeb, 0xaf, 0x49, 0x3c, 0xa1, 0xbd, 0x1d, 0x68, 0x67, 0x08, 0xc8, 0xeb, 0x8c, 0xe2, 0xa7, 0x77,
	0x61, 0xd3, 0xa2, 0x53, 0xc5, 0x86, 0x4b, 0x7d, 0x02, 0xbd, 0xd3, 0x8c, 0x86, 0x8c, 0xc4, 0x4c,
	0x5e, 0x3f, 0x4f, 0x99, 0x7c, 0xc5, 0x79, 0xdc, 0xdb, 0x83, 0x0e, 0xcb, 0x83, 0x49, 0x1a, 0xf3,
	0xf0, 0x4d, 0x30, 0x14, 0xd4, 0x4e, 0xb2, 0x03, 0x6d, 0x96, 0x32, 0x19, 0x64, 0x9c, 0xc7, 0x4a,
	0x78, 0x33, 0xc7, 0x5f, 0x00, 0xbc, 0x9a, 0xd2, 0x97, 0x59, 0xf8, 0x94, 0x48, 0xaa, 0xf5, 0x96,
	0x85, 0x4e, 0x35, 0xef, 0xc0, 0x9e, 0x1a, 0x8f, 0x26, 0x44, 0x44, 0x81, 0x24, 0x62, 0x44, 0x65,
	0xc0, 0xd2, 0x88, 0x5a, 0x35, 0xbc, 0x0b, 0xfb, 0x8a, 0x4e, 0xa4, 0x24, 0xe1, 0x9b, 0x2a, 0x83,
	0xd6, 0x8a, 0xff, 0x97, 0xb0, 0xf9, 0x98, 0x3d, 0x16, 0x94, 0x3c, 0xa5, 0x79, 0x28, 0x58, 0x56,
	0xb1, 0x52, 0x17, 0x36, 0x88, 0xa0, 0xe4, 0x4c, 0x09, 0x6a, 0xe6, 0xeb, 0x01, 0xb0, 0xfc, 0x98,
	0x0e, 0xe5, 0x29, 0x8b, 0x28, 0x2a, 0x76, 0x1b, 0x9a, 0xf9, 0x98, 0x64, 0x54, 0xb3, 0x69, 0xcd,
	0xf6, 0xf6, 0x61, 0x39, 0xe3, 0xb9, 0xb7, 0x7a, 0xd0, 0xb8, 0xdf, 0x3a, 0x84, 0x81, 0xd3, 0xf2,
	0x26, 0xac, 0x66, 0x44, 0x90, 0xc4, 0x5b, 0x3b, 0x58, 0xbe, 0xbf, 0xea, 0x3f, 0x84, 0x7e, 0xe5,
	0xeb, 0xe8, 0x29, 0xb7, 0x61, 0x25, 0x22, 0x92, 0x78, 0x8d, 0x83, 0xe5, 0xfb, 0xad, 0xc3, 0xce,
	0xa0, 0xc2, 0xe3, 0x7f, 0x0d, 0x5b, 0x8f, 0x53, 0x96, 0x10, 0xc9, 0x78, 0x7a, 0x9a, 0x70, 0x2e,
	0xc7, 0x95, 0x45, 0x6f, 0x43, 0x33, 0x9c, 0x08, 0x71, 0x2a, 0x89, 0x34, 0xab, 0x6e, 0x2a, 0x39,
	0xa2, 0x5c, 0x1a, 0x64, 0x59, 0x23, 0x3d, 0x00, 0x29, 0x48, 0x9a, 0x33, 0x35, 0x89, 0x5e, 0xf4,
	0x92, 0xff, 0x73, 0xd8, 0xad, 0xcd, 0x8b, 0xcb, 0x79, 0xa7, 0xb2, 0x9c, 0xee, 0xa0, 0xc6, 0xe5,
	0xff, 0x53, 0x03, 0xda, 0x4f, 0x48, 0x1c, 0xbf, 0xe2, 0x66, 0xbe, 0xca, 0x72, 0xfa, 0xd0, 0xca,
	0x62, 0x72, 0x4d, 0x45, 0xc8, 0x27, 0xa9, 0x44, 0x35, 0xb6, 0x61, 0x65, 0x18, 0x93, 0x11, 0x2a,
	0x50, 0x29, 0x85, 0x5f, 0x05, 0x57, 0x66, 0x1d, 0x66, 0x98, 0x07, 0xd7, 0x5a, 0x7d, 0xc5, 0xf0,
	0x07, 0x6f, 0x4d, 0x0f, 0xbb, 0xb0, 0x21, 0xb8, 0x92, 0x24, 0xb8, 0xf2, 0xd6, 0x6b, 0xc8, 0xb5,
	0xb7, 0x51, 0x43, 0x7e, 0xf0, 0x9a, 0x5a, 0xb6, 0x07, 0xd0, 0x2b, 0xaf, 0x10, 0x05, 0xbb, 0x55,
	0x11, 0x6c, 0x73, 0x50, 0x66, 0xf1, 0xff, 0xa7, 0x01, 0x5b, 0x4f, 0x88, 0x94, 0x31, 0x55, 0x5b,
	0x2d, 0xa1, 0x92, 0x8a, 0x8a, 0x60, 0xfb, 0xb0, 0x95, 0x4c, 0x62, 0xc9, 0xb2, 0x98, 0x06, 0xca,
	0xa6, 0xc1, 0x03, 0x14, 0x6e, 0x86, 0x70, 0x88, 0x72, 0xce, 0x10, 0x1e, 0x16, 0xee, 0x52, 0x23,
	0x7c, 0xa2, 0x65, 0x9f, 0x43, 0x78, 0xa4, 0xb5, 0xa0, 0xb5, 0x7a, 0x41, 0xf2, 0xe2, 0xc3, 0xeb,
	0xb3, 0xe0, 0xa1, 0xd6, 0x45, 0x0d, 0x7c, 0xa8, 0xd5, 0x51, 0x03, 0x3f, 0xf1, 0x40, 0x6f, 0x85,
	0x9f, 0xc3, 0x6e, 0x4d, 0xde, 0x05, 0xf6, 0xaf, 0x71, 0xf9, 0x7f, 0x0c, 0xeb, 0x47, 0x3c, 0x97,
	0x8f, 0xe3, 0x58, 0x19, 0x4b, 0xb2, 0x84, 0xe6, 0x6e, 0x7b, 0xe6, 0x45, 0x00, 0x08, 0x04, 0xcd,
	0xa9, 0x0c, 0x84, 0x72, 0x1d, 0xdc, 0xdc, 0x3f, 0x81, 0x4d, 0x7c, 0x13, 0x3f, 0xb5, 0x57, 0xf9,
	0xd4, 0xc6, 0x00, 0xa9, 0xfe, 0xdf, 0xaf, 0x40, 0xef, 0x88, 0x4f, 0x84, 0x3c, 0x63, 0x49, 0xc9,
	0x1e, 0x3d, 0x80, 0x84, 0xc8, 0x70, 0x1c, 0xa8, 0x8f, 0xe2, 0x37, 0xef, 0xc2, 0x0d, 0x35, 0x0a,
	0xf2, 0x31, 0x97, 0x41, 0xa8, 0x83, 0xcc, 0x94, 0xf1, 0x58, 0x3b, 0x2c, 0x5a, 0xe8, 0x16, 0xf4,
	0x35, 0x0b, 0xbd, 0x0a, 0xc7, 0x24, 0x1d, 0xd1, 0x20, 0x54, 0x53, 0xa3, 0x95, 0xfa, 0xd0, 0x1a,
	0x93, 0x78, 0x18, 0xc4, 0x34, 0x1d, 0xc9, 0x31, 0xfa, 0x64, 0x0f, 0x40, 0x83, 0x97, 0x2c, 0x92,
	0x63, 0x74, 0xcc, 0x1b, 0xb0, 0x2d, 0xc7, 0x82, 0xd2, 0x40, 0xa8, 0x68, 0x8d, 0xec, 0xc6, 0x49,
	0x3d, 0xe8, 0x96, 0x48, 0xe6, 0x25, 0xe3, 0xac, 0x37, 0xa1, 0x37, 0x56, 0xf1, 0x2d, 0xa6, 0x64,
	0x4a, 0x83, 0x0b, 0x4e, 0x44, 0x44, 0x05, 0xba, 0xed, 0x1d, 0xd8, 0x35, 0x6f, 0xc5, 0x2c, 0xa5,
	0xc8, 0xa1, 0x98, 0x8d, 0x0f, 0xeb, 0x85, 0xa9, 0x57, 0xc7, 0x94, 0x8d, 0xc6, 0x52, 0x1b, 0x6d,
	0xa9, 0x77, 0x1b, 0x76, 0x8c, 0x06, 0x32, 0xa1, 0xbe, 0x46, 0xa2, 0x6b, 0xa3, 0x8b, 0x96, 0xa6,
	0xee, 0x41, 0xc7, 0x50, 0x13, 0x72, 0x65, 0xf0, 0xb6, 0x5d, 0x9f, 0xc1, 0x4b, 0x6f, 0x6c, 0x56,
	0x29, 0x19, 0x99, 0xe4, 0xd4, 0x50, 0x3a, 0x56, 0x5c, 0x43, 0x19, 0x92, 0x88, 0xb2, 0xd4, 0x90,
	0xb6, 0xaa, 0x2f, 0x5d, 0xc4, 0x3a, 0xcc, 0x2a, 0x4a, 0xd7, 0x8a, 0xeb, 0x5e, 0xe2, 0x13, 0x69,
	0x68, 0xdb, 0x56, 0x5c, 0x43, 0xcb, 0xa9, 0x98, 0xd2, 0xe0, 0x92, 0x30, 0x24, 0xf7, 0x34, 0xf9,
	0x00, 0x3c, 0x24, 0x5f, 0x32, 0xbd, 0x20, 0x1d, 0x45, 0x0c, 0x47, 0x5f, 0x6f, 0xea, 0x3f, 0x05,
	0x6f, 0xd6, 0x27, 0xd0, 0x91, 0xee, 0x56, 0x1c, 0xa9, 0x3f, 0x98, 0x65, 0xf4, 0xff, 0xa3, 0x01,
	0xed, 0xa7, 0x82, 0x67, 0x27, 0xea, 0x2b, 0x2c, 0x1d, 0xa9, 0x2c, 0x96, 0xe0, 0x73, 0x50, 0x4a,
	0x6e, 0xb7, 0x61, 0xfd, 0x92, 0xa5, 0x01, 0xbd, 0xca, 0xb4, 0xfb, 0xb4, 0x0e, 0x5b, 0x83, 0x52,
	0x56, 0xbf, 0x03, 0x1b, 0x8a, 0x3a, 0xe2, 0xb1, 0x49, 0xb4, 0xb3, 0xe4, 0x21, 0x61, 0xb1, 0x7e,
	0x7b, 0x65, 0x96, 0xfc, 0x0e, 0x34, 0x35, 0x59, 0xbf, 0xbe, 0x3a, 0x4b, 0x7f, 0x0f, 0x3a, 0xc9,
	0x34, 0x0b, 0xe8, 0x95, 0x14, 0xc4, 0x30, 0xad, 0xcd, 0x30, 0xa9, 0xe0, 0x56, 0x96, 0x63, 0x41,
	0x70, 0x2b, 0xb3, 0xf8, 0xff, 0xbb, 0x04, 0xfd, 0x67, 0xca, 0x8d, 0x8e, 0x78, 0x9a, 0x4b, 0xb7,
	0xa1, 0x6e, 0x41, 0xdf, 0xe4, 0xd2, 0x84, 0xa5, 0x41, 0x2e, 0xc9, 0xb5, 0xdb, 0x59, 0xda, 0x01,
	0xf3, 0x49, 0x46, 0x85, 0xda, 0x5a, 0xdc, 0x84, 0xf2, 0x25, 0xa5, 0xb4, 0x0b, 0x7e, 0x15, 0x28,
	0xdb, 0x0a, 0xb5, 0x97, 0xb4, 0x12, 0x34, 0x4c, 0x98, 0x08, 0x2e, 0x48, 0x1c, 0x07, 0x97, 0x94,
	0xbe, 0xc1, 0x48, 0x77, 0x0b, 0xfa, 0x05, 0x5c, 0xcc, 0x25, 0x31, 0xda, 0xdd, 0x80, 0x6d, 0x9e,
	0xd1, 0x54, 0xa9, 0x3f, 0x1f, 0xf3, 0x4b, 0xf3, 0xe9, 0x35, 0xb4, 0xc1, 0x4e, 0x46, 0xf2, 0x3c,
	0xc8, 0xc9, 0x90, 0x06, 0x11, 0xcb, 0xa5, 0x2a, 0x63, 0x8a, 0xc0, 0x37, 0x9f, 0x6a, 0x23, 0xe0,
	0x4d, 0xe8, 0x45, 0x74, 0x48, 0x15, 0xa4, 0x83, 0x1e, 0x49, 0x47, 0x31, 0xc5, 0x40, 0x78, 0x0b,
	0xfa, 0x15, 0x9a, 0x20, 0x11, 0x9b, 0xe4, 0x26, 0x20, 0xaa, 0x17, 0x69, 0xc2, 0xbf, 0x67, 0x41,
	0x44, 0x73, 0xe5, 0x7d, 0x6e, 0x67, 0x99, 0xfa, 0x4a, 0xd3, 0xc2, 0x48, 0xef, 0xa9, 0x55, 0xe5,
	0xaf, 0x88, 0x8c, 0x79, 0x4e, 0xab, 0xef, 0x6c, 0xea, 0x68, 0xf7, 0x67, 0x70, 0x63, 0x8e, 0xce,
	0xd1, 0x5c, 0x7e, 0xc5, 0x5c, 0x3b, 0x83, 0x39, 0x9c, 0xfe, 0xdf, 0x35, 0xa0, 0xfb, 0x4c, 0x90,
	0x51, 0x42, 0x53, 0x79, 0xc4, 0x93, 0x8c, 0x4f, 0xd2, 0x48, 0x59, 0x65, 0x88, 0x98, 0xab, 0x8b,
	0x76, 0x61, 0x33, 0x44, 0x06, 0xe3, 0xca, 0x45, 0x6a, 0x72, 0xb0, 0x2e, 0x86, 0x5c, 0xd0, 0x13,
	0xf4, 0xd7, 0x13, 0x26, 0x68, 0x90, 0x4e, 0x12, 0x34, 0x96, 0x0f, 0x9b, 0x16, 0xe4, 0x72, 0x4c,
	0xc5, 0x1c, 0x07, 0xf5, 0x3f, 0x85, 0xbd, 0xfa, 0x8a, 0x50, 0xa0, 0x77, 0x2b, 0x02, 0x6d, 0x0f,
	0xea, 0x6c, 0xfe, 0xef, 0x96, 0x60, 0x43, 0xcd, 0xf4, 0x84, 0xe4, 0xb4, 0xb7, 0x05, 0xeb, 0x4c,
	0xd2, 0x24, 0x28, 0x97, 0x31, 0x1a, 0x48, 0x49, 0x62, 0xcb, 0x18, 0x0b, 0x69, 0x81, 0x96, 0x8b,
	0x9a, 0x51, 0x41, 0xbf, 0x9e, 0xe8, 0x14, 0x83, 0x0b, 0xef, 0x43, 0x8b, 0x4f, 0xa9, 0x50, 0xea,
	0x57, 0xd2, 0x18, 0xef, 0x52, 0x5f, 0xc8, 0x83, 0x9c, 0xc6, 0x31, 0xfa, 0xd4, 0x3b, 0x38, 0x9d,
	0x86, 0xd6, 0x67, 0xf7, 0x5e, 0x07, 0xd6, 0x54, 0x9d, 0x9a, 0x53, 0xf4, 0xa3, 0x7d, 0xd8, 0x52,
	0x21, 0x51, 0xd0, 0x7c, 0x12, 0x4b, 0xb3, 0x08, 0xe3, 0x44, 0x1e, 0x74, 0x4b, 0x04, 0x53, 0x00,
	0x83, 0xfd, 0xa6, 0xaa, 0xdc, 0x95, 0x54, 0xad, 0x62, 0x11, 0x21, 0x4f, 0x15, 0xd0, 0xb6, 0x86,
	0xd2, 0x8b, 0x88, 0x74, 0x71, 0x77, 0x61, 0x5c, 0x45, 0x57, 0x6c, 0x54, 0xd9, 0xc8, 0x86, 0xdf,
	0xa6, 0x0a, 0xe5, 0xe6, 0x23, 0xc6, 0x20, 0xf1, 0x54, 0xc7, 0x5e, 0xed, 0xa4, 0x65, 0x7c, 0xca,
	0x32, 0x45, 0xeb, 0x5a, 0xda, 0x05, 0x19, 0x05, 0x31, 0xcb, 0x65, 0xe0, 0x34, 0xb7, 0x8d, 0x27,
	0x8e, 0x8e, 0x55, 0x3e, 0xca, 0xbb, 0x5f, 0x31, 0x58, 0x73, 0x60, 0xc9, 0xfe, 0x7b, 0xb0, 0x76,
	0xcc, 0x43, 0x12, 0xd3, 0x52, 0xfd, 0xd3, 0x54, 0xa9, 0xde, 0xd5, 0xfa, 0x4d, 0xff, 0x1e, 0xb4,
	0x0d, 0x13, 0xce, 0xb6, 0x5b, 0x99, 0x6d, 0x7d, 0x60, 0x88, 0xfe, 0x09, 0xac, 0xbf, 0xcc, 0xc2,
	0x13, 0xc2, 0xd2, 0x7a, 0xd1, 0x8a, 0xf1, 0xdd, 0x16, 0xfe, 0xfa, 0xa4, 0x61, 0xa0, 0x98, 0x4e,
	0x69, 0xec, 0x6a, 0x45, 0xc2, 0x14, 0xd3, 0x8a, 0x2d, 0x20, 0x70, 0xba, 0x05, 0x05, 0x04, 0x52,
	0xfd, 0x7f, 0x68, 0x40, 0xeb, 0x95, 0x9e, 0xee, 0x84, 0x47, 0x34, 0xae, 0x97, 0xf9, 0x09, 0x8f,
	0x68, 0xb1, 0x4f, 0x9a, 0x16, 0x79, 0xa9, 0x7c, 0x6f, 0xd9, 0x4a, 0x9b, 0x2b, 0x01, 0xd0, 0xc3,
	0xf6, 0xa0, 0x33, 0xa6, 0x24, 0x0a, 0x26, 0xcc, 0xa6, 0xe3, 0x55, 0x9b, 0x70, 0x59, 0x44, 0x53,
	0xc9, 0x86, 0x2c, 0x34, 0x15, 0xc7, 0x9a, 0x7e, 0xdd, 0x83, 0x2e, 0x16, 0x42, 0x45, 0xf1, 0xec,
	0xad, 0x1f, 0x2c, 0xdf, 0x6f, 0xfa, 0x1f, 0xc3, 0x76, 0x69, 0x5d, 0x28, 0xc5, 0xcd, 0x8a, 0x14,
	0xed, 0x41, 0x89, 0xc3, 0xff, 0x1e, 0x3a, 0x66, 0x68, 0x0f, 0x66, 0xba, 0xc4, 0xc6, 0xe7, 0x4a,
	0x04, 0x28, 0xc0, 0xd2, 0x1e, 0x2a, 0xc3, 0xa5, 0x7d, 0x54, 0x86, 0xa9, 0x8d, 0x00, 0x4d, 0xff,
	0x11, 0xec, 0x54, 0xbf, 0x55, 0x64, 0xb5, 0xf2, 0xfa, 0xb6, 0x06, 0x55, 0x26, 0xa5, 0xec, 0xdd,
	0x2a, 0xf4, 0xda, 0xec, 0xcf, 0xdf, 0x6b, 0xa9, 0xa5, 0xa3, 0xa6, 0xaa, 0x5f, 0x5c, 0xa4, 0x2a,
	0xd0, 0x3c, 0x47, 0x73, 0xf4, 0x00, 0x1c, 0x88, 0xfb, 0xbd, 0x8c, 0x11, 0xb3, 0xe5, 0xfd, 0x23,
	0xb8, 0x35, 0x77, 0x5d, 0x28, 0xd6, 0xfb, 0x15, 0xb1, 0xf6, 0x06, 0x73, 0x79, 0xfd, 0xdf, 0xae,
	0x42, 0xdb, 0x50, 0x4e, 0x69, 0x8c, 0x47, 0xf6, 0x5c, 0x3f, 0x05, 0xe5, 0x53, 0x0f, 0x42, 0xa5,
	0xe8, 0xeb, 0xc0, 0xd4, 0x39, 0xd6, 0x3e, 0x6c, 0x21, 0x58, 0x84, 0x80, 0x15, 0xeb, 0x32, 0x2a,
	0x1b, 0xda, 0x9d, 0xad, 0x42, 0xa7, 0xcb, 0x93, 0x25, 0x10, 0x03, 0xce, 0x9a, 0xcd, 0x67, 0xea,
	0x44, 0xad, 0x03, 0x47, 0x1e, 0xd0, 0x29, 0x15, 0xd7, 0x11, 0xb9, 0xc6, 0x34, 0xb9, 0x05, 0xeb,
	0x9a, 0x18, 0x46, 0x18, 0xd1, 0x7a, 0x00, 0x76, 0x41, 0x93, 0x04, 0x83, 0xd9, 0x5d, 0x68, 0x23,
	0x76, 0x31, 0x49, 0x31, 0x15, 0xd6, 0x02, 0xa3, 0xfd, 0x08, 0xf2, 0x65, 0x24, 0x7c, 0x43, 0x46,
	0x36, 0x31, 0xde, 0x86, 0x9d, 0x21, 0x13, 0xb9, 0x2c, 0x53, 0x5d, 0xb8, 0x53, 0x05, 0x29, 0x17,
	0x09, 0x89, 0x0b, 0x7c, 0xd3, 0xee, 0xff, 0x78, 0x12, 0xbe, 0x31, 0xf1, 0xba, 0x63, 0x27, 0x32,
	0x50, 0x6d, 0xa2, 0xad, 0x9a, 0x2e, 0x15, 0x8e, 0xf1, 0x6e, 0x07, 0xda, 0x63, 0x2e, 0xf3, 0x8c,
	0x23, 0xba, 0x5d, 0x47, 0x75, 0x1b, 0xa5, 0x67, 0x8f, 0x26, 0x16, 0x65, 0x69, 0x28, 0x28, 0xc9,
	0x69, 0x64, 0xe8, 0x7d, 0xab, 0x64, 0x4b, 0x77, 0x2b, 0xdb, 0xb1, 0xfe, 0x6a, 0xed, 0x9d, 0x8c,
	0xd4, 0x92, 0x76, 0xed, 0x82, 0xed, 0x92, 0x30, 0x94, 0x19, 0xea, 0x9e, 0x95, 0x50, 0x9b, 0x53,
	0x87, 0xf4, 0x7d, 0x3b, 0x4f, 0x34, 0xd1, 0xc7, 0x21, 0x84, 0x3d, 0x37, 0xbd, 0x98, 0x52, 0x11,
	0xf0, 0x34, 0xe0, 0xc3, 0xa1, 0x77, 0x43, 0xc3, 0xf7, 0xa0, 0x9b, 0x52, 0x1a, 0x59, 0x75, 0xa8,
	0x78, 0xee, 0xdd, 0x9c, 0x35, 0x0e, 0xa6, 0xb9, 0x31, 0xbf, 0xf4, 0x6e, 0xd9, 0xe9, 0x62, 0x96,
	0x30, 0x49, 0x4d, 0x3a, 0xc9, 0xbd, 0xdb, 0x7a, 0x2b, 0x3c, 0x80, 0x5e, 0xd9, 0x89, 0x17, 0x14,
	0x8d, 0x65, 0x16, 0xff, 0x1c, 0xfa, 0xe5, 0xf1, 0x2b, 0x63, 0x77, 0x15, 0x1a, 0x4d, 0x47, 0xa5,
	0x51, 0xec, 0x3b, 0x43, 0x71, 0xb1, 0xfc, 0x00, 0x5a, 0x3a, 0xff, 0x84, 0xfa, 0x2b, 0x73, 0xea,
	0x64, 0x55, 0x1b, 0xcd, 0x99, 0x7b, 0x41, 0x6d, 0x34, 0x87, 0xd3, 0xff, 0xbf, 0x06, 0xec, 0xd5,
	0xf1, 0x6f, 0x74, 0x68, 0xae, 0xad, 0xa8, 0x68, 0xc0, 0x69, 0x87, 0x7a, 0xe0, 0xfa, 0x65, 0x97,
	0x9a, 0x3b, 0x78, 0x80, 0x81, 0xc6, 0x72, 0x1c, 0x62, 0x8c, 0x71, 0x1c, 0x87, 0xb8, 0x0f, 0x2d,
	0xc7, 0x43, 0xdc, 0x7c, 0x8e, 0xe3, 0x21, 0xee, 0x38, 0xcb, 0xf1, 0x09, 0x6e, 0x38, 0xc7, 0xf1,
	0x09, 0x6e, 0x37, 0xcb, 0xf1, 0x08, 0x2b, 0x06, 0xc7, 0xf1, 0x08, 0x37, 0x94, 0xe5, 0xf8, 0x19,
	0x6e, 0x21, 0xc7, 0xf1, 0x33, 0xac, 0x2b, 0x3f, 0x87, 0xdb, 0xf3, 0x25, 0x47, 0xf5, 0xdd, 0xab,
	0xa8, 0x6f, 0x7f, 0x30, 0x9f, 0xd9, 0xff, 0xcd, 0x32, 0x6c, 0x21, 0xe9, 0x0d, 0x8b, 0x63, 0x5d,
	0x96, 0x75, 0x61, 0x23, 0x57, 0x03, 0xa7, 0x38, 0x15, 0x33, 0x34, 0x52, 0x8a, 0xd4, 0x05, 0x56,
	0xca, 0x28, 0xc5, 0x9b, 0xf1, 0xd4, 0x29, 0xd0, 0x20, 0x61, 0x84, 0x0a, 0xdc, 0x86, 0x26, 0x09,
	0xb5, 0xfb, 0xb3, 0x08, 0x75, 0xb8, 0x03, 0x6d, 0xed, 0xe5, 0x92, 0x92, 0x44, 0xbd, 0xba, 0x5e,
	0x6c, 0x09, 0xf3, 0x01, 0xc1, 0x46, 0x23, 0x3c, 0x30, 0xeb, 0x20, 0x10, 0xaa, 0x0a, 0x99, 0x98,
	0xd2, 0xb7, 0x89, 0x65, 0x1a, 0xb6, 0x52, 0x3d, 0xc0, 0xd2, 0x03, 0x3b, 0xab, 0x2a, 0x07, 0x9b,
	0xef, 0xf3, 0xe4, 0x82, 0x9b, 0xb5, 0xb6, 0x6c, 0x54, 0x32, 0x94, 0x22, 0x04, 0xb7, 0x6d, 0xb2,
	0x44, 0xe9, 0xb1, 0x66, 0xdb, 0xb4, 0x41, 0x56, 0xd0, 0x4b, 0xc1, 0x24, 0x0d, 0xde, 0x50, 0x95,
	0x9b, 0xb2, 0x8c, 0xa5, 0x23, 0xaf, 0x73, 0xb0, 0x6c, 0xf4, 0x33, 0xd4, 0xd6, 0x51, 0xef, 0xe8,
	0x60, 0x55, 0x9a, 0x27, 0xc4, 0x6a, 0xbc, 0x6b, 0xeb, 0x46, 0x41, 0x63, 0x3a, 0x55, 0xcb, 0xbf,
	0x98, 0x0c, 0x87, 0xea, 0x0b, 0xdb, 0xb6, 0x15, 0x53, 0xb3, 0xc4, 0x82, 0x56, 0x4c, 0x8d, 0xcb,
	0xff, 0x14, 0xf6, 0x4b, 0xd0, 0x11, 0x2a, 0x47, 0xf7, 0x8a, 0x67, 0x4d, 0xd9, 0x86, 0x95, 0x8c,
	0x08, 0xe2, 0x2d, 0xe9, 0x5e, 0xe4, 0x17, 0x70, 0x67, 0xc1, 0xab, 0xf8, 0xed, 0x0f, 0x2a, 0xdf,
	0xf6, 0x06, 0x0b, 0xb8, 0xfd, 0xdf, 0x36, 0x6c, 0x49, 0xa3, 0x69, 0x9f, 0x2f, 0xec, 0x6b, 0xf7,
	0xa1, 0x85, 0x50, 0xc9, 0x97, 0xfa, 0xd0, 0xc2, 0x36, 0x6d, 0xc9, 0x99, 0x1c, 0xa7, 0x74, 0x4d,
	0x56, 0x07, 0x86, 0x3c, 0xa2, 0xe8, 0x52, 0x3b, 0xd0, 0x46, 0xb0, 0x9c, 0x16, 0xf7, 0xa0, 0x83,
	0xe8, 0x83, 0x20, 0xd2, 0x53, 0xac, 0xdb, 0x20, 0xef, 0x70, 0x0c, 0xc5, 0xc6, 0xb7, 0xfc, 0xcf,
	0x2a, 0x9a, 0x34, 0x42, 0xa0, 0x22, 0x0e, 0x2a, 0x8a, 0xe8, 0x0d, 0x66, 0xf8, 0xfc, 0xff, 0x6a,
	0x54, 0xb6, 0xd2, 0xf1, 0xf4, 0x57, 0xd9, 0x1c, 0xfd, 0x97, 0xb7, 0xc8, 0x52, 0xd5, 0x11, 0x73,
	0x29, 0x4c, 0x3f, 0x69, 0xd9, 0x16, 0xf2, 0xb6, 0x16, 0x9e, 0xda, 0x82, 0x20, 0x72, 0xa7, 0xb4,
	0x11, 0x8f, 0x23, 0x07, 0xcf, 0x69, 0x23, 0x7c, 0xa0, 0x7b, 0x37, 0x54, 0x30, 0x12, 0x3b, 0xbe,
	0x35, 0xbd, 0xfc, 0x0a, 0x5f, 0xb1, 0x45, 0x58, 0x14, 0xa4, 0xf4, 0x4a, 0xba, 0x1d, 0x58, 0xac,
	0x4c, 0xd2, 0x24, 0x8b, 0x89, 0xc4, 0x43, 0x51, 0xcd, 0x53, 0x95, 0xa0, 0x6f, 0xf7, 0x54, 0xc5,
	0xe5, 0xff, 0x63, 0x43, 0x37, 0xf6, 0x8f, 0xc6, 0x24, 0xab, 0x77, 0x56, 0x95, 0x5e, 0x42, 0x9a,
	0x96, 0xf2, 0x87, 0xee, 0x3d, 0xb1, 0xb4, 0x48, 0xac, 0xae, 0x81, 0xaf, 0x7b, 0x4f, 0xd7, 0x26,
	0x5c, 0xb0, 0x3c, 0x10, 0xba, 0x16, 0x37, 0x8a, 0xb9, 0x03, 0x1b, 0x0a, 0x56, 0x82, 0x7b, 0xab,
	0x28, 0x6b, 0xe9, 0x57, 0xc2, 0x4d, 0x58, 0xa5, 0x29, 0x4d, 0xae, 0x0b, 0x3d, 0x38, 0x9a, 0xff,
	0x11, 0x74, 0xdd, 0xda, 0x50, 0xa0, 0x1b, 0x15, 0x81, 0x34, 0x3b, 0x32, 0xf8, 0x63, 0x58, 0x7b,
	0x35, 0xcd, 0x5e, 0xf1, 0xbc, 0x22, 0x86, 0xda, 0x5e, 0x3c, 0xff, 0x16, 0xfb, 0x24, 0x66, 0xf4,
	0x1d, 0xb6, 0x47, 0xcc, 0xe8, 0x1c, 0xbb, 0x8b, 0x6d, 0x58, 0x11, 0x5c, 0x7e, 0x8b, 0x67, 0x08,
	0x33, 0xfa, 0x0e, 0x5b, 0x89, 0x66, 0x74, 0x6e, 0xda, 0x87, 0xea, 0x94, 0x65, 0xbe, 0xb4, 0xe0,
	0x94, 0x65, 0x88, 0xfe, 0xb7, 0xd0, 0xfe, 0x8a, 0xe6, 0x7c, 0x22, 0x42, 0x9a, 0x3f, 0x4f, 0x46,
	0x4a, 0xa3, 0x2c, 0xa9, 0xe4, 0x3f, 0x8d, 0x8c, 0x6a, 0x41, 0x9c, 0xc8, 0x98, 0xe4, 0xe5, 0xe2,
	0x14, 0xb9, 0xdc, 0xa6, 0x53, 0x65, 0x43, 0x79, 0xe6, 0x05, 0x65, 0x43, 0x99, 0xc5, 0xff, 0xd7,
	0x06, 0xc0, 0xa9, 0xb2, 0xe7, 0xec, 0xc9, 0x4b, 0x55, 0xce, 0x8a, 0xf2, 0xd2, 0x2d, 0xa3, 0x0b,
	0x1b, 0x17, 0xa3, 0x44, 0x9f, 0x59, 0xbd, 0x65, 0x75, 0x42, 0x52, 0x09, 0xd0, 0x24, 0x3c, 0x6f,
	0x45, 0x47, 0xd8, 0x7d, 0xd8, 0xba, 0x88, 0x39, 0x4f, 0x02, 0x39, 0x16, 0x34, 0x1f, 0xdb, 0xce,
	0xd9, 0x92, 0x23, 0xb0, 0x54, 0xd2, 0x34, 0x67, 0xf2, 0x1a, 0x75, 0x58, 0x10, 0x2e, 0xe2, 0x89,
	0x08, 0x72, 0xf6, 0x03, 0xc5, 0x6e, 0xec, 0x1d, 0xd8, 0x2d, 0x11, 0x98, 0xa4, 0x26, 0x04, 0xe4,
	0xe8, 0xdc, 0x1f, 0x41, 0xd7, 0x2d, 0x7c, 0x81, 0x1b, 0x38, 0x06, 0xff, 0x7b, 0x68, 0x9f, 0x46,
	0x2f, 0xe8, 0xf5, 0x89, 0x49, 0x08, 0x33, 0x3e, 0xad, 0xff, 0x48, 0x14, 0x3e, 0xdd, 0x81, 0x35,
	0x95, 0x3d, 0x58, 0x54, 0x4f, 0x98, 0xf6, 0x70, 0xab, 0x4c, 0xaf, 0x6d, 0xb1, 0xaa, 0x15, 0xd3,
	0x86, 0x15, 0x9d, 0x52, 0xf4, 0x81, 0x52, 0xd9, 0xa1, 0xfc, 0xad, 0x05, 0x76, 0x28, 0xb3, 0xf8,
	0xbf, 0x80, 0xcd, 0xd3, 0x48, 0x69, 0xfa, 0x98, 0x5d, 0x08, 0x22, 0xae, 0xd5, 0x8c, 0x57, 0x2a,
	0x71, 0x15, 0xe7, 0x79, 0x12, 0x71, 0x91, 0xa2, 0x1d, 0xda, 0xb0, 0x92, 0x28, 0xa2, 0x76, 0x04,
	0xff, 0x21, 0xf4, 0x2b, 0xef, 0x2e, 0xf8, 0x51, 0x55, 0xe1, 0xf1, 0xff, 0x73, 0x09, 0x3a, 0xa7,
	0x91, 0xd9, 0xf8, 0x8f, 0x75, 0x9e, 0xaf, 0x66, 0xfc, 0xa2, 0x12, 0x33, 0x90, 0x4b, 0x00, 0x34,
	0xa5, 0x62, 0x54, 0x39, 0x9f, 0xf6, 0x00, 0x10, 0x74, 0xed, 0xa9, 0x7d, 0xd8, 0x42, 0x2c, 0x9c,
	0xc8, 0x20, 0xe2, 0x97, 0xb6, 0xd3, 0x73, 0x0b, 0xfa, 0x2c, 0x0f, 0x08, 0x8b, 0xc9, 0x45, 0x4c,
	0x83, 0x88, 0x92, 0x88, 0x08, 0x4a, 0x8a, 0xae, 0xcf, 0x5e, 0x89, 0x98, 0xc7, 0xfc, 0x32, 0x48,
	0x38, 0x9e, 0xc7, 0x31, 0xd4, 0x94, 0x40, 0xfc, 0x5b, 0xb1, 0x31, 0x67, 0xde, 0x30, 0xe6, 0x39,
	0x0d, 0x26, 0x19, 0x96, 0x1d, 0xef, 0xc1, 0xad, 0x7c, 0x4c, 0xde, 0xd0, 0x20, 0x24, 0x09, 0x15,
	0x24, 0x20, 0xf6, 0x9c, 0x6f, 0xf6, 0x13, 0xd8, 0x42, 0xc0, 0x14, 0x1f, 0x46, 0xe2, 0xdc, 0x6b,
	0x69, 0x8f, 0xc6, 0x35, 0x4d, 0xed, 0xd4, 0x29, 0x0f, 0x8c, 0x64, 0x58, 0xf2, 0xe9, 0xb6, 0x5d,
	0x1c, 0xb3, 0xdc, 0xad, 0xc8, 0x54, 0x7e, 0x8f, 0x60, 0xa7, 0xaa, 0xe0, 0x05, 0xe7, 0xf3, 0x2a,
	0x93, 0xff, 0x2f, 0x0d, 0xe5, 0x0a, 0x06, 0xfa, 0x3c, 0xe1, 0xdf, 0x33, 0xd7, 0xce, 0x2c, 0x1f,
	0xca, 0x0d, 0x62, 0xcf, 0x5d, 0xc5, 0x0f, 0x50, 0x03, 0xd7, 0x8c, 0x63, 0x5e, 0x0e, 0xf1, 0x67,
	0xa2, 0x31, 0x8e, 0xed, 0x9d, 0xea, 0x92, 0xea, 0x01, 0xba, 0xf1, 0x0c, 0xe1, 0x10, 0x5b, 0x24,
	0xca, 0xee, 0x66, 0x16, 0x1d, 0xdd, 0xb5, 0x35, 0x8c, 0xdf, 0x95, 0x16, 0xba, 0xd0, 0xef, 0x4a,
	0x3c, 0xfe, 0x5f, 0x37, 0x9c, 0xdf, 0x7d, 0xae, 0xf5, 0x38, 0xbf, 0xef, 0x30, 0xa7, 0xe9, 0xb4,
	0x0f, 0x5b, 0x05, 0x9f, 0xf2, 0xa8, 0xe0, 0xa1, 0xfb, 0x77, 0x57, 0x25, 0x1c, 0x3a, 0x41, 0xab,
	0x04, 0x23, 0x68, 0xc5, 0x36, 0x66, 0x11, 0x6f, 0xb1, 0x8d, 0x61, 0xf2, 0xff, 0x7b, 0x49, 0x45,
	0x11, 0x03, 0xe9, 0xba, 0xa1, 0xf6, 0xcf, 0xd1, 0xd5, 0x01, 0x93, 0xcc, 0xad, 0xdb, 0x89, 0x12,
	0x4f, 0x71, 0xc5, 0x07, 0xe0, 0x55, 0x78, 0xcb, 0xf2, 0xaf, 0xe0, 0x51, 0xbf, 0x13, 0x0a, 0x26,
	0xf5, 0x5f, 0x40, 0xdd, 0x60, 0xc6, 0xd2, 0xa1, 0x39, 0x28, 0x2e, 0x18, 0x6c, 0xc1, 0x7a, 0x3c,
	0x0d, 0x14, 0x17, 0x6e, 0x9f, 0x03, 0x68, 0x21, 0xa0, 0x7f, 0x69, 0xcc, 0x69, 0x9b, 0x1e, 0x98,
	0x56, 0xb2, 0xa0, 0xe6, 0x7f, 0xc5, 0xc6, 0x2c, 0xc7, 0x3d, 0xe8, 0x9a, 0x25, 0x21, 0x9f, 0x9a,
	0xa8, 0x39, 0xcb, 0xb6, 0x03, 0x6d, 0x96, 0x07, 0xfa, 0x34, 0xa0, 0x67, 0x02, 0x9b, 0xef, 0x2d,
	0x6a, 0x4b, 0x1a, 0xac, 0xe2, 0xcd, 0xd2, 0x0a, 0xb0, 0x3d, 0x3b, 0x63, 0x0f, 0x40, 0xb9, 0xad,
	0x51, 0x08, 0x6e, 0x21, 0x1d, 0x48, 0x9d, 0xba, 0x17, 0x06, 0x52, 0xc7, 0xa2, 0xfc, 0x6b, 0xa7,
	0x0c, 0x14, 0x8d, 0xb8, 0x1f, 0x53, 0xf9, 0xef, 0x6f, 0xc0, 0x3b, 0xb6, 0xc1, 0xba, 0x82, 0x5e,
	0x5e, 0xb9, 0x89, 0xe1, 0x3f, 0x86, 0x9b, 0xf3, 0x16, 0x51, 0xfc, 0x38, 0x2a, 0x0b, 0xb0, 0x3b,
	0x98, 0xc7, 0xea, 0xff, 0xed, 0xb2, 0xf3, 0xb5, 0x99, 0x96, 0xac, 0xda, 0x32, 0xf8, 0x2f, 0xdc,
	0x2d, 0xd3, 0xa6, 0xa4, 0x65, 0xdb, 0x90, 0xcf, 0xc3, 0x31, 0x5e, 0xd7, 0x28, 0x3a, 0x71, 0x11,
	0x1b, 0x0e, 0x59, 0x38, 0x89, 0xe5, 0xb5, 0xcb, 0xcb, 0x75, 0xa1, 0x8b, 0xb2, 0x5c, 0xff, 0x75,
	0x89, 0xa7, 0x58, 0xd9, 0x61, 0x0c, 0x56, 0xf9, 0x5a, 0xe1, 0xf4, 0x2a, 0xb3, 0x84, 0x8d, 0xea,
	0x65, 0x02, 0x13, 0x6a, 0x9a, 0x7a, 0x15, 0x37, 0x60, 0xbb, 0x04, 0x06, 0x79, 0x42, 0xe2, 0x18,
	0xe3, 0xad, 0x33, 0x08, 0x17, 0x6c, 0xc4, 0x52, 0xdd, 0x77, 0x62, 0xa9, 0x54, 0x89, 0xad, 0xa5,
	0x39, 0x3a, 0xb0, 0x96, 0xf0, 0x88, 0x3e, 0xb7, 0x0d, 0xaa, 0x4d, 0x58, 0xd5, 0x59, 0xd8, 0xdb,
	0xd4, 0x91, 0xb9, 0x1c, 0x17, 0x3b, 0xb5, 0x52, 0xbc, 0x6c, 0xdd, 0x2d, 0x9b, 0x03, 0x90, 0x56,
	0xfa, 0xeb, 0x6d, 0x7a, 0x1e, 0x8a, 0xa9, 0x5b, 0x73, 0x81, 0xe2, 0xb4, 0xb9, 0xed, 0x52, 0xba,
	0x33, 0xc6, 0x5b, 0x3c, 0x51, 0x77, 0xb5, 0x7f, 0x05, 0x5d, 0x3b, 0x2e, 0x2e, 0x5f, 0xd4, 0xec,
	0xe6, 0x5a, 0xac, 0x16, 0xac, 0x75, 0x83, 0x0b, 0x5e, 0xa5, 0x51, 0x93, 0xed, 0x3f, 0x85, 0xbd,
	0xfa, 0xb4, 0x0b, 0x7e, 0xea, 0xd4, 0xd9, 0xfc, 0xbf, 0x5a, 0x2b, 0x2d, 0xc9, 0xee, 0x8b, 0x5a,
	0x21, 0x64, 0x3f, 0xe9, 0x2a, 0x8d, 0x92, 0x4f, 0xb5, 0x61, 0x65, 0xcc, 0x46, 0xe3, 0xd2, 0x19,
	0xcf, 0xe4, 0x78, 0xe5, 0x10, 0xee, 0x56, 0x04, 0x82, 0x82, 0x86, 0x7c, 0x4a, 0xc5, 0x35, 0xfa,
	0x53, 0x07, 0xd6, 0x14, 0xdb, 0x97, 0x67, 0xae, 0xfd, 0xa2, 0xc6, 0xe7, 0x67, 0xe8, 0x3e, 0x38,
	0x3e, 0x7d, 0xe6, 0x9a, 0x2f, 0x6a, 0xfc, 0xe2, 0x18, 0x63, 0x8b, 0xa5, 0x1f, 0xbb, 0xd6, 0x8b,
	0x1a, 0x3f, 0xfd, 0x06, 0x9d, 0x03, 0xc7, 0x47, 0xaf, 0xb1, 0x11, 0x60, 0xdf, 0x7f, 0x8d, 0xbe,
	0x81, 0xe3, 0xe3, 0x27, 0xe8, 0x0f, 0x38, 0xfe, 0xe2, 0x04, 0x4d, 0x6f, 0xe9, 0xc7, 0xd8, 0x99,
	0xc4, 0xf1, 0xc9, 0x97, 0xd8, 0x93, 0xb4, 0xfc, 0x5f, 0x61, 0x0f, 0x72, 0x0b, 0xd6, 0xf5, 0xfc,
	0x5f, 0x7c, 0x85, 0x9d, 0x47, 0x64, 0x38, 0x3b, 0xc3, 0x96, 0x23, 0x8e, 0x5f, 0x3f, 0xc5, 0x26,
	0x23, 0x8e, 0xbf, 0x79, 0x8d, 0x1d, 0x46, 0x1c, 0x7f, 0xf7, 0x1a, 0x5b, 0x8b, 0xaa, 0xb8, 0xd6,
	0x0a, 0x3a, 0x39, 0xc7, 0xae, 0x22, 0x22, 0xe7, 0x0a, 0xb9, 0x59, 0x46, 0x4e, 0x9f, 0x9d, 0x9c,
	0x63, 0x07, 0xd1, 0x22, 0xc7, 0x27, 0xe7, 0xa6, 0x79, 0x68, 0x91, 0x17, 0x0a, 0xb9, 0x63, 0x97,
	0x4a, 0x12, 0x9a, 0x46, 0x5f, 0x9e, 0x79, 0xef, 0x54, 0x80, 0xf3, 0x33, 0xef, 0xdd, 0x0a, 0x70,
	0xfa, 0xcc, 0x3b, 0xa8, 0x02, 0xc7, 0xde, 0xdd, 0x0a, 0xf0, 0xe2, 0xd8, 0xf3, 0x2b, 0xc0, 0x2f,
	0x9f, 0x7a, 0xef, 0x59, 0x37, 0x36, 0xaf, 0x48, 0x4a, 0xe2, 0x3f, 0x9f, 0x48, 0xef, 0x7d, 0xcb,
	0xa7, 0x7f, 0x49, 0x7f, 0x79, 0xe6, 0xdd, 0xab, 0x00, 0xe7, 0x67, 0xde, 0x07, 0x15, 0xe0, 0xf4,
	0x99, 0xf7, 0x93, 0x2a, 0x70, 0xec, 0xdd, 0xaf, 0x00, 0x2f, 0x8e, 0xbd, 0x0f, 0x7f, 0xe4, 0xb7,
	0xf1, 0x4f, 0x7f, 0xec, 0xb7, 0xf1, 0x1f, 0xe9, 0x8c, 0x52, 0xde, 0x3d, 0xd5, 0xa0, 0xbc, 0x70,
	0xf7, 0xd8, 0x80, 0x7c, 0xe2, 0x0a, 0x97, 0x53, 0x1d, 0x58, 0xab, 0x21, 0xd6, 0xfd, 0x5b, 0x30,
	0x50, 0xb5, 0x6d, 0x62, 0xf9, 0xdc, 0x3e, 0x2e, 0x95, 0x20, 0x66, 0xba, 0xb7, 0x94, 0x20, 0x86,
	0xc9, 0xff, 0x5d, 0x03, 0xba, 0xee, 0xde, 0x1e, 0xbe, 0x53, 0xeb, 0xf2, 0xbe, 0x25, 0xd4, 0xb9,
	0x76, 0x86, 0xa3, 0xaa, 0xca, 0xdd, 0x66, 0xb6, 0xdd, 0x12, 0x3e, 0x49, 0xcd, 0x2d, 0x9d, 0xa2,
	0x51, 0xf8, 0x00, 0x76, 0x4a, 0xe4, 0xe2, 0x4e, 0x20, 0x56, 0x27, 0xfd, 0xc1, 0x9c, 0x3b, 0x85,
	0xd5, 0x19, 0xcd, 0x45, 0x23, 0xfd, 0x8e, 0x09, 0x0c, 0x3f, 0x9d, 0x43, 0xd6, 0x0d, 0xf4, 0xf5,
	0xb9, 0x7f, 0xb4, 0xeb, 0xc2, 0x2f, 0x32, 0x5f, 0x8d, 0xcd, 0xff, 0xf7, 0x06, 0x6c, 0x3b, 0xd0,
	0xf6, 0xc7, 0x77, 0x61, 0xb3, 0x2c, 0x8e, 0x35, 0xe3, 0x4d, 0xe8, 0x95, 0xe0, 0x6a, 0x95, 0x5d,
	0xa5, 0xd9, 0x9f, 0xdb, 0x45, 0x25, 0x5a, 0x9e, 0xce, 0x96, 0xdc, 0xcd, 0x7a, 0x8d, 0xbb, 0x6a,
	0x4d, 0x50, 0x80, 0xb5, 0x1f, 0x45, 0xa5, 0x59, 0x8a, 0x4c, 0xb4, 0xae, 0xfd, 0xe6, 0x33, 0xd8,
	0x9f, 0x11, 0x63, 0x41, 0xef, 0x6b, 0x86, 0xcf, 0xff, 0xb7, 0x25, 0xd8, 0x29, 0xa1, 0x9c, 0xc7,
	0xd8, 0x86, 0xaf, 0x09, 0x5c, 0xf1, 0x69, 0x75, 0xea, 0xaa, 0x29, 0x63, 0x71, 0x67, 0x7e, 0x0e,
	0xf3, 0xe2, 0x26, 0xfd, 0x1c, 0xe6, 0xc5, 0xfd, 0xfa, 0x39, 0xcc, 0x8b, 0x5b, 0xf7, 0x73, 0x98,
	0x17, 0x77, 0xf1, 0xe7, 0x30, 0x2f, 0x6e, 0xe8, 0xab, 0xd2, 0x6e, 0x8e, 0x06, 0x17, 0x95, 0x76,
	0x73, 0x58, 0xfd, 0xbf, 0x59, 0x82, 0x8d, 0x33, 0x4a, 0x12, 0xb5, 0x43, 0x2a, 0xf9, 0x77, 0x07,
	0xda, 0xb6, 0xe6, 0x92, 0x94, 0x24, 0xa8, 0x64, 0x1f, 0x36, 0x8b, 0x8a, 0x4b, 0xc3, 0xcb, 0x73,
	0xef, 0x2a, 0x69, 0x1e, 0x5d, 0x8c, 0xcf, 0xb9, 0xcb, 0x74, 0x17, 0x67, 0x8e, 0x18, 0x49, 0x78,
	0x3a, 0xb7, 0x0f, 0xf9, 0x3e, 0x16, 0x76, 0xb6, 0x28, 0x4b, 0xe9, 0x9c, 0xfb, 0x4c, 0x75, 0x2e,
	0x79, 0xc9, 0xe7, 0x9d, 0x33, 0x3e, 0x80, 0xed, 0x0a, 0xd7, 0x58, 0x50, 0x3a, 0xe7, 0xb4, 0xe1,
	0x7f, 0x08, 0x1d, 0xab, 0x88, 0x05, 0x17, 0x1d, 0x2c, 0xd9, 0xff, 0xe7, 0x06, 0x6c, 0x9f, 0x8d,
	0x05, 0xbf, 0xa4, 0xe2, 0x79, 0xfa, 0x07, 0x7c, 0x9b, 0xf5, 0x33, 0xd8, 0x9f, 0x59, 0xe6, 0x82,
	0xfd, 0x39, 0xc3, 0xe7, 0x7f, 0x0c, 0x70, 0x26, 0x08, 0x4b, 0x59, 0x3a, 0x7a, 0xcc, 0x2a, 0xc2,
	0xed, 0xc2, 0xe6, 0x05, 0x1d, 0x93, 0x29, 0xe3, 0x22, 0x90, 0x4a, 0x9b, 0xe6, 0x66, 0xc7, 0x47,
	0xd0, 0x75, 0x2f, 0x2c, 0xe8, 0x82, 0x39, 0x06, 0xff, 0x17, 0xd0, 0xb2, 0xa3, 0x97, 0x59, 0x58,
	0xef, 0x88, 0x56, 0xaf, 0xf3, 0xb8, 0xe3, 0xb7, 0xb9, 0x8d, 0xfd, 0x31, 0x6c, 0x97, 0xde, 0x5d,
	0x70, 0x19, 0xa2, 0xc4, 0xe1, 0xff, 0xa6, 0x01, 0x5b, 0x76, 0x7c, 0x4a, 0xc3, 0x19, 0x7b, 0xb9,
	0xfb, 0xe2, 0xc5, 0x31, 0x4b, 0xdf, 0x07, 0x67, 0xae, 0xef, 0xd6, 0x87, 0x96, 0x82, 0xb2, 0x69,
	0x16, 0x64, 0x3c, 0x2f, 0xee, 0xa9, 0xad, 0x6b, 0x70, 0xee, 0x25, 0xee, 0x1d, 0x68, 0x2b, 0x62,
	0x61, 0xa6, 0x35, 0x7b, 0x7d, 0xba, 0xb6, 0x92, 0x05, 0x9d, 0xf0, 0x1a, 0xd7, 0xff, 0x07, 0x00,
	0x00, 0xff, 0xff, 0x75, 0xab, 0x8f, 0xa0, 0x32, 0x30, 0x00, 0x00,
}
