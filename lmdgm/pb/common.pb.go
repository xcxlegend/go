// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Vec2 struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Vec2) Reset()                    { *m = Vec2{} }
func (m *Vec2) String() string            { return proto.CompactTextString(m) }
func (*Vec2) ProtoMessage()               {}
func (*Vec2) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Vec2) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vec2) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type Vec3 struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Z                *int32 `protobuf:"varint,3,opt,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Vec3) Reset()                    { *m = Vec3{} }
func (m *Vec3) String() string            { return proto.CompactTextString(m) }
func (*Vec3) ProtoMessage()               {}
func (*Vec3) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Vec3) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vec3) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vec3) GetZ() int32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

// 服务器时间
type ServerTime struct {
	Timestamp        *int64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Year             *int32 `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	Month            *int32 `protobuf:"varint,3,opt,name=month" json:"month,omitempty"`
	Day              *int32 `protobuf:"varint,4,opt,name=day" json:"day,omitempty"`
	Hour             *int32 `protobuf:"varint,5,opt,name=hour" json:"hour,omitempty"`
	Minute           *int32 `protobuf:"varint,6,opt,name=minute" json:"minute,omitempty"`
	Second           *int32 `protobuf:"varint,7,opt,name=second" json:"second,omitempty"`
	Timezone         *int32 `protobuf:"varint,8,opt,name=timezone" json:"timezone,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ServerTime) Reset()                    { *m = ServerTime{} }
func (m *ServerTime) String() string            { return proto.CompactTextString(m) }
func (*ServerTime) ProtoMessage()               {}
func (*ServerTime) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ServerTime) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ServerTime) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *ServerTime) GetMonth() int32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *ServerTime) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *ServerTime) GetHour() int32 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

func (m *ServerTime) GetMinute() int32 {
	if m != nil && m.Minute != nil {
		return *m.Minute
	}
	return 0
}

func (m *ServerTime) GetSecond() int32 {
	if m != nil && m.Second != nil {
		return *m.Second
	}
	return 0
}

func (m *ServerTime) GetTimezone() int32 {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return 0
}

// 服务器时间
type ServerTimeC2S struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ServerTimeC2S) Reset()                    { *m = ServerTimeC2S{} }
func (m *ServerTimeC2S) String() string            { return proto.CompactTextString(m) }
func (*ServerTimeC2S) ProtoMessage()               {}
func (*ServerTimeC2S) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ServerTimeC2S) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 时间记录
type TimeRecord struct {
	Create            *int64 `protobuf:"varint,1,opt,name=create" json:"create,omitempty"`
	LastLogin         *int64 `protobuf:"varint,2,opt,name=lastLogin" json:"lastLogin,omitempty"`
	CommonFreeRecruit *int64 `protobuf:"varint,5,opt,name=commonFreeRecruit" json:"commonFreeRecruit,omitempty"`
	SeniorFreeRecruit *int64 `protobuf:"varint,6,opt,name=seniorFreeRecruit" json:"seniorFreeRecruit,omitempty"`
	LastMailTime      *int64 `protobuf:"varint,7,opt,name=lastMailTime" json:"lastMailTime,omitempty"`
	LastPVPResultGet  *int64 `protobuf:"varint,8,opt,name=lastPVPResultGet" json:"lastPVPResultGet,omitempty"`
	LastCommonRecruit *int64 `protobuf:"varint,9,opt,name=lastCommonRecruit" json:"lastCommonRecruit,omitempty"`
	LastSeniorRecruit *int64 `protobuf:"varint,10,opt,name=lastSeniorRecruit" json:"lastSeniorRecruit,omitempty"`
	LastSign          *int64 `protobuf:"varint,11,opt,name=lastSign" json:"lastSign,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *TimeRecord) Reset()                    { *m = TimeRecord{} }
func (m *TimeRecord) String() string            { return proto.CompactTextString(m) }
func (*TimeRecord) ProtoMessage()               {}
func (*TimeRecord) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *TimeRecord) GetCreate() int64 {
	if m != nil && m.Create != nil {
		return *m.Create
	}
	return 0
}

func (m *TimeRecord) GetLastLogin() int64 {
	if m != nil && m.LastLogin != nil {
		return *m.LastLogin
	}
	return 0
}

func (m *TimeRecord) GetCommonFreeRecruit() int64 {
	if m != nil && m.CommonFreeRecruit != nil {
		return *m.CommonFreeRecruit
	}
	return 0
}

func (m *TimeRecord) GetSeniorFreeRecruit() int64 {
	if m != nil && m.SeniorFreeRecruit != nil {
		return *m.SeniorFreeRecruit
	}
	return 0
}

func (m *TimeRecord) GetLastMailTime() int64 {
	if m != nil && m.LastMailTime != nil {
		return *m.LastMailTime
	}
	return 0
}

func (m *TimeRecord) GetLastPVPResultGet() int64 {
	if m != nil && m.LastPVPResultGet != nil {
		return *m.LastPVPResultGet
	}
	return 0
}

func (m *TimeRecord) GetLastCommonRecruit() int64 {
	if m != nil && m.LastCommonRecruit != nil {
		return *m.LastCommonRecruit
	}
	return 0
}

func (m *TimeRecord) GetLastSeniorRecruit() int64 {
	if m != nil && m.LastSeniorRecruit != nil {
		return *m.LastSeniorRecruit
	}
	return 0
}

func (m *TimeRecord) GetLastSign() int64 {
	if m != nil && m.LastSign != nil {
		return *m.LastSign
	}
	return 0
}

// 次数记录
type NumberRecord struct {
	CommonRecruitM       *int32  `protobuf:"varint,1,opt,name=commonRecruitM" json:"commonRecruitM,omitempty"`
	SeniorRecruitN       *int32  `protobuf:"varint,2,opt,name=seniorRecruitN" json:"seniorRecruitN,omitempty"`
	FirstCommonRecruit   *int32  `protobuf:"varint,3,opt,name=firstCommonRecruit" json:"firstCommonRecruit,omitempty"`
	FirstSeniorRecruit   *int32  `protobuf:"varint,4,opt,name=firstSeniorRecruit" json:"firstSeniorRecruit,omitempty"`
	FreeCommonRecruitCnt *int32  `protobuf:"varint,5,opt,name=freeCommonRecruitCnt" json:"freeCommonRecruitCnt,omitempty"`
	MaxCommonRecruitCnt  *int32  `protobuf:"varint,6,opt,name=maxCommonRecruitCnt" json:"maxCommonRecruitCnt,omitempty"`
	MaxSeniorRecruitCnt  *int32  `protobuf:"varint,7,opt,name=maxSeniorRecruitCnt" json:"maxSeniorRecruitCnt,omitempty"`
	PvpElo               *int32  `protobuf:"varint,8,opt,name=pvpElo" json:"pvpElo,omitempty"`
	PvpStar              *int32  `protobuf:"varint,9,opt,name=pvpStar" json:"pvpStar,omitempty"`
	PvpLevel             *int32  `protobuf:"varint,10,opt,name=pvpLevel" json:"pvpLevel,omitempty"`
	TotalSignIn          *int32  `protobuf:"varint,11,opt,name=totalSignIn" json:"totalSignIn,omitempty"`
	RemedySignIn         *int32  `protobuf:"varint,12,opt,name=remedySignIn" json:"remedySignIn,omitempty"`
	SignInRecord         []int32 `protobuf:"varint,13,rep,name=signInRecord" json:"signInRecord,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *NumberRecord) Reset()                    { *m = NumberRecord{} }
func (m *NumberRecord) String() string            { return proto.CompactTextString(m) }
func (*NumberRecord) ProtoMessage()               {}
func (*NumberRecord) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *NumberRecord) GetCommonRecruitM() int32 {
	if m != nil && m.CommonRecruitM != nil {
		return *m.CommonRecruitM
	}
	return 0
}

func (m *NumberRecord) GetSeniorRecruitN() int32 {
	if m != nil && m.SeniorRecruitN != nil {
		return *m.SeniorRecruitN
	}
	return 0
}

func (m *NumberRecord) GetFirstCommonRecruit() int32 {
	if m != nil && m.FirstCommonRecruit != nil {
		return *m.FirstCommonRecruit
	}
	return 0
}

func (m *NumberRecord) GetFirstSeniorRecruit() int32 {
	if m != nil && m.FirstSeniorRecruit != nil {
		return *m.FirstSeniorRecruit
	}
	return 0
}

func (m *NumberRecord) GetFreeCommonRecruitCnt() int32 {
	if m != nil && m.FreeCommonRecruitCnt != nil {
		return *m.FreeCommonRecruitCnt
	}
	return 0
}

func (m *NumberRecord) GetMaxCommonRecruitCnt() int32 {
	if m != nil && m.MaxCommonRecruitCnt != nil {
		return *m.MaxCommonRecruitCnt
	}
	return 0
}

func (m *NumberRecord) GetMaxSeniorRecruitCnt() int32 {
	if m != nil && m.MaxSeniorRecruitCnt != nil {
		return *m.MaxSeniorRecruitCnt
	}
	return 0
}

func (m *NumberRecord) GetPvpElo() int32 {
	if m != nil && m.PvpElo != nil {
		return *m.PvpElo
	}
	return 0
}

func (m *NumberRecord) GetPvpStar() int32 {
	if m != nil && m.PvpStar != nil {
		return *m.PvpStar
	}
	return 0
}

func (m *NumberRecord) GetPvpLevel() int32 {
	if m != nil && m.PvpLevel != nil {
		return *m.PvpLevel
	}
	return 0
}

func (m *NumberRecord) GetTotalSignIn() int32 {
	if m != nil && m.TotalSignIn != nil {
		return *m.TotalSignIn
	}
	return 0
}

func (m *NumberRecord) GetRemedySignIn() int32 {
	if m != nil && m.RemedySignIn != nil {
		return *m.RemedySignIn
	}
	return 0
}

func (m *NumberRecord) GetSignInRecord() []int32 {
	if m != nil {
		return m.SignInRecord
	}
	return nil
}

type GamerId struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerId) Reset()                    { *m = GamerId{} }
func (m *GamerId) String() string            { return proto.CompactTextString(m) }
func (*GamerId) ProtoMessage()               {}
func (*GamerId) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GamerId) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 玩家主信息
type Gamer struct {
	Id               *int32        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Level            *int32        `protobuf:"varint,3,opt,name=level,def=1" json:"level,omitempty"`
	Server           *int32        `protobuf:"varint,4,opt,name=server" json:"server,omitempty"`
	Allrmb           *int32        `protobuf:"varint,5,opt,name=allrmb" json:"allrmb,omitempty"`
	Vip              *int32        `protobuf:"varint,7,opt,name=vip" json:"vip,omitempty"`
	Money            *ItemConfig   `protobuf:"bytes,11,opt,name=money" json:"money,omitempty"`
	Icon             *int32        `protobuf:"varint,12,opt,name=icon,def=1" json:"icon,omitempty"`
	Exper            *ItemConfig   `protobuf:"bytes,14,opt,name=exper" json:"exper,omitempty"`
	Energy           *int32        `protobuf:"varint,15,opt,name=energy" json:"energy,omitempty"`
	ServerIp         *string       `protobuf:"bytes,16,opt,name=serverIp" json:"serverIp,omitempty"`
	ServerPort       *int32        `protobuf:"varint,17,opt,name=serverPort" json:"serverPort,omitempty"`
	Sign             *string       `protobuf:"bytes,18,opt,name=sign" json:"sign,omitempty"`
	Diamond          *ItemConfig   `protobuf:"bytes,21,opt,name=diamond" json:"diamond,omitempty"`
	Session          *string       `protobuf:"bytes,22,opt,name=session" json:"session,omitempty"`
	NumberRecord     *NumberRecord `protobuf:"bytes,99,opt,name=numberRecord" json:"numberRecord,omitempty"`
	TimeRecord       *TimeRecord   `protobuf:"bytes,100,opt,name=timeRecord" json:"timeRecord,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Gamer) Reset()                    { *m = Gamer{} }
func (m *Gamer) String() string            { return proto.CompactTextString(m) }
func (*Gamer) ProtoMessage()               {}
func (*Gamer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

const Default_Gamer_Level int32 = 1
const Default_Gamer_Icon int32 = 1

func (m *Gamer) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Gamer) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Gamer) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return Default_Gamer_Level
}

func (m *Gamer) GetServer() int32 {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return 0
}

func (m *Gamer) GetAllrmb() int32 {
	if m != nil && m.Allrmb != nil {
		return *m.Allrmb
	}
	return 0
}

func (m *Gamer) GetVip() int32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *Gamer) GetMoney() *ItemConfig {
	if m != nil {
		return m.Money
	}
	return nil
}

func (m *Gamer) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return Default_Gamer_Icon
}

func (m *Gamer) GetExper() *ItemConfig {
	if m != nil {
		return m.Exper
	}
	return nil
}

func (m *Gamer) GetEnergy() int32 {
	if m != nil && m.Energy != nil {
		return *m.Energy
	}
	return 0
}

func (m *Gamer) GetServerIp() string {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return ""
}

func (m *Gamer) GetServerPort() int32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *Gamer) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

func (m *Gamer) GetDiamond() *ItemConfig {
	if m != nil {
		return m.Diamond
	}
	return nil
}

func (m *Gamer) GetSession() string {
	if m != nil && m.Session != nil {
		return *m.Session
	}
	return ""
}

func (m *Gamer) GetNumberRecord() *NumberRecord {
	if m != nil {
		return m.NumberRecord
	}
	return nil
}

func (m *Gamer) GetTimeRecord() *TimeRecord {
	if m != nil {
		return m.TimeRecord
	}
	return nil
}

type GamerMini struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Level            *int32  `protobuf:"varint,3,opt,name=level,def=1" json:"level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GamerMini) Reset()                    { *m = GamerMini{} }
func (m *GamerMini) String() string            { return proto.CompactTextString(m) }
func (*GamerMini) ProtoMessage()               {}
func (*GamerMini) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

const Default_GamerMini_Level int32 = 1

func (m *GamerMini) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GamerMini) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GamerMini) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return Default_GamerMini_Level
}

// 充值事件
type GamerRecharge struct {
	Rmb              *int32  `protobuf:"varint,1,opt,name=rmb" json:"rmb,omitempty"`
	Gamer            *uint32 `protobuf:"varint,2,opt,name=gamer" json:"gamer,omitempty"`
	GoodId           *int32  `protobuf:"varint,3,opt,name=goodId" json:"goodId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GamerRecharge) Reset()                    { *m = GamerRecharge{} }
func (m *GamerRecharge) String() string            { return proto.CompactTextString(m) }
func (*GamerRecharge) ProtoMessage()               {}
func (*GamerRecharge) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *GamerRecharge) GetRmb() int32 {
	if m != nil && m.Rmb != nil {
		return *m.Rmb
	}
	return 0
}

func (m *GamerRecharge) GetGamer() uint32 {
	if m != nil && m.Gamer != nil {
		return *m.Gamer
	}
	return 0
}

func (m *GamerRecharge) GetGoodId() int32 {
	if m != nil && m.GoodId != nil {
		return *m.GoodId
	}
	return 0
}

// 球员特质属性
type PlayerSpeciality struct {
	SlotId              *int32 `protobuf:"varint,1,opt,name=SlotId" json:"SlotId,omitempty"`
	PropertyId          *int32 `protobuf:"varint,2,opt,name=PropertyId" json:"PropertyId,omitempty"`
	SpecialityId        *int32 `protobuf:"varint,3,opt,name=SpecialityId" json:"SpecialityId,omitempty"`
	SpecialityUpdateCnt *int32 `protobuf:"varint,4,opt,name=SpecialityUpdateCnt" json:"SpecialityUpdateCnt,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *PlayerSpeciality) Reset()                    { *m = PlayerSpeciality{} }
func (m *PlayerSpeciality) String() string            { return proto.CompactTextString(m) }
func (*PlayerSpeciality) ProtoMessage()               {}
func (*PlayerSpeciality) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *PlayerSpeciality) GetSlotId() int32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *PlayerSpeciality) GetPropertyId() int32 {
	if m != nil && m.PropertyId != nil {
		return *m.PropertyId
	}
	return 0
}

func (m *PlayerSpeciality) GetSpecialityId() int32 {
	if m != nil && m.SpecialityId != nil {
		return *m.SpecialityId
	}
	return 0
}

func (m *PlayerSpeciality) GetSpecialityUpdateCnt() int32 {
	if m != nil && m.SpecialityUpdateCnt != nil {
		return *m.SpecialityUpdateCnt
	}
	return 0
}

// 已拥有球员
type Player struct {
	Id               *int32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level            *int32              `protobuf:"varint,2,opt,name=level,def=1" json:"level,omitempty"`
	Experience       *int32              `protobuf:"varint,3,opt,name=experience" json:"experience,omitempty"`
	Speciality       []*PlayerSpeciality `protobuf:"bytes,4,rep,name=Speciality" json:"Speciality,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Player) Reset()                    { *m = Player{} }
func (m *Player) String() string            { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()               {}
func (*Player) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

const Default_Player_Level int32 = 1

func (m *Player) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Player) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return Default_Player_Level
}

func (m *Player) GetExperience() int32 {
	if m != nil && m.Experience != nil {
		return *m.Experience
	}
	return 0
}

func (m *Player) GetSpeciality() []*PlayerSpeciality {
	if m != nil {
		return m.Speciality
	}
	return nil
}

// 代理
type GamerProxy struct {
	Gamer            *Gamer    `protobuf:"bytes,1,opt,name=gamer" json:"gamer,omitempty"`
	Players          []*Player `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GamerProxy) Reset()                    { *m = GamerProxy{} }
func (m *GamerProxy) String() string            { return proto.CompactTextString(m) }
func (*GamerProxy) ProtoMessage()               {}
func (*GamerProxy) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *GamerProxy) GetGamer() *Gamer {
	if m != nil {
		return m.Gamer
	}
	return nil
}

func (m *GamerProxy) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

// 邮件
type Mail struct {
	Id               *int64        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MailType         *int32        `protobuf:"varint,2,opt,name=mailType" json:"mailType,omitempty"`
	Time             *int64        `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	Theme            *string       `protobuf:"bytes,4,opt,name=theme" json:"theme,omitempty"`
	Msg              *string       `protobuf:"bytes,5,opt,name=msg" json:"msg,omitempty"`
	Attachments      []*ItemConfig `protobuf:"bytes,6,rep,name=attachments" json:"attachments,omitempty"`
	State            *int32        `protobuf:"varint,7,opt,name=state,def=0" json:"state,omitempty"`
	AttachmentState  *int32        `protobuf:"varint,8,opt,name=attachmentState,def=0" json:"attachmentState,omitempty"`
	ServerId         *int32        `protobuf:"varint,9,opt,name=serverId" json:"serverId,omitempty"`
	SenderId         *int32        `protobuf:"varint,10,opt,name=senderId" json:"senderId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Mail) Reset()                    { *m = Mail{} }
func (m *Mail) String() string            { return proto.CompactTextString(m) }
func (*Mail) ProtoMessage()               {}
func (*Mail) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

const Default_Mail_State int32 = 0
const Default_Mail_AttachmentState int32 = 0

func (m *Mail) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Mail) GetMailType() int32 {
	if m != nil && m.MailType != nil {
		return *m.MailType
	}
	return 0
}

func (m *Mail) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Mail) GetTheme() string {
	if m != nil && m.Theme != nil {
		return *m.Theme
	}
	return ""
}

func (m *Mail) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *Mail) GetAttachments() []*ItemConfig {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Mail) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_Mail_State
}

func (m *Mail) GetAttachmentState() int32 {
	if m != nil && m.AttachmentState != nil {
		return *m.AttachmentState
	}
	return Default_Mail_AttachmentState
}

func (m *Mail) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *Mail) GetSenderId() int32 {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return 0
}

// 好友请求
type FriendRequest struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Oid              *int32  `protobuf:"varint,2,opt,name=oid" json:"oid,omitempty"`
	Msg              *string `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
	Time             *int64  `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
	Name             *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FriendRequest) Reset()                    { *m = FriendRequest{} }
func (m *FriendRequest) String() string            { return proto.CompactTextString(m) }
func (*FriendRequest) ProtoMessage()               {}
func (*FriendRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *FriendRequest) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FriendRequest) GetOid() int32 {
	if m != nil && m.Oid != nil {
		return *m.Oid
	}
	return 0
}

func (m *FriendRequest) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *FriendRequest) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *FriendRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// 拉黑的玩家
type BlackGamer struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BlackGamer) Reset()                    { *m = BlackGamer{} }
func (m *BlackGamer) String() string            { return proto.CompactTextString(m) }
func (*BlackGamer) ProtoMessage()               {}
func (*BlackGamer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *BlackGamer) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Vec2)(nil), "Vec2")
	proto.RegisterType((*Vec3)(nil), "Vec3")
	proto.RegisterType((*ServerTime)(nil), "ServerTime")
	proto.RegisterType((*ServerTimeC2S)(nil), "ServerTimeC2S")
	proto.RegisterType((*TimeRecord)(nil), "TimeRecord")
	proto.RegisterType((*NumberRecord)(nil), "NumberRecord")
	proto.RegisterType((*GamerId)(nil), "GamerId")
	proto.RegisterType((*Gamer)(nil), "Gamer")
	proto.RegisterType((*GamerMini)(nil), "GamerMini")
	proto.RegisterType((*GamerRecharge)(nil), "GamerRecharge")
	proto.RegisterType((*PlayerSpeciality)(nil), "PlayerSpeciality")
	proto.RegisterType((*Player)(nil), "Player")
	proto.RegisterType((*GamerProxy)(nil), "GamerProxy")
	proto.RegisterType((*Mail)(nil), "Mail")
	proto.RegisterType((*FriendRequest)(nil), "FriendRequest")
	proto.RegisterType((*BlackGamer)(nil), "BlackGamer")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x6e, 0xe3, 0x36,
	0x10, 0x86, 0x2d, 0xcb, 0x8e, 0xc7, 0x3f, 0xb1, 0xb9, 0x49, 0xc0, 0xba, 0x01, 0x1a, 0xa8, 0x28,
	0x9a, 0x93, 0xd1, 0xa6, 0x87, 0x02, 0x2d, 0x7a, 0x69, 0xd0, 0x5d, 0x18, 0xd8, 0x2c, 0xdc, 0xb8,
	0xdd, 0x3b, 0x57, 0x9a, 0xd8, 0x44, 0x45, 0x52, 0xa5, 0x68, 0x23, 0xda, 0x37, 0xe8, 0x6b, 0xed,
	0x7b, 0xf4, 0xd2, 0x27, 0x29, 0x38, 0xa2, 0x62, 0x7b, 0xb3, 0x97, 0xbd, 0x89, 0xfc, 0x38, 0x1f,
	0xbf, 0xf9, 0x66, 0x38, 0x82, 0x61, 0x6a, 0x94, 0x32, 0x7a, 0x5e, 0x58, 0xe3, 0xcc, 0x0c, 0x52,
	0xa3, 0x1f, 0xea, 0xef, 0xe4, 0x12, 0x3a, 0x6f, 0x31, 0xbd, 0x61, 0x7d, 0x68, 0x3d, 0xf2, 0xd6,
	0x55, 0xeb, 0x3a, 0xf6, 0x9f, 0x15, 0x6f, 0xfb, 0xcf, 0xe4, 0x5b, 0x42, 0x7f, 0xf8, 0x34, 0xea,
	0x3f, 0xdf, 0xf3, 0x88, 0x0e, 0xfe, 0xd3, 0x02, 0x58, 0xa1, 0xdd, 0xa1, 0xfd, 0x43, 0x2a, 0x64,
	0x53, 0xe8, 0x3b, 0xa9, 0xb0, 0x74, 0x42, 0x15, 0x14, 0x17, 0xb1, 0x21, 0x74, 0x2a, 0x14, 0x36,
	0x84, 0x8e, 0x20, 0x56, 0x46, 0xbb, 0x4d, 0x1d, 0xce, 0x06, 0x10, 0x65, 0xa2, 0xe2, 0x1d, 0x5a,
	0x0c, 0xa1, 0xb3, 0x31, 0x5b, 0xcb, 0x63, 0x5a, 0x8d, 0xa1, 0xab, 0xa4, 0xde, 0x3a, 0xe4, 0xdd,
	0x66, 0x5d, 0x62, 0x6a, 0x74, 0xc6, 0x7b, 0xb4, 0x9e, 0xc0, 0x89, 0xbf, 0xea, 0xbd, 0xd1, 0xc8,
	0x4f, 0x48, 0xcb, 0x25, 0x8c, 0xf6, 0x52, 0x6e, 0x6f, 0x56, 0x9e, 0x7d, 0x2d, 0xb3, 0x5a, 0x7f,
	0xf2, 0x6f, 0x0b, 0xc0, 0x03, 0xf7, 0x98, 0x1a, 0x9b, 0x79, 0xba, 0xd4, 0xa2, 0x70, 0x18, 0x64,
	0x4e, 0xa1, 0x9f, 0x8b, 0xd2, 0xbd, 0x36, 0x6b, 0xa9, 0x49, 0x6b, 0xc4, 0xbe, 0x80, 0x69, 0x6d,
	0xdf, 0x4b, 0x8b, 0x3e, 0xcc, 0x6e, 0xa5, 0x23, 0x71, 0x04, 0x95, 0xa8, 0xa5, 0xb1, 0x87, 0x50,
	0x97, 0xa0, 0x33, 0x18, 0x7a, 0xa2, 0x3b, 0x21, 0x73, 0x7f, 0x1d, 0xa9, 0x8d, 0x18, 0x87, 0x89,
	0xdf, 0x5d, 0xbe, 0x5d, 0xde, 0x63, 0xb9, 0xcd, 0xdd, 0x2b, 0x74, 0xa4, 0x9a, 0xa8, 0x3c, 0x72,
	0x4b, 0x37, 0x35, 0x54, 0xfd, 0x43, 0x68, 0x45, 0x37, 0x35, 0x10, 0x10, 0x34, 0x81, 0x13, 0x82,
	0xe4, 0x5a, 0xf3, 0x81, 0xdf, 0x49, 0x3e, 0xb4, 0x61, 0xf8, 0x66, 0xab, 0xde, 0xa1, 0x0d, 0x19,
	0x5e, 0xc0, 0x38, 0x3d, 0x24, 0xbd, 0x0b, 0x85, 0xbc, 0x80, 0x71, 0x79, 0xc8, 0xf8, 0x26, 0x94,
	0x66, 0x06, 0xec, 0x41, 0xda, 0x8f, 0x95, 0x44, 0x47, 0xd8, 0xb1, 0x94, 0xba, 0x6c, 0x97, 0x70,
	0xf6, 0x60, 0x11, 0x8f, 0xc2, 0x6e, 0xb5, 0x0b, 0x65, 0xfc, 0x12, 0x5e, 0x28, 0xf1, 0xf8, 0x0c,
	0xec, 0x1e, 0x80, 0x47, 0xa4, 0x1e, 0xec, 0x35, 0x05, 0x2f, 0x76, 0xc5, 0x6f, 0xb9, 0xa9, 0xcb,
	0xcb, 0x4e, 0xa1, 0x57, 0xec, 0x8a, 0x95, 0x13, 0x96, 0xec, 0xa1, 0x0e, 0x28, 0x76, 0xc5, 0x6b,
	0xdc, 0x61, 0x4e, 0xae, 0xc4, 0xec, 0x05, 0x0c, 0x9c, 0x71, 0x22, 0xf7, 0xb6, 0x2c, 0x6a, 0x63,
	0x62, 0x5f, 0x10, 0x8b, 0x0a, 0xb3, 0x2a, 0xec, 0x0e, 0x9b, 0xdd, 0x92, 0xd6, 0xb5, 0x5b, 0x7c,
	0x74, 0x15, 0x5d, 0xc7, 0xc9, 0x39, 0xf4, 0x5e, 0x09, 0x85, 0x76, 0x91, 0x31, 0x80, 0xf6, 0x53,
	0xef, 0xfc, 0xd7, 0x86, 0x98, 0xf6, 0x0f, 0x77, 0x7d, 0xbf, 0x6a, 0xa1, 0x90, 0xec, 0xeb, 0xb3,
	0x09, 0xc4, 0x39, 0x49, 0x21, 0xc7, 0x7e, 0x6a, 0x7d, 0x5f, 0x77, 0xac, 0xef, 0xc7, 0x60, 0xd4,
	0x18, 0xba, 0x22, 0xcf, 0xad, 0x7a, 0x17, 0xac, 0x19, 0x40, 0xb4, 0x93, 0x45, 0xc8, 0x76, 0x46,
	0x0f, 0x03, 0x2b, 0x12, 0x3d, 0xb8, 0x19, 0xcc, 0x17, 0x0e, 0xd5, 0xad, 0xd1, 0x0f, 0x72, 0xcd,
	0x4e, 0xa1, 0x23, 0x53, 0x13, 0x94, 0x7b, 0xe6, 0x19, 0xc4, 0xf8, 0x58, 0xa0, 0xe5, 0xe3, 0xe7,
	0x87, 0xc7, 0xd0, 0x45, 0x8d, 0x76, 0x5d, 0xf1, 0xd3, 0xc6, 0xa5, 0x5a, 0xc5, 0xa2, 0xe0, 0x13,
	0x52, 0xca, 0x00, 0xea, 0x9d, 0xa5, 0xb1, 0x8e, 0x4f, 0x9b, 0x5c, 0xbc, 0x1d, 0x9c, 0xd1, 0x89,
	0x4b, 0xe8, 0x65, 0x52, 0x28, 0xff, 0xd8, 0xce, 0x3f, 0x25, 0xa7, 0x57, 0x62, 0x59, 0x4a, 0xa3,
	0xf9, 0x05, 0x1d, 0xff, 0x1a, 0x86, 0xfa, 0xa0, 0xf3, 0x78, 0x4a, 0x31, 0xa3, 0xf9, 0x51, 0x3b,
	0x7e, 0x05, 0xe0, 0x9e, 0x9e, 0x1f, 0xcf, 0x02, 0xed, 0xfe, 0x45, 0x26, 0x3f, 0x42, 0x9f, 0x3c,
	0xbe, 0x93, 0x5a, 0x7e, 0x8e, 0xcf, 0xc9, 0xcf, 0x30, 0xa2, 0xc0, 0x7b, 0x4c, 0x37, 0xc2, 0xae,
	0xd1, 0x1b, 0xeb, 0x5d, 0x6e, 0x35, 0x13, 0x67, 0xed, 0x51, 0x0a, 0x1f, 0x79, 0x7b, 0xd6, 0xc6,
	0x64, 0x8b, 0x2c, 0x0c, 0x30, 0x09, 0x93, 0x65, 0x2e, 0x2a, 0xb4, 0xab, 0x02, 0x53, 0x29, 0x72,
	0xe9, 0x2a, 0x7f, 0x66, 0x95, 0x1b, 0xb7, 0x68, 0x04, 0x30, 0x80, 0xa5, 0x35, 0x05, 0x5a, 0x57,
	0x2d, 0xb2, 0xf0, 0x5a, 0xce, 0x60, 0xb8, 0x8f, 0x68, 0xd8, 0x7c, 0x43, 0xef, 0x77, 0xff, 0x2c,
	0x32, 0xe1, 0xd0, 0x37, 0x34, 0xd5, 0x3f, 0x11, 0xd0, 0xad, 0xaf, 0x3a, 0xca, 0xee, 0x29, 0x9f,
	0x76, 0x53, 0x5d, 0x06, 0x40, 0xd5, 0x95, 0xa8, 0x53, 0x0c, 0xc4, 0xdf, 0x00, 0xec, 0x89, 0x79,
	0xe7, 0x2a, 0xba, 0x1e, 0xdc, 0x4c, 0xe7, 0x1f, 0x2b, 0x4f, 0x7e, 0x01, 0x20, 0x2b, 0x96, 0xd6,
	0x3c, 0x56, 0xec, 0xbc, 0x49, 0xbd, 0x45, 0x6e, 0x77, 0xe7, 0x75, 0x0f, 0x73, 0xe8, 0x15, 0x14,
	0x58, 0xf2, 0x36, 0x11, 0xf5, 0x02, 0x51, 0xf2, 0xa1, 0x05, 0x1d, 0x3f, 0xb8, 0x0e, 0x04, 0xd2,
	0xa8, 0x51, 0x7e, 0x98, 0x55, 0x05, 0x86, 0xdc, 0x87, 0xd0, 0xf1, 0xa5, 0x24, 0x69, 0x91, 0x37,
	0xd8, 0x6d, 0x50, 0x21, 0x65, 0xd9, 0xf7, 0xe6, 0xab, 0x72, 0x4d, 0x2d, 0xde, 0x67, 0x57, 0x30,
	0x10, 0xce, 0x89, 0x74, 0xa3, 0x50, 0xbb, 0x92, 0x77, 0xe9, 0xba, 0xa3, 0x66, 0x9a, 0x40, 0x5c,
	0x3a, 0x3f, 0x86, 0x7b, 0x75, 0xfa, 0xdf, 0xb1, 0x19, 0x9c, 0xee, 0x63, 0x56, 0x84, 0x9d, 0x34,
	0xd8, 0xbe, 0x99, 0xb3, 0xfd, 0x10, 0x28, 0x51, 0x67, 0xb4, 0x43, 0x43, 0x20, 0xf9, 0x1d, 0x46,
	0x2f, 0xbd, 0x77, 0xd9, 0x3d, 0xfe, 0xbd, 0xc5, 0xd2, 0x1d, 0xb9, 0x3d, 0x80, 0xc8, 0xc8, 0xa6,
	0x86, 0x41, 0x6a, 0x44, 0x52, 0x9b, 0xa4, 0x3a, 0xcd, 0x5f, 0x8b, 0x7a, 0x8e, 0xd2, 0x48, 0x38,
	0xc0, 0xaf, 0xb9, 0x48, 0xff, 0x7a, 0x36, 0x03, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x86,
	0x84, 0x15, 0x61, 0x07, 0x00, 0x00,
}
